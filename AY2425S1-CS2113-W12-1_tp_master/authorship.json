[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"    mainClass.set(\"seedu.healthmate.HealthMate\")","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"    archiveBaseName.set(\"healthmate\")","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":1,"kennethSty":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name       |            Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"--------|:---------------:|:-------------------------------------:|:---------:","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryan-txn"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Ryan Tan     | [Github](https://github.com/ryan-txn) | [Portfolio](docs/team/ryan-txn.md)","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Jonas Seet    | [Github](https://github.com/dri-water) | [Portfolio](https://github.com/dri-water)","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Ryan Leong    | [Github](https://github.com/ryryry-3302) | [Portfolio](https://github.com/ryryry-3302)","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Kenneth Styppa  | [Github](https://github.com/kennethSty) | [Portfolio](https://github.com/kennethSty)","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Deepan Krishnaa | [Github](https://github.com/DarkDragoon2002) | [Portfolio](https://github.com/DarkDragoon2002)","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"Dri-water":2,"ryryry-3302":1,"ryan-txn":1,"DarkDragoon2002":2,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"ChatParser structure inspired by: ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"[this repository](https://github.com/kennethSty/ip)","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"Calorie consumption bar inspired by ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"[this blogpost](https://medium.com/javarevisited/how-to-display-progressbar-on-the-standard-console-using-java-18f01d52b30e)","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"The overall project is structured into six packages:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"- Command: Classes used for abstracting user commands","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"- Core: Core classes","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"- Exceptions: Customized exceptions","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"- Recommender: TBD ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"- Services: Key logic and services that make use of core classes","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"- Utils: Helper functions","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"### High Level Class Design","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"The main classes of this implementation are:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"- HealthMate","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"- ChatParser","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"- User","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"- MealList","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"- MealEntriesList","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"- Meal","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kennethSty"},"content":"- MealEntry","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"- HistoryTracker","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"- UI","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"In each class we focused on maintaining a tight abstraction barrier between classes.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"This specifically includes adherance to the \"Tell Don\u0027t Ask\" principle which was enforced by","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"making most attributes of all classes above private and avoiding getter methods if possible.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"The following diagram illustrates the resulting associations, methods and attributes.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"For the sake of clarity, UI class is omitted since it is used across most classes to systematize any form of","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"printing output to the user.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kennethSty"},"content":"![High Level CD](images/highLevelClassDiagram.jpg)","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"#### HealthMate","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"Entry point to the application is the main function of HealthMate.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"The HealthMate class contains a private ChatParser attribute. This attribute\u0027s run function initiates, ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"after an initial greeting to the user, the interaction process. In this process, ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"the user enters commands with additional information into his command line application.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"The content of these commands is parsed by the ChatParser. ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"#### ChatParser","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"The ChatParser class, instantiated once per application run, manages HealthMates overal usage ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"flow through its main run() method. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"It has two primary attributes: ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"- A `MealEntriesList` object called `mealEntries` ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"  - Contains tracked calorie consumption ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"- A `MealList` object called `mealOptions` ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"  - Contains meals that are presaved by the user for quick selection to track commonly consumed meals","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"  - the command `meal menu` is used to display the current mealOptions. The implementation of this command is shown in the UML diagram below.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dri-water"},"content":"![Meal Menu SD](images/mealMenuSD.png)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"These objects represent the application\u0027s underlying data with which the user interacts through the command line.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"To ensure no unintended changes are done, the ChatParser class orchestrates the effects of the users prompts.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"For saving these changes the ChatParser class makes use the `HistoryTracker`  which facilitates the process of ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"storing (and loading) User data, mealEntries data and mealOptions data to their corresponding files. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"More details on the implementation of ChatParser follows in the Feature Section. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kennethSty"},"content":"#### MealList","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"The MealList class contains a private ArrayList of Meal object.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kennethSty"},"content":"Further, it encapsulates behaviour to operate on this list of meals. Most notably, ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"this adding or deleting a Meal to/from the list. ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"#### MealEntriesList","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"The MealEntriesList class extends the MealList class. It overwrites the extractAndAppendMeal(...) method,","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kennethSty"},"content":"and additionally includes methods specifically tailored to providing helpul user feedback, as the MealEntries stored ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"within its instance, signify the users calorie consumption. ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"As a MealEntry object differs from a Meal object by the additional timestamp attribute, this includes","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"computations based on the time dimension. More specifically, the printDaysConsumptionBar() uses the UIs class\u0027","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"methods in the background to visualize the percentage of a certain days total consumption versus the idaeal consumption","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"of a User class. ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"#### Meal","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kennethSty"},"content":"The Meal class encapsulates the concept of a meal. As the purpose of this application ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"is to track calorie consumption, this consists of a mandatory calorie entry. The meal\u0027s name attribute, ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kennethSty"},"content":"is however an Optional\u003cString\u003e allowing a case, where no meaningful label can be attached to a certain consumption.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ryryry-3302"},"content":"![User SD](images/addMeal.png)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"#### MealEntry","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"The MealEntry class extends the meal class and contains an additional field timestamp. ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"This distinction was made, as objects of the Meal class will represent possible meal options to choose form, ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"while a mealEntry is a concrete calorie consumption the user wants to track. The latter makes a timestamp indispensible. ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DarkDragoon2002"},"content":"#### HealthGoal","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DarkDragoon2002"},"content":"The HealthGoal class manages a user\u0027s health goal and calculates target calorie intake based on user data such as height, weight, age, and gender. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DarkDragoon2002"},"content":"It offers three main health goals: weight loss, steady state, and bulking, each with a corresponding calorie modification factor. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DarkDragoon2002"},"content":"The class supports setting, storing, and retrieving the health goal. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DarkDragoon2002"},"content":"Additionally, it provides a method to compute target calories using the Harris-Benedict Equation, modified by the current health goal. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DarkDragoon2002"},"content":"This allows the class to adapt the calorie calculations according to the user\u0027s health objectives, making it versatile for various fitness plans.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kennethSty"},"content":"#### User","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kennethSty"},"content":"The user class encapsulates all necessary information for computing an ideal daily calorie consumption. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"This includes:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kennethSty"},"content":"- Height (in cm): Double ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"- Weight (in cm): Double","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"- Age: Integer","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"- Gender: Boolean","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kennethSty"},"content":"- Health goal: HealthGoal","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kennethSty"},"content":"- Ideal calorie intake: Computed based on the information above ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kennethSty"},"content":"- Date: LocalDateTime specifying the date of the above information","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kennethSty"},"content":"More details follow in the Features section of this guide. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dri-water"},"content":"#### HistoryTracker","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dri-water"},"content":"The HistoryTracker class is responsible for managing the persistence of data in the HealthMate application. It handles the saving and loading of user data, meal entries, and meal options to and from files. This class plays a crucial role in maintaining the application\u0027s state across different sessions.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dri-water"},"content":"Key features of the HistoryTracker class include:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dri-water"},"content":"1. Data Persistence:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dri-water"},"content":"   - Saves user data, meal entries, and meal options to separate files.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dri-water"},"content":"   - Loads existing data from these files when a new usage session is initiated.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dri-water"},"content":"2. File Management:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dri-water"},"content":"   - Creates and manages the necessary files for storing application data.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dri-water"},"content":"   - Handles file I/O operations, ensuring data integrity during read and write processes.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dri-water"},"content":"3. Data Formatting:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dri-water"},"content":"   - Converts complex objects (like User, MealEntry, and Meal) into a format suitable for file storage.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dri-water"},"content":"   - Deserializes stored data back into usable objects when loading the application state.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dri-water"},"content":"HistoryTracker allows for the persistance of user inputted data between sessions by storing it in a local csv file.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ryryry-3302"},"content":"## Features","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ryryry-3302"},"content":"This section will document the contributions made by each team member regarding the implementation or planned feature enhancements, detailing the design and thought processes behind them.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ryryry-3302"},"content":"---","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"### Creating a User Profile","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kennethSty"},"content":"To create or load a user profile the `User` class provides the method `checkForUserData` which loads ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kennethSty"},"content":"saved user information if available from an existing file usingn the `HistoryTracker` or prompts the user","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kennethSty"},"content":"to input new information for creating a new profile as shown in the sequence diagram below.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kennethSty"},"content":"![User SD](images/userSequenceDiagram.jpg)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kennethSty"},"content":"Reference diagrams used","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kennethSty"},"content":"![User SD](images/askForUserDataSD.png)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ryryry-3302"},"content":"![Read User SD](images/readUserDataFromFileSD.png)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"### ChatParser Input Handling","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kennethSty"},"content":"The \u0027ChatParser\u0027 class has the responsibility of parsing user input to steer the ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kennethSty"},"content":"application logic based on predefined commands specified in the `CommandMap\u0027 class.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kennethSty"},"content":"Therefore, the ChatParser class acts as the main interface between user input and command execution. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kennethSty"},"content":"This includes extracting and routing commands, as well as exception handling for ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kennethSty"},"content":"false input. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kennethSty"},"content":"#### Feature Implementation","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kennethSty"},"content":"The `ChatParser class:`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kennethSty"},"content":"1. Accepts user input. I.e. it reads input from the command line","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kennethSty"},"content":"2. Tokenizes commands and identifys one- and two-token commands","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kennethSty"},"content":"3. Routes commands based on the identified command tokens which are specified in the `CommandMap` class. This is done ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kennethSty"},"content":"using methods such as `multiCommandParsing` for 2-token commands and `run` which encapsulates the main loop of","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kennethSty"},"content":"user interaction until the exit command \"bye\" terminates the application.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kennethSty"},"content":"4. Logs command routing and its effects on a high level to enable tracking of the application\u0027s activity.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kennethSty"},"content":"#### Why It Is Implemented This Way","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kennethSty"},"content":"The ChatParser class was implemented in the above manner for three reasons:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kennethSty"},"content":"1. It allows create one abstract unit for handling the responsibility of orchestrating usage flow.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kennethSty"},"content":"2. As a high-level abstraction layer it improves readability by bundliing the overall application logic in one place.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kennethSty"},"content":"3. Its modularity allows for easy extensions or modifications to `CommandMap` and `multiCommandParsing`. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"#### Alternatives considered","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"Direct command handling in the main loop. Reduces the depth of the application, ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"but comes at the cost of reduced readability and higher cohesion. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kennethSty"},"content":"#### Extensions for v.2.1","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kennethSty"},"content":"Seperating the responsibilities of reading and preprocessing user input from the responsibility ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"to steer command routing. This could improve the maintainability of the ChatParser class in the future. ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ryryry-3302"},"content":"### Command Handling with CommandMap Class","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ryryry-3302"},"content":"#### Overview","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ryryry-3302"},"content":"The `CommandMap` feature enhances the system\u0027s command handling by centralizing the lookup, and","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ryryry-3302"},"content":"storage of commands. It allows users to efficiently view commands usage within the HealthMate application.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ryryry-3302"},"content":"#### Feature Implementation","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ryryry-3302"},"content":"The `CommandMap` class in the `seedu.healthmate.command` package maps command names to their corresponding","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ryryry-3302"},"content":"`Command` objects using a `HashMap\u003cString, Command\u003e`. This ensures fast retrieval and allows users to explore","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ryryry-3302"},"content":"commands with ease.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ryryry-3302"},"content":"#### Why It Is Implemented This Way","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ryryry-3302"},"content":"Using a `HashMap` allows efficient command lookups with a constant time complexity of O(1). Centralizing all","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ryryry-3302"},"content":"commands within `CommandMap` simplifies the system\u0027s command handling process and makes it more maintainable  as new","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ryryry-3302"},"content":"commands are added.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ryryry-3302"},"content":"#### Alternatives Considered","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ryryry-3302"},"content":"An alternative was storing commands in a list and iterating through them sequentially to find the matching command.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ryryry-3302"},"content":"However, this approach was less efficient for frequent lookups compared to the `HashMap`.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ryryry-3302"},"content":"#### Proposed additions for v2.1","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ryryry-3302"},"content":"The `CommandMap` can be built upon to support saving and usage of user created scripts as commands. For example","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ryryry-3302"},"content":"using a user could possibly create an add morningRoutine command by creating a command that runs multiple add","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ryryry-3302"},"content":"mealEntry commands of their regular breakfast as well as triggering the updateUser data command.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ryryry-3302"},"content":"#### Sequence Diagram TBD","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ryryry-3302"},"content":"1. **Command Lookup Process**: Illustrate the flow from when a user enters a command to when `CommandMap.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ryryry-3302"},"content":"getCommandByName()` retrieves the command and the UI displays the results.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ryryry-3302"},"content":"   - Components: `UI`, `ChatParser`, `CommandMap`, `Command`.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ryryry-3302"},"content":"   - Highlight how `CommandMap` retrieves the appropriate command based on user input.","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ryryry-3302"},"content":"---","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Dri-water"},"content":"The target user profile for HealthMate includes:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Dri-water"},"content":"- Health-conscious individuals who want to monitor their daily calorie intake","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kennethSty"},"content":"- Users comfortable with command lines","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kennethSty"},"content":"- People trying to lose weight, maintain a healthy weight or increase muscle growth","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Dri-water"},"content":"- Fitness enthusiasts who want to balance their calorie consumption with their exercise routines","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Dri-water"},"content":"- Individuals with specific dietary requirements or restrictions","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kennethSty"},"content":"- Busy individuals who need a quick way to log meals and monitor progress.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kennethSty"},"content":"- Data-Oriented Users: Users interested in gathering data about their habits to improve them","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Dri-water"},"content":"- Anyone interested in developing better eating habits and nutritional awareness","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kennethSty"},"content":"A typical HealthMate user is Martin. ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kennethSty"},"content":"He is a 30-year-old software engineer who wants to maintain a healthy lifestyle with the help of technology.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kennethSty"},"content":"Additionally, he has the following characteristics:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kennethSty"},"content":"* Health-conscious individual: Martin want to pay attention to his diet. He believes in the importance of monitoring calorie intake to achieve optimal health.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kennethSty"},"content":"* Command-line expertise: As a software engineer, Tom is extremely comfortable using command-line interfaces and appreciates the simplicity and efficiency they offer. ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kennethSty"},"content":"* Fitness enthusiast: Martin regularly engages in workouts. He aims to build muscle mass while maintaining a healthy body weight, which he achieves by balancing his calorie intake with his exercise routine.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kennethSty"},"content":"* Data-oriented self-improvement mindset: Martin loves leveraging data to optimize his meal plans. He sets goals, tracks progress, and analyzes trends to continuously improve his habits.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Dri-water"},"content":"HealthMate solves the following problems:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Dri-water"},"content":"- Difficulty in tracking daily calorie intake: Users can easily log their meals and snacks","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kennethSty"},"content":"- Lack of awareness about ideal calorie consumption: Based on the users health goal and his physical attributes, the app calculates the ideal daily calorie intake for this specific user.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kennethSty"},"content":"- Lack of motivation: By visually showing the daily progress towards the users ideal calorie consumption, the app motivates to reach this goal on a daily basis.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Dri-water"},"content":"- Inconvenience of manual calorie calculations: Pre-saved meal options make tracking quicker and more efficient","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Dri-water"},"content":"- Inability to see patterns in eating habits: Historical data allows users to analyze their consumption over time","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Dri-water"},"content":"- Struggle to maintain consistent healthy eating habits: Regular tracking encourages mindful eating and helps users stay accountable to their health goals","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"| Version | As a ...       | I want to ...                                                                                      | So that I can ...                                                    |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kennethSty"},"content":"|---------|----------------|----------------------------------------------------------------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"| v1.0    | new user       | see usage instructions                                                                             | refer to them when I forget how to use the application               |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Dri-water"},"content":"| v1.0    | user           | save frequently eaten meals                                                                        | quickly add them in the future without re-entering details           |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Dri-water"},"content":"| v1.0    | user           | log my daily meals                                                                                 | track my calorie intake                                              |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Dri-water"},"content":"| v1.0    | user           | see my calorie consumption                                                                         | know if I\u0027m meeting my daily goals                                   |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kennethSty"},"content":"| v1.0    | user           | delete a previously logged consumption                                                             | undo mistakes when tracking my meals                                 |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Dri-water"},"content":"| v1.0    | user           | set my health goals                                                                                | have a target to work towards                                        |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Dri-water"},"content":"| v2.0    | user           | see my meal history                                                                                | analyze my eating patterns over time                                 |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kennethSty"},"content":"| v2.0    | user           | know how much calories I should consume per day based on my health goal and my physical properties | plan my future eating habits accordingly                             |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kennethSty"},"content":"| v2.0    | user           | see visual representations of how much of my ideal daily consumption I have eaten                  | better plan the rest of my daily consumption                         |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kennethSty"},"content":"| v2.0    | motivated user | get a visual overview on my daily actual vs. ideal calorie intake over a specified timerange       | better track my progress of developing a better eating habit         |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kennethSty"},"content":"| v2.0    | user           | specify the amount of portions I eat of a meal                                                     | enter the consumption of a meal only once innstead of multiple times |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Dri-water"},"content":"| v2.0    | user           | export my data                                                                                     | back up my records or analyze them elsewhere                         |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Dri-water"},"content":"| v2.0    | user           | create custom meal combinations                                                                    | quickly log common meal combinations                                 |","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kennethSty"},"content":"| v2.0    | forgetful user | add calorie consumptions for past days                                                             | keep track of my consumption even if I forgot to enter it first      |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Dri-water"},"content":"1. Usability: The command-line interface should be intuitive and easy to use, even for non-technical users.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Dri-water"},"content":"2. Reliability: The application should not lose any user data during normal operation or unexpected shutdowns.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Dri-water"},"content":"3. Compatibility: The application should run on common operating systems (Windows, macOS, Linux).","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Dri-water"},"content":"4. Maintainability: The code should be well-documented and follow clean code principles for easy future enhancements.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Dri-water"},"content":"5. Portability: User data should be easily exportable and importable for backup purposes or switching devices.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kennethSty"},"content":"6. UX: The application should make use of intuitive visuals to help the user get insights into his eathing habits.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kennethSty"},"content":"7. Performance: The application should respond to all user commands without negatively noticable delay.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kennethSty"},"content":"7. Scientific: The app should calculate ideal calorie consumption based on evidence from science.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Dri-water"},"content":"* *Meal* - A food item or combination of food items consumed at one time, with associated calorie information.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Dri-water"},"content":"* *MealEntry* - A record of a meal consumed by the user, including the meal details and a timestamp.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Dri-water"},"content":"* *MealList* - A collection of pre-saved meals that users can quickly select from when logging their food intake.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Dri-water"},"content":"* *MealEntriesList* - A chronological list of all meals consumed by the user.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Dri-water"},"content":"* *ChatParser* - The component responsible for interpreting user commands and executing the appropriate actions.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Dri-water"},"content":"* *HistoryTracker* - The component that manages the storage and retrieval of user data, meal entries, and meal options.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"DarkDragoon2002"},"content":"* *HealthGoal* - The class that manages functions pertaining to setting of user health goal as well calculating ideal caloric intake based on various factors.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Dri-water"},"content":"1. Installation and Setup:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Dri-water"},"content":"   - Ensure Java Runtime Environment (JRE) is installed on your system.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Dri-water"},"content":"   - Download the HealthMate application JAR file.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Dri-water"},"content":"   - Open a terminal or command prompt and navigate to the directory containing the JAR file.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Dri-water"},"content":"2. Running the Application:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Dri-water"},"content":"   - Execute the command: `java -jar HealthMate.jar`","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Dri-water"},"content":"   - Verify that the application starts and displays a welcome message.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Dri-water"},"content":"3. Testing Basic Commands:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Dri-water"},"content":"   - Try entering the command `help` and verify that usage instructions are displayed.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Dri-water"},"content":"   - Test the `bye` command to ensure the application exits properly.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Dri-water"},"content":"4. Adding a Meal:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Dri-water"},"content":"   - Use the command `add mealEntry [name] [calories]` (e.g., `add meal \"Chicken Salad\" 350`)","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Dri-water"},"content":"   - Verify that the meal is added successfully and displayed in the meal list.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Dri-water"},"content":"5. Logging a Meal Entry:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Dri-water"},"content":"   - Use the command `log meal [name/index] [portion]` (e.g., `log meal \"Chicken Salad\" 1`)","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Dri-water"},"content":"   - Check that the meal entry is recorded with the current timestamp.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"DarkDragoon2002"},"content":"6. Show Historic Caloric Trend:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"DarkDragoon2002"},"content":"   - Use the command `show historicCalories [no. of days]` (e.g., `show historicCalories 5`)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"DarkDragoon2002"},"content":"   - Check that the calories added previously are shown and that all the stats displayed are correct","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"DarkDragoon2002"},"content":"7. Testing Data Persistence:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Dri-water"},"content":"   - Exit the application using the `bye` command.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Dri-water"},"content":"   - Restart the application and check if previously added meals and logged entries are still present.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"DarkDragoon2002"},"content":"8. Error Handling:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Dri-water"},"content":"   - Try entering invalid commands or data to ensure the application handles errors gracefully and provides helpful error messages.","lastModifiedDate":"2024-10-21","isFullCredit":false}],"authorContributionMap":{"Dri-water":76,"ryryry-3302":45,"kennethSty":151,"DarkDragoon2002":13,"-":30}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"# User Guide for HealthMate","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"**HealthMate** is a meal and calorie tracking application designed to help users manage their dietary intake, monitor their weight, and track their overall health goals. The app enables users to log meals, track calories, and observe their progress towards a healthier lifestyle.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"## Quick Start Guide","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dri-water"},"content":"Welcome to HealthMate! Follow these steps to get started quickly:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"**Entering the App**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"- Open CLI and Navigate to location of `HealthMate.jar`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"- Run the following Command: `java -jar HealthMate.jar`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"- ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"**Create your user profile**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"Input data about yourself needed to compute your ideal daily calorie intake. ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"This includes:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"- Your height in cm (e.g. 180)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"- Your weight in kg (e.g. 80)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"- Your gender (either male or female)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"- Your age in years (e.g. 20)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"- Your personal ealth goal (either WEIGHT_LOSS, STEADY_STATE, BULKING)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"**Log Your First Meal**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"- Enter the meal name and calories.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"- Example: `add mealEntry grapes /c400`","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"- The printed consumption bar shows you how much more (or less) you should consume to reach your health goal.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"**Get an overview on your calorie consumption**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"- Use the \"Log Meals\" feature to view your meal entries and track your daily caloric intake.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"- Example: Add your first mealEntry and then use `log meals` to assess the meals tracked so far. ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"  ```","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"  add mealEntry burger /c300","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"  Tracked: burger with 300 calories (at: 2024-10-29T22:00)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kennethSty"},"content":"  % of Expected Calorie Intake Consumed:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"  ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11% |░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-29)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"  log meals","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"  1: burger with 300 calories (at: 2024-10-29T22:00)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"  ```","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"**Track your daily progress**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"- Based on your user data and your health goal we computed your ideal daily calorie intake. ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"- When you add (or delete) a mealEntry, we print a consumption bar showing how much more/less you should consume.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"- Interpreting the consumption bar:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"  - The percentage in the middle shows how much percent of your ideal calorie consumption you have consumed so far.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"  - The date on the right shows you the date for which this percentage is calculated.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"- Example: On the 29th of October 2024 you have consumed 11% of your ideal calorie intake. ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"```","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"  % of Expected Calorie Intake Consumed:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"  ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11% |░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-29)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"```","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dri-water"},"content":"  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"**Store Common Meals**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dri-water"},"content":"- Save frequently eaten meals to your meal menu for quick access","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dri-water"},"content":"- Example: `save meal pizza /c800` saves pizza with 800 calories to your meal menu","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dri-water"},"content":"- Add meals from the meal menu without specifying the calories","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dri-water"},"content":"- Example: `add mealEntry pizza`","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dri-water"},"content":"**Track Meal Menu**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dri-water"},"content":"- Use the `meal menu` command to view your saved meal options","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dri-water"},"content":"- Example: `meal menu`","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dri-water"},"content":"Enjoy your journey towards a healthier lifestyle with HealthMate!","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryryry-3302"},"content":"### Legend","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryryry-3302"},"content":"[] \u003d optional parameter","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryryry-3302"},"content":"{} \u003d parameter","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryryry-3302"},"content":"### List Commands","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryryry-3302"},"content":"Use the `list commands [{command}]` command to view all valid commands and their formats.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ryryry-3302"},"content":"- Example usage to list all commands","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ryryry-3302"},"content":"list commands","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ryryry-3302"},"content":"      Use `list commands \u003ccommand\u003e` to view a command\u0027s syntax","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ryryry-3302"},"content":"      list commands","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ryryry-3302"},"content":"      show todayCalories","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ryryry-3302"},"content":"      update userdata","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ryryry-3302"},"content":"      show historicCalories","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ryryry-3302"},"content":"      save meal","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ryryry-3302"},"content":"      log meals","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ryryry-3302"},"content":"      meal menu","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ryryry-3302"},"content":"      delete mealEntry","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ryryry-3302"},"content":"      add mealEntry","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ryryry-3302"},"content":"      delete meal","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ryryry-3302"},"content":"List Commands with command parameter","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ryryry-3302"},"content":"list commands delete meal","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ryryry-3302"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ryryry-3302"},"content":"      Command: delete meal","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ryryry-3302"},"content":"      Format: delete meal {index of meal in meal menu}","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ryryry-3302"},"content":"      Description: Deletes meal option at the specified index from the meal menu","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ryryry-3302"},"content":"### Meal Management Commands:","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ryryry-3302"},"content":"#### Save Meal to Meal Menu: `save meal {Name of Meal} /c{Number of calories}`","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ryryry-3302"},"content":"- Allows user to store a meal with its calories to be used with the add mealEntry command","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ryryry-3302"},"content":"- Example usage to store a meal of grapes with 400 calories","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kennethSty"},"content":"save meal pizza /c300","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kennethSty"},"content":"      Added to options: pizza with 300 calories","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kennethSty"},"content":"#### Add Meal Entry for Tracking:`add mealEntry {meal} /c{Number of calories} /p{portions} /t{YYYY-MM-DD}`or `add mealEntry {meal from meal menu}` or","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ryryry-3302"},"content":"- Adds a meal from the saved meal options to your daily caloric intake.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ryryry-3302"},"content":"- After adding the meal, the app will show how the meal affects your progress towards your daily caloric goal.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kennethSty"},"content":"Log a meal with calories","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kennethSty"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"add mealEntry grapes /c100","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kennethSty"},"content":"      Tracked: grapes with 100 calories (at: 2024-11-03)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kennethSty"},"content":"      Ideal Daily Caloric Intake: 2865","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kennethSty"},"content":"      Current Calories Consumed: 100","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kennethSty"},"content":"      % of Expected Calorie Intake Consumed: ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kennethSty"},"content":"      █░░░░░░░░░░░░░░░░░░░░░░░░░░░░|   4%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-11-03)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kennethSty"},"content":"Log a meal for a specific day in the past:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kennethSty"},"content":"``` ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kennethSty"},"content":"add mealEntry pizza /c300 /t2024-10-30","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kennethSty"},"content":"      Tracked: pizza with 300 calories (at: 2024-10-30)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kennethSty"},"content":"      Ideal Daily Caloric Intake: 2865","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kennethSty"},"content":"      Current Calories Consumed: 300","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kennethSty"},"content":"      % of Expected Calorie Intake Consumed:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-30)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kennethSty"},"content":"Shortcut: log a presaved meal from the list of meal options (no calories needed)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ryryry-3302"},"content":"add mealEntry pizza","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ryryry-3302"},"content":"Getting info from meal options...","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"      Tracked: pizza with 300 calories (at: 2024-11-03)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kennethSty"},"content":"      Ideal Daily Caloric Intake: 2865","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"      Current Calories Consumed: 400","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kennethSty"},"content":"      % of Expected Calorie Intake Consumed: ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kennethSty"},"content":"      ████░░░░░░░░░░░░░░░░░░░░░░░░░|  14%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-11-03)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kennethSty"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ryryry-3302"},"content":"#### Delete meal from meal menu: `delete meal {index of meal in meal menu}`","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ryryry-3302"},"content":"- Deletes meal option from the meal menu at the specified index","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ryryry-3302"},"content":"- Example usage","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ryryry-3302"},"content":"delete meal 1","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ryryry-3302"},"content":"      _________________________________________________________________________","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ryryry-3302"},"content":"      Deleted option: pizza with 400 calories","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ryryry-3302"},"content":"      _________________________________________________________________________","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ryryry-3302"},"content":"#### Show List of Available Meal Options: `meal menu`","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ryryry-3302"},"content":"- Lists all the saved meal options for quick selection when logging your meals.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ryryry-3302"},"content":"meal menu","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ryryry-3302"},"content":"      _________________________________________________________________________","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ryryry-3302"},"content":"      1: pizza with 400 calories","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ryryry-3302"},"content":"      2: ciffbar with 300 calories","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ryryry-3302"},"content":"      _________________________________________________________________________","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ryryry-3302"},"content":"### Log Commands:","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ryryry-3302"},"content":"#### Show Meal History: `log meals`","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ryryry-3302"},"content":"- Displays the history of the meals you\u0027ve eaten over the chosen timespan.","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ryryry-3302"},"content":"  log meals","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ryryry-3302"},"content":"- Example Usage","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ryryry-3302"},"content":"log meals","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ryryry-3302"},"content":"      _________________________________________________________________________","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ryryry-3302"},"content":"      1: burger with 300 calories (at: 2024-10-14T15:00)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ryryry-3302"},"content":"      2: pizza with 400 calories (at: 2024-10-14T15:00)","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ryryry-3302"},"content":"      _________________________________________________________________________","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"DarkDragoon2002"},"content":"#### Delete meal from meal log: `delete mealEntry {index of meal in the meal log}`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ryryry-3302"},"content":"- Deletes meal entry from the meal log at the specified index","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ryryry-3302"},"content":"- Example Usage","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ryryry-3302"},"content":"delete mealEntry 1","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"DarkDragoon2002"},"content":"      Deleted entry: Cheeseburger with 900 calories (at: 2024-10-30T11:00)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"DarkDragoon2002"},"content":"      Ideal Daily Caloric Intake: 2865","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"DarkDragoon2002"},"content":"      Current Calories Consumed: 500","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"DarkDragoon2002"},"content":"      % of Expected Calorie Intake Consumed: ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"DarkDragoon2002"},"content":"      █████░░░░░░░░░░░░░░░░░░░░░░░░|  18% |░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-30)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ryryry-3302"},"content":"```","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"DarkDragoon2002"},"content":"### Calorie Progress Commands:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"DarkDragoon2002"},"content":"#### Show Calorie Progress for Today: `show todayCalories`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"DarkDragoon2002"},"content":"- Prints a Calorie Progress Bar to represent Today Calorie Progress","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"DarkDragoon2002"},"content":"- Example Usage:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"DarkDragoon2002"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"DarkDragoon2002"},"content":"show todayCalories","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"DarkDragoon2002"},"content":"      Ideal Daily Caloric Intake: 2865","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"DarkDragoon2002"},"content":"      Current Calories Consumed: 900","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"DarkDragoon2002"},"content":"      % of Expected Calorie Intake Consumed: ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"DarkDragoon2002"},"content":"      █████████░░░░░░░░░░░░░░░░░░░░|  32% |░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-29)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"DarkDragoon2002"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"DarkDragoon2002"},"content":"#### Show Historic Calorie Progress: `show historicCalories {Number of Days inclu. Today}`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"DarkDragoon2002"},"content":"- Prints Calorie Progress Bars \u0026 Various Stats to represent Historical Calorie Progress","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kennethSty"},"content":"- Combines global and local view on eating patterns via the progress bar and details such as the meal with the highest calories.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"DarkDragoon2002"},"content":"- Example Usage:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"DarkDragoon2002"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kennethSty"},"content":"show historicCalories 10","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"DarkDragoon2002"},"content":"      Ideal Daily Caloric Intake: 2865","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-25)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-26)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-27)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-28)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-29)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-30)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-31)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-11-01)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-11-02)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kennethSty"},"content":"      ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11%|░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-11-03)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kennethSty"},"content":"      Stats over past 10 days","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kennethSty"},"content":"      Total Calories Consumed: 3000","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kennethSty"},"content":"      Total Ideal Calories: 28650","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kennethSty"},"content":"      Percentage of Total Ideal Calories : 10.0%","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kennethSty"},"content":"      Day With Heaviest Meal: 2024-10-24","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kennethSty"},"content":"      Heaviest Meal Consumed: burger with 300 calories (at: 2024-10-25)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"kennethSty"},"content":"      Meals Consumption\u0027s Percentage of Daily Ideal Calories: 10.0%","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"DarkDragoon2002"},"content":"      _____________________________________________________________________________","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"DarkDragoon2002"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ryryry-3302"},"content":"### Legend","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ryryry-3302"},"content":"[] \u003d optional parameter","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ryryry-3302"},"content":"{} \u003d parameter","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ryryry-3302"},"content":"| Command                             | Syntax                                                                   | Description                                                                                                    |","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kennethSty"},"content":"|-------------------------------------|--------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kennethSty"},"content":"| List all commmands                  | `list commands` or `list commands [{command}]`                           | Lists all available commands and the proper formatting.                                                         ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ryryry-3302"},"content":"| Save meal to meal options           | `save meal {meal} /c{Number of calories}`                                | Prompts for meal name, calories, then confirms saving the meal.                                                |","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kennethSty"},"content":"| Add meal entry for tracking         | `add mealEntry {meal} [/c{Number of calories}] [/p{Number of portions}] [/t{timestamp in YYYY-MM-DD}]` | Adds meal to daily caloric intake and shows progress toward goal.                                              |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ryryry-3302"},"content":"| Show list of available meal options | `meal menu`                                                              | Prints all available meals from the saved options list.                                                        |","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"kennethSty"},"content":"| Show past meals                     | `log meals`                                                              | Displays history of meals with timestamp and calories.                                                         |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"kennethSty"},"content":"| Delete meal from meal menu          | `delete meal {index of meal in meal menu}`                               | Deletes meal option from the meal menu at the specified index.                                                 |","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"kennethSty"},"content":"| Delete meal entry from meal log     | `delete mealEntry {index of meal in the meal log`                        | Deletes meal entry from the meal log at the specified index and shows effect on the days progress toward goal. |","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"DarkDragoon2002"},"content":"| Show Calorie Progress for Today     | `show todayCalories`                                                     | Prints a Calorie Progress Bar to represent Today Calorie Progress                                              |","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"DarkDragoon2002"},"content":"| Show Historic Calorie Progress      | `show historicCalories {Number of Days inclu. Today}`                    | Prints Calorie Progress Bars \u0026 Various Stats to represent Historical Calorie Progress                          |","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"Dri-water":15,"ryryry-3302":101,"kennethSty":106,"DarkDragoon2002":42,"-":24}},{"path":"docs/team/DarkDragoon2002.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DarkDragoon2002"},"content":"# Project Portfolio Page - DarkDragoon2002","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"## Overview","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"HealthMate is a meal and calorie tracking application designed to help users manage their dietary intake, monitor their weight, and track their overall health goals. The app enables users to log meals, track calories, and observe their progress towards a healthier lifestyle.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"## Summary of Contributions","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"### Code Contributed","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"[Link to code contributions](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003ddarkdragoon2002\u0026breakdown\u003dtrue)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"1. **Implemented `HealthGoal` Class**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"    - Implemented `HealthGoal` Class allowing the `User` Class to save the health goal of the user","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"    - Implemented Target Calories Calculation, depending on data such as height, weight, age, gender and health goal","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"    - Created a Function to update it","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"    - Created a Command that can be called by the user but has since been integrated into update user command","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"2. **Implemented Deletion of `Meal` \u0026 `MealEntry`**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"    - Implemented Deletion of Meal \u0026 MealEntry Commands and Functions","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"    - Integrated both into the `ChatParser` Class as well","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"3. **Implemented `DateTimeUtils` Class**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    - Implemented `DateTimeUtils` Class in order to allow for easier and more compact use of `LocalDateTime` and `LocalDate` packages","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    - Used in the implementation of `show todayCalories` \u0026 `show historic Calories {No. of Days}` commands","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"4. **Implemented `todayCalories` \u0026 `historicCalories` Commands and Methods**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"    - Implemented `todayCalories` \u0026 `historicCalories` methods and Commands","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"    - Used `kennethSty`\u0027s `ConsumptionBars` Code to print out consumption bars for the various days","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"    - Used `DateTimeUtils` to better get the date and times necessary","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"    - Implemented the statistics and necessary code that was used by `historicCalories` which was then abstracted out by `kennethSty` into the `ConsumptionStatistics` Class","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"### Contributions to the User Guide","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"* Added entries for the following commands:","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"    - Delete meal from meal menu","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"    - Delete meal from meal log","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"    - Show Calorie Progress for Today","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"    - Show Historic Calorie Progress","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"* Added Entering App section in Quick Start Guide","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"* Added HealthGoal and various references to it","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"* Add Step in Manual Testing to show HistoricCaloricTrend","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"* Created setHealthGoalSD although not used in DG","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"### Contributions to Team Tasks","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"* Set up the Repo","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"* Set up various permissions, tags, roles and rules in the repo","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"* Contributed to creation of issues","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"* Fixed IO Testing issues","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"* Reviewed and approved multiple PRs","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"* Helped troubleshoot integration issues between different components","lastModifiedDate":"2024-11-01","isFullCredit":false}],"authorContributionMap":{"DarkDragoon2002":54}},{"path":"docs/team/dri-water.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Dri-water"},"content":"# Project Portfolio Page - Dri-water","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"## Overview","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":"HealthMate is a meal and calorie tracking application designed to help users manage their dietary intake, monitor their weight, and track their overall health goals. The app enables users to log meals, track calories, and observe their progress towards a healthier lifestyle.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"## Summary of Contributions","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dri-water"},"content":"### Code Contributed","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dri-water"},"content":"[Link to code contributions](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-09-20\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dDri-water\u0026tabRepo\u003dAY2425S1-CS2113-W12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dri-water"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":"1. **Enhanced Meal Menu System**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"   * Implemented the meal saving functionality that allows users to store frequently eaten meals with their calorie counts using the `save meal` command (details in mealSaver class)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":"   * Added ability to retrieve saved meals when logging new meal entries using `add mealEntry`, improving user experience by eliminating the need to remember and re-enter calorie information","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"   * Modified mealEntry class to accommodate retrieval of saved meals","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":"2. **Implemented MealSaver Class**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":"   * This class handles the logic of writing and overwriting the mealOptions","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"   * This abstracts the logic of saving meals from the main logic of the program, making the code more modular and easier to understand","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"3. **Implemented History Tracking System** ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"   * Added a HistoryTracker class","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"   * Developed the meal history tracking system that maintains a chronological record of all meal entries that persists beyond the current session","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"   * Writes to a csv file the current meal_entries and meal_options within the /data folder","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"4. **Implemented manual mealEntry timestamp** ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"   * Added functionality to allow users to add a mealEntry with a custom specified timestamp","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"   * Modified Parser class to accept timestamp input","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"### Contributions to the User Guide","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"  * Added Quick start guide","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dri-water"},"content":"  * Added details for add mealEntry command","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"* Added implementation details for:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"  * Meal Menu feature","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"  * HistoryTracker class","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"  * UML diagrams for \u0027meal menu\u0027 command","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dri-water"},"content":"### Contributions to Team Tasks","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dri-water"},"content":"* Helped in setting up the initial project structure","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dri-water"},"content":"* Contributed to creation of issues","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dri-water"},"content":"* Helped coordinate version control and release management","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dri-water"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dri-water"},"content":"* Reviewed and approved multiple PRs","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dri-water"},"content":"* Helped troubleshoot integration issues between different components","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"Dri-water":48,"ryryry-3302":1}},{"path":"docs/team/kennethSty.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"# Project Portfolio Page - kennethSty","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"## Overview","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"HealthMate is a meal and calorie tracking application designed to help users manage their dietary intake, ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"monitor their weight, and track their overall health goals. ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"The app enables users to log meals, track calories, and observe their progress towards a healthier lifestyle.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"## Summary of Contributions","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"### Code Contributed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"[Link to code contributions](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003dKenneth\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-09-20\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkennethSty\u0026tabRepo\u003dAY2425S1-CS2113-W12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"*Created the foundational design of the application and implemented the following classes:*","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"- the Meal and MealEntry classes","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"- the MealList and MealEntriesList classes","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"- the main logic of the ChatParser class","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"- the UI class","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"- the Logging class","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"1. **Implementing the Meal and MealEntry classes**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"* Created the Meal and MealEntry class and their inheritance relationship. ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"* Implemented the usage of the Optional context to allow MealEntries without a name.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"* Added low-level methods for extracting meals and mealEntries from user input. ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"2. **Implementing the MealList and MealEntriesList class**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kennethSty"},"content":"* Created the MealList and MealEntriesList class and their inheritance relationship.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"* Implemented low-level functionality to add and delete meals and mealEntries to the lists.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"3. **Enhancing the User class**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"* Created basic structure of the User class.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"* Added logic of loading a user class, if a user file exists (`checkForUserData`). ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"* Refactored the creation of a new user instance (`askForUserData`), if no user file exists so far.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"4. **Contributions to the ChatParser class**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"* Designed the overall ChatParser structure","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"* Implemented the preprocessing of user input into commands","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kennethSty"},"content":"* Created Exception handling for system recovery after incorrect user input","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"* Implemented the command routing in the ChatParser class via the `run` and the `multiCommandParsing` methods.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"* Implemented logging the command routing flow","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"* Furthermore, I implemented the logic of the following commands:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"- log meals","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"- meal menu (previously list meals. [s here:](https://github.com/nus-cs2113-AY2425S1/tp/commit/e327b5ac406777e57f70f0014db46927f7d51d32#diff-44f81584378b70dc571d0791db08ade270cd1e700ad47c561c9a85bbe10b46ebR18))","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"- save meal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"- add mealEntry","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"5. **Implementing the UI class**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"* Implemented static methods to be used throughout this project for standardizing user input. ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"* Added the feature to print the list of previously consumed meals and meal options","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"* Added key elements for output structuring and their usage when printing user feedback","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"* Implemented the consumption bar as the key visual element to highlight the progress the user makes towards his/her health goal on a daily basis.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"* Implemented the triggers of printing and updating the consumption bar when adding and deleting mealEntries.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"The following exemplifies these elements: ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"```dtd","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"  add mealEntry burger /c300","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"  Tracked: burger with 300 calories (at: 2024-10-29T22:00)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"  % of Expected Calorie Intake Consumed:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"  ███░░░░░░░░░░░░░░░░░░░░░░░░░░|  11% |░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░ (2024-10-29)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"  log meals","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"  1: burger with 300 calories (at: 2024-10-29T22:00)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kennethSty"},"content":"  _____________________________________________________________________________","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kennethSty"},"content":"```","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryryry-3302"},"content":"6. **Unit Testing**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"* Implemented the ChatParserTest class and the foundational methods setOutputStream, restoreStream, compareChatParserOutput.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"* Added the following tests:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"- randomInput_printsError and the respective simulation methods simulateInitOutput, simulateReply and simulateFareWell","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"- addMealToOptionsWithName_success and the simulation method getMealOptionsStringWithNewMeal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kennethSty"},"content":"- addMealToOptionsNoName_failure","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"- trackMealEntryWithCalories_success ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"### Contributions to the User Guide","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"Added the sections:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"- `Get an overview on your calorie consumption` ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"- `Track your daily progress`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"- `Create your user profile`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kennethSty"},"content":"Overall proofreading.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kennethSty"},"content":"  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kennethSty"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kennethSty"},"content":"* In `Design \u0026 Implementation` I added the following subsections:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"- `High Level Class design` (incl. class diagram)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"- `HealthMate`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"- `ChatParser`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"- `MealList`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"- `MealEntriesList`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kennethSty"},"content":"- `Meal` (including the sequence diagram)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kennethSty"},"content":"- `MealEntry`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kennethSty"},"content":"- `User`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"* In the `Features` section the subsections I added are:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"- `Creating a User Profile` and the sequence diagram userSequenceDiagram.jpg. ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kennethSty"},"content":"- `ChatParser Input Handling` including the subsections","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kennethSty"},"content":"### Contributions to Team Tasks","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"* Took over responsibility for managing and creating issues for steering team progress","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ryryry-3302"},"content":"* Created the first POC application for tracking mealEntries and mealOptions to kickstart the project. ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"* Fixed IO Testing issues","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"* Left feedback in my PR reviews, resulting in follow-up issues.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kennethSty"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kennethSty"},"content":"* Reviewed, approved or if necessary requested changes to multiple PRs","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ryryry-3302"},"content":"* Helped to finish the User profile creation procedure when the previous approach got stuck","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":8,"kennethSty":99}},{"path":"docs/team/ryryry-3302.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"# Project Portfolio Page - ryryry-3302","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"## Overview","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"HealthMate is a meal and calorie tracking application designed to help users manage their dietary intake, monitor ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"their  weight, and track their overall health goals. The app enables users to log meals, track calories, and observe ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"their progress towards a healthier lifestyle.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"## Summary of Contributions","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"[Link to code contributions](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003dryryry-3302\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-09-20\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dryryry-3302\u0026tabRepo\u003dAY2425S1-CS2113-W12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"1. **Command Class**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"   - Abstract class used to serve as the base class child command classes","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"   - Used to store command info such as, command name, syntax and description","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"   - Convenient design allowing us to store future command information added later on and for easy retrieval with a ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"     common toString() method","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"2. **CommandMap Class**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"   - Used to store all possible commands for use with the `list commands` command","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"   - Allows users to quickly see a brief overview of all commands possible","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"   - Hashmap allows fast retrieval of all information of a specific command in O(1) time","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"3. **Parameter enum**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"   - Used to store different parameters we use for different commands instead of magic literals","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"   - Has methods for retrieving specific parameter values as well as throwing exceptions for bad formatting/ ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"     missing values","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"4. **Enhanced add meal command**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"   - Modified extractAndAppendMeal to include optional parameters from the Parameter class","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"   - Added exception handling for Bad formatting/ Missing values accompanied by a UI reply","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"5. **Unit Testing**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"   - Implemented all tests Parameters","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"   - Implemented all tests UI","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"   - Updated ChatParser tests","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"### Contributions to the User Guide","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"Wrote documentation for the following commands including description, sample usage and console output","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"1. `list commands`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"2. `save meal`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"3. `add mealEntry`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"4. `delete meal`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"5. `meal menu`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"6. `log meals`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"7. `delete mealEntry`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"8. Summary table","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"- Added implementation details of the `CommandMap` class and `listCommands`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"- Created UML diagrams for `askForUserData`, `readUserDataFromFile`","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"### Contributions to team based tasks","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"- Setting up milestones and maintaining issues","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"- Enable assertions in build gradle","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"- Reminding of weekly deliverables and deadlines","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"### Community","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"- Forum responses [1](https://github.com/nus-cs2113-AY2425S1/forum/issues/2#issuecomment-2294732154)","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":53}},{"path":"src/main/java/seedu/healthmate/HealthMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.HealthGoal;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.ChatParser;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class HealthMate {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"    private static HealthGoal healthGoal;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"    private static ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"        UI.printGreeting();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"        chatParser.run();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"kennethSty":9,"-":8}},{"path":"src/main/java/seedu/healthmate/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"public abstract class Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"    private static final String INDENTATION \u003d \"      \";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"    public final String command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"    private final String format;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"    private final String description;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    public Command(String command, String format, String description) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"        this.format \u003d format;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"    public String toString() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"        return \"Command: \" + command + \"\\n\" +","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"                INDENTATION + \"Format: \" + format + \"\\n\" +","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"                INDENTATION + \"Description: \" + description;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    public String getCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"        return command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":25,"DarkDragoon2002":3}},{"path":"src/main/java/seedu/healthmate/command/CommandMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.AddMealEntryCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.DeleteMealCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.DeleteMealEntryCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.HistoricCalorieProgressCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.ListCommandsCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.LogMealsCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.MealMenuCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.SaveMealCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.TodayCalorieProgressCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.commands.UpdateUserDataCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.MealRecommendationsCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.WeightTimelineCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"import java.util.Map;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"import java.util.List;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"public class CommandMap {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    private static final Logger logger \u003d Logger.getLogger(CommandMap.class.getName());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"    private static final Map\u003cString, Command\u003e COMMANDSMAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"    static {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(LogMealsCommand.COMMAND, new LogMealsCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(AddMealEntryCommand.COMMAND, new AddMealEntryCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(DeleteMealEntryCommand.COMMAND, new DeleteMealEntryCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(DeleteMealCommand.COMMAND, new DeleteMealCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(ListCommandsCommand.COMMAND, new ListCommandsCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(MealMenuCommand.COMMAND, new MealMenuCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(SaveMealCommand.COMMAND, new SaveMealCommand());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryan-txn"},"content":"        COMMANDSMAP.put(UpdateUserDataCommand.COMMAND, new UpdateUserDataCommand());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"        COMMANDSMAP.put(TodayCalorieProgressCommand.COMMAND, new TodayCalorieProgressCommand());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"        COMMANDSMAP.put(HistoricCalorieProgressCommand.COMMAND, new HistoricCalorieProgressCommand());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(MealRecommendationsCommand.COMMAND, new MealRecommendationsCommand());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"        COMMANDSMAP.put(WeightTimelineCommand.COMMAND, new WeightTimelineCommand());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"    // Retrieve a command by its name","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"    public static List\u003cCommand\u003e getCommands(String userInput, String command) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"        if(userInput.equals(command)) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"            return  getAllCommands();","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"        String commandToFind \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"        List\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"        if(!COMMANDSMAP.containsKey(commandToFind)) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"            return getAllCommands();","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"        commands.add(getCommandByName(commandToFind));","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"        return commands;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"    private static Command getCommandByName(String commandName) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"        return COMMANDSMAP.get(commandName);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryryry-3302"},"content":"    private static List\u003cCommand\u003e getAllCommands() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryryry-3302"},"content":"        assert !COMMANDSMAP.isEmpty() : \"Command map should not be empty\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"        List\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e(COMMANDSMAP.values());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ryryry-3302"},"content":"        logger.info(\"Retrieved \" + commands.size() + \" commands from the CommandMap\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ryryry-3302"},"content":"        return commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":55,"ryan-txn":1,"DarkDragoon2002":12}},{"path":"src/main/java/seedu/healthmate/command/CommandPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.command;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.Pair;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"public class CommandPair extends Pair\u003cString, String[]\u003e {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"    public CommandPair(String twoTokenCommand, String[] additionalCommands){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"        super(twoTokenCommand, additionalCommands);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"    public String getMainCommand() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"        return super.t();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"    public String getCommandByIndex(int index) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"        return super.u()[index];","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"    public String toString() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"        return super.toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"kennethSty":24}},{"path":"src/main/java/seedu/healthmate/command/commands/AddMealEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.HistoryTracker;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to add a meal entry to the user\u0027s meal log.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" * The meal entry can be added from an existing meal in the meal menu or","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":" * as a new meal with a specified number of calories.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"public class AddMealEntryCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"add mealEntry\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for adding a meal entry with proper parameters. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"            \"add mealEntry {meal name from menu} | or | add mealEntry {meal name} /c{number of calories}\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String DESCRIPTION \u003d","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"            \"Adds a meal entry to the meal log either from a pre-existing meal in the \"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"                    + \"meal menu or a new meal with a specified amount of calories\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs an {@code AddMealEntryCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"    public AddMealEntryCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the add meal entry command by appending a new meal entry to the user\u0027s meal log.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     * The meal entry can be an existing meal from the meal options or a new meal entry with specified calories.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     * Saves the updated meal entries to the history tracker.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param historyTracker The history tracker to save the updated meal entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealOptions The list of predefined meal options.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealEntries The list of meal entries to which the new meal will be added.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user for whom the meal entry is being added.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput The input provided by the user, containing the meal name and optional calories.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param command The specific command keyword issued by the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"            HistoryTracker historyTracker, MealList mealOptions, MealEntriesList mealEntries,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"            User user, String userInput, String command, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealOptions !\u003d null : \"Meal options list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealEntries !\u003d null : \"Meal entries list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to add a meal to mealEntries\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DarkDragoon2002"},"content":"        // Adds the meal entry and updates history","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DarkDragoon2002"},"content":"        mealEntries.extractAndAppendMeal(userInput, command, mealOptions, user);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DarkDragoon2002"},"content":"        historyTracker.saveMealEntries(mealEntries);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":12,"DarkDragoon2002":53}},{"path":"src/main/java/seedu/healthmate/command/commands/DeleteMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.HistoryTracker;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to delete a meal option from the meal menu.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" * The meal is deleted based on its specified index in the meal menu.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"public class DeleteMealCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"delete meal\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for deleting a meal option by specifying its index. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d COMMAND + \" {index of meal in meal menu}\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    private static final String DESCRIPTION \u003d \"Deletes meal option at the specified index from the meal menu\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code DeleteMealCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"    public DeleteMealCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the delete meal command by removing a meal option from the meal menu at the specified index.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     * Saves the updated meal options list to the history tracker.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param historyTracker The history tracker to save the updated meal options.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealOptions The list of meal options from which the specified meal will be deleted.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput The input provided by the user, containing the index of the meal to be deleted.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param command The specific command keyword issued by the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"            HistoryTracker historyTracker, MealList mealOptions,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"            String userInput, String command, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealOptions !\u003d null : \"Meal options list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to delete a meal from meal options\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"        // Removes the specified meal from the meal options and updates history","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"        mealOptions.extractAndRemoveMeal(userInput, command);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"        historyTracker.saveMealOptions(mealOptions);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":42}},{"path":"src/main/java/seedu/healthmate/command/commands/DeleteMealEntryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.HistoryTracker;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to delete a meal entry from the user\u0027s meal log.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" * The meal entry is deleted based on its specified index in the meal log.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"public class DeleteMealEntryCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"delete mealEntry\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for deleting a meal entry by specifying its index in the meal log. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d COMMAND + \" {index of meal in the meal log}\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"    private static final String DESCRIPTION \u003d \"Used to delete a meal at a specified index in the meal log\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code DeleteMealEntryCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"    public DeleteMealEntryCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the delete meal entry command by removing a meal entry from the user\u0027s meal log","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * at the specified index. Saves the updated meal entries list to the history tracker.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param historyTracker The history tracker to save the updated meal entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealEntries The list of meal entries from which the specified meal entry will be deleted.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user whose meal entry is being deleted.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput The input provided by the user, containing the index of the meal entry to be deleted.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param command The specific command keyword issued by the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"            HistoryTracker historyTracker, MealEntriesList mealEntries,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"            User user, String userInput, String command, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealEntries !\u003d null : \"Meal entries list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to delete a meal from mealEntries\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"        // Removes the specified meal entry from the meal log and updates history","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"        mealEntries.removeMealWithFeedback(userInput, command, user);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"        historyTracker.saveMealEntries(mealEntries);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":44}},{"path":"src/main/java/seedu/healthmate/command/commands/HistoricCalorieProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DarkDragoon2002"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.CommandPair;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to display historical calorie progress by showing calorie progress bars and statistics","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":" * for a specified number of days including today.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"public class HistoricCalorieProgressCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"    public static final String COMMAND \u003d \"show historicCalories\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format specifying the number of days to include in the historic calorie progress. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String FORMAT \u003d \"show historicCalories {Number of Days inclu. Today}\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String DESCRIPTION \u003d","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"            \"Prints Calorie Progress Bars \u0026 Various Stats to represent Historical Calorie Progress\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code HistoricCalorieProgressCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"    public HistoricCalorieProgressCommand() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the historic calorie progress command by displaying calorie progress bars and statistics","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * for a specified number of days including today. If a valid number of days is specified, the command","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * shows historical calorie data.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealEntries The list of meal entries to use for displaying calorie progress.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param commandPair The command pair containing the main command and additional parameters.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user whose calorie progress is being displayed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"            MealEntriesList mealEntries, CommandPair commandPair, User user, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealEntries !\u003d null : \"Meal entries list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to print historic calorie bar\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"        Optional\u003cInteger\u003e pastDays \u003d parseDaysFromCommand(commandPair, 0);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays calorie progress for the specified number of past days","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"        pastDays.ifPresent(days -\u003e mealEntries.printHistoricConsumptionBars(user, days));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DarkDragoon2002"},"content":"     * Attempts to parse a specific command token as an integer, representing the number of days for","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DarkDragoon2002"},"content":"     * which calorie progress should be displayed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param commandPair The command pair containing the commands and additional parameters.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param index The index of the parameter within the additional commands array.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return An {@code Optional\u003cInteger\u003e} representing the number of days, if parsed successfully.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DarkDragoon2002"},"content":"    private static Optional\u003cInteger\u003e parseDaysFromCommand(CommandPair commandPair, int index) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DarkDragoon2002"},"content":"        assert commandPair !\u003d null : \"CommandPair should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DarkDragoon2002"},"content":"        assert index \u003e\u003d 0 : \"Index should be non-negative\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DarkDragoon2002"},"content":"        try {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DarkDragoon2002"},"content":"            int days \u003d Integer.parseInt(commandPair.getCommandByIndex(index));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DarkDragoon2002"},"content":"            return Optional.of(days);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DarkDragoon2002"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(commandPair.getCommandByIndex(index), \"The following is not a valid number: \");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DarkDragoon2002"},"content":"        } catch (IndexOutOfBoundsException s) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(\"Specify the number of days you want to look into the past\", \"Missing input: \");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DarkDragoon2002"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DarkDragoon2002"},"content":"        return Optional.empty();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DarkDragoon2002"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"DarkDragoon2002":82}},{"path":"src/main/java/seedu/healthmate/command/commands/ListCommandsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.CommandMap;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.List;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to list all available commands in the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"public class ListCommandsCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"list commands\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for listing all available commands. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"list commands\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    private static final String DESCRIPTION \u003d \"Lists out all available commands\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code ListCommandsCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"    public ListCommandsCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the list commands command by retrieving and displaying all available commands","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     * to the user. Logs the command execution and asserts that the commands list is not null.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput The input provided by the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param command The specific command keyword issued by the user.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(String userInput, String command, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"        List\u003cCommand\u003e commands \u003d CommandMap.getCommands(userInput, command);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"        assert commands !\u003d null : \"Commands list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to show all available commands\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays the list of all available commands","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printCommands(commands);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":37}},{"path":"src/main/java/seedu/healthmate/command/commands/LogMealsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to display the log of all meal entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" * Each meal entry is shown with its timestamp in date-time format.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"public class LogMealsCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"log meals\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for displaying the meal log. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"log meals\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String DESCRIPTION \u003d","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"            \"Displays the log of all meal entries along with their Timestamp in Date Time format\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code LogMealsCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"    public LogMealsCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the log meals command by displaying the user\u0027s meal log.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * Logs the command execution and asserts that the meal entries list is not null.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealEntries The list of meal entries to display.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(MealEntriesList mealEntries, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealEntries !\u003d null : \"Meal entries list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to show meal history\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays the log of all meal entries","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printMealEntries(mealEntries);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":36}},{"path":"src/main/java/seedu/healthmate/command/commands/MealMenuCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to display the menu of previously saved food items along with their calorie counts.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"public class MealMenuCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"meal menu\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for displaying the meal menu. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"meal menu\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"    private static final String DESCRIPTION \u003d \"Displays the menu of previously saved food along with their calories\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code MealMenuCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"    public MealMenuCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the meal menu command by displaying the list of saved food options along with their calorie information.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"     * Logs the command execution and asserts that the meal options list is not null.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealOptions The list of meal options to display.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(MealList mealOptions, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealOptions !\u003d null : \"Meal options list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing meal menu command to show meal options\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays the list of meal options","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printMealOptions(mealOptions);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":34}},{"path":"src/main/java/seedu/healthmate/command/commands/MealRecommendationsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.recommender.RecipeMap;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.List;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to display meal recommendations based on the user\u0027s health goal.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"public class MealRecommendationsCommand extends Command {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"meal recommendations\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for displaying meal recommendations. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"meal recommendations\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    private static final String DESCRIPTION \u003d \"Displays meal recommendations based on User\u0027s health goal\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code MealRecommendationsCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    public MealRecommendationsCommand() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the meal recommendations command by displaying meal recommendations that align with","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     * the user\u0027s health goal. Retrieves relevant recipes from the RecipeMap and displays them.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * Logs the command execution and asserts that the user\u0027s health goal and recipes list are valid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user for whom meal recommendations are being generated.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(User user, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"        assert user.getHealthGoal() !\u003d null : \"User health goal should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"        // Retrieves and verifies recipes based on the user\u0027s health goal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        List\u003cRecipe\u003e recipes \u003d RecipeMap.getRecipesByGoal(user.getHealthGoal());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"        assert recipes !\u003d null \u0026\u0026 !recipes.isEmpty() : \"Recipes should not be null or empty\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to list meal recommendation\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays the list of recommended meals","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printRecommendation(recipes);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":42}},{"path":"src/main/java/seedu/healthmate/command/commands/SaveMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.Meal;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.HistoryTracker;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.services.MealSaver;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to save a meal to the meal menu for future use with the \"add mealEntry\" command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":" * This command allows users to save meal details, including the name and calorie count.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"public class SaveMealCommand extends Command {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"save meal\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for saving a meal with a specified name and calorie count. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"save meal {meal name} /c{number of calories}\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String DESCRIPTION \u003d","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"            \"Saves a meal to the meal menu for later use with the add mealEntry command\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code SaveMealCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"    public SaveMealCommand() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the save meal command by extracting meal details from the user input and","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * saving the meal to the meal menu. Logs the command execution and asserts that the necessary","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * components are available and valid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param historyTracker The history tracker used to save the meal to persistent storage.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealOptions The list of meal options to which the new meal will be added.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput The input provided by the user, containing the meal name and calorie count.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"            HistoryTracker historyTracker, MealList mealOptions, String userInput, Logger logger) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing save meal command to save meal options\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"        assert historyTracker !\u003d null : \"HistoryTracker should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"        // Initializes MealSaver and extracts meal details from user input","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"        MealSaver mealSaver \u003d new MealSaver(historyTracker);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"        Optional\u003cMeal\u003e mealToSave \u003d mealSaver.extractMealFromUserInput(userInput);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"        // Saves the meal to the meal options list if valid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"        mealToSave.ifPresent(meal -\u003e mealSaver.saveMeal(meal, mealOptions));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-14","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":12,"DarkDragoon2002":47}},{"path":"src/main/java/seedu/healthmate/command/commands/TodayCalorieProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DarkDragoon2002"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to display today\u0027s calorie progress by printing a calorie progress bar","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" * that reflects the user\u0027s calorie consumption for the current day.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"public class TodayCalorieProgressCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"    public static final String COMMAND \u003d \"show todayCalories\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for displaying today\u0027s calorie progress. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String FORMAT \u003d \"show todayCalories\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String DESCRIPTION \u003d \"Prints a Calorie Progress Bar to represent Today Calorie Progress\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code TodayCalorieProgressCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"    public TodayCalorieProgressCommand() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the today calorie progress command by displaying a calorie progress bar that","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * shows the user\u0027s calorie consumption for the current day. Logs the command execution and","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     * asserts that the meal entries list is not null.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealEntries The list of meal entries used to calculate today\u0027s calorie consumption.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user whose calorie progress is being displayed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommands(MealEntriesList mealEntries, User user, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealEntries !\u003d null : \"Meal entries list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to print daily progress bar\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays the calorie progress bar for today","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        mealEntries.printDaysConsumptionBar(user, LocalDateTime.now());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"DarkDragoon2002":51}},{"path":"src/main/java/seedu/healthmate/command/commands/UpdateUserDataCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryan-txn"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryan-txn"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.UserHistoryTracker;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to update the user\u0027s personal data.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":" * This command triggers prompts to gather and update the user\u0027s height, weight, gender, age, and health goal.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryan-txn"},"content":"public class UpdateUserDataCommand extends Command {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryan-txn"},"content":"    public static final String COMMAND \u003d \"update userdata\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for updating user data. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"update userdata\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryan-txn"},"content":"    private static final String DESCRIPTION \u003d \"Triggers prompts for asking height, weight, gender, age and health goal\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs an {@code UpdateUserDataCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryan-txn"},"content":"    public UpdateUserDataCommand() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryan-txn"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the update user data command by triggering prompts to collect new data for","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"     * the user\u0027s profile, including height, weight, gender, age, and health goal.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * Logs the command execution and asserts that the new user data is valid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userHistoryTracker The user history tracker used to save and display updated user information.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(UserHistoryTracker userHistoryTracker, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to update user data\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"        // Prompts the user to enter new data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"        User newUser \u003d User.askForUserData();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"        assert newUser !\u003d null : \"New user data should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays all user entries after update","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        userHistoryTracker.printAllUserEntries();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryan-txn"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":1,"ryan-txn":13,"DarkDragoon2002":37}},{"path":"src/main/java/seedu/healthmate/command/commands/WeightTimelineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.command.commands;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.UserEntryList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.UserHistoryTracker;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"import seedu.healthmate.core.WeightEntryDisplay;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":" * Represents a command to view a timeline of the user\u0027s last 10 weight updates.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":" * This command displays the weight entries in a timeline format.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"public class WeightTimelineCommand extends Command {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command keyword to invoke this action. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"    public static final String COMMAND \u003d \"weight timeline\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Command format for displaying the weight timeline. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FORMAT \u003d \"weight timeline\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    /** Description of the command functionality. */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    private static final String DESCRIPTION \u003d \"View a timeline of the last 10 weight updates\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructs a {@code WeightTimelineCommand} object with a predefined command keyword,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     * format, and description.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    public WeightTimelineCommand() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"        super(COMMAND, FORMAT, DESCRIPTION);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"     * Executes the weight timeline command by retrieving and displaying the user\u0027s weight history.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"     * Logs the command execution and asserts that the user history data is available and valid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userHistoryTracker The tracker that stores and manages the user\u0027s historical data.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param logger The logger used for logging command execution steps.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void executeCommand(UserHistoryTracker userHistoryTracker, Logger logger) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"        logger.log(Level.INFO, \"Executing command to print weight timeline\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"        // Retrieves and verifies user weight history data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"        Optional\u003cUserEntryList\u003e userHistoryData \u003d userHistoryTracker.loadUserData();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        assert userHistoryData !\u003d null \u0026\u0026 userHistoryData.isPresent() : \"User history data should not be null or empty\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        // Displays the weight timeline if data is available","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"        WeightEntryDisplay.display(userHistoryData);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":13,"DarkDragoon2002":39}},{"path":"src/main/java/seedu/healthmate/core/HealthGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryan-txn"},"content":"public class HealthGoal {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String WEIGHT_LOSS \u003d \"WEIGHT_LOSS\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String STEADY_STATE \u003d \"STEADY_STATE\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final String BULKING \u003d \"BULKING\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final double WEIGHT_LOSS_MODIFIER \u003d 0.7;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final double STEADY_STATE_MODIFIER \u003d 1.1;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"    private static final double BULKING_MODIFIER \u003d 1.5;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"    private String currentHealthGoal;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"     * Constructor for HealthGoal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"     * Initializes the health goal with the provided input.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param healthGoalInput the desired health goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    public HealthGoal(String healthGoalInput) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"        saveHealthGoal(healthGoalInput);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * Saves the current health goal based on input.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param healthGoalInput the input health goal (e.g., WEIGHT_LOSS).","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"    public void saveHealthGoal(String healthGoalInput) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"        assert healthGoalInput !\u003d null : \"Health goal input cannot be null\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"        switch (healthGoalInput) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"        case WEIGHT_LOSS:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"            currentHealthGoal \u003d WEIGHT_LOSS;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"        case STEADY_STATE:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"            currentHealthGoal \u003d STEADY_STATE;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"        case BULKING:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"            currentHealthGoal \u003d BULKING;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"        default:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(\"Invalid Health Goal\", \"Save Health Goal Error: \");","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"     * Gets the current health goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return the current health goal as a String.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"    public String getCurrentHealthGoal() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"        return currentHealthGoal;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DarkDragoon2002"},"content":"     * Calculates the target calories based on user data and health goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param height  the user\u0027s height in cm.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param weight  the user\u0027s weight in kg.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param isMale  true if the user is male, false if female.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param age     the user\u0027s age.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return the target calories based on the health goal and user data.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DarkDragoon2002"},"content":"    public double getTargetCalories(double height, double weight, boolean isMale, int age) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DarkDragoon2002"},"content":"        assert height \u003e 0 : \"Height must be positive\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DarkDragoon2002"},"content":"        assert weight \u003e 0 : \"Weight must be positive\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DarkDragoon2002"},"content":"        assert age \u003e 0 : \"Age must be positive\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DarkDragoon2002"},"content":"        double rawCaloriesTarget;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DarkDragoon2002"},"content":"        if (isMale) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"            rawCaloriesTarget \u003d 88.362 + (13.397 * weight) + (4.799 * height) - (5.677 * age);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DarkDragoon2002"},"content":"        } else {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DarkDragoon2002"},"content":"            rawCaloriesTarget \u003d 447.593 + (9.247 * weight) + (3.098 * height) - (4.330 * age);","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DarkDragoon2002"},"content":"        assert currentHealthGoal !\u003d null : \"Current health goal must be set\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DarkDragoon2002"},"content":"        switch (currentHealthGoal) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DarkDragoon2002"},"content":"        case WEIGHT_LOSS:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DarkDragoon2002"},"content":"            return rawCaloriesTarget * WEIGHT_LOSS_MODIFIER;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DarkDragoon2002"},"content":"        case STEADY_STATE:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DarkDragoon2002"},"content":"            return rawCaloriesTarget * STEADY_STATE_MODIFIER;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DarkDragoon2002"},"content":"        case BULKING:","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DarkDragoon2002"},"content":"            return rawCaloriesTarget * BULKING_MODIFIER;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DarkDragoon2002"},"content":"        default:","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DarkDragoon2002"},"content":"            return -1;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DarkDragoon2002"},"content":"     * Returns a string representation of the current health goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return the current health goal as a String.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DarkDragoon2002"},"content":"    @Override","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ryan-txn"},"content":"    public String toString() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DarkDragoon2002"},"content":"        assert currentHealthGoal !\u003d null : \"Current health goal cannot be null when converting to string\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ryan-txn"},"content":"        return currentHealthGoal;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"ryan-txn":8,"kennethSty":6,"DarkDragoon2002":90}},{"path":"src/main/java/seedu/healthmate/core/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.Parameter;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"public class Meal {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"    private final Optional\u003cString\u003e name;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"    private final int calories;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"    public Meal(Optional\u003cString\u003e name, int calories) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"     * Extracts a Meal object from a string input.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"     * @param input The input string containing meal information","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"     * @param command The command string to parse from","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"     * @return A new Meal object with the extracted description and calories","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"     * @throws EmptyCalorieException if no calorie value is specified","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"     * @throws BadCalorieException if the calorie format is invalid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"    public static Meal extractMealFromString(String input,","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"                                             String command) throws EmptyCalorieException, BadCalorieException {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"        Optional\u003cString\u003e mealDescription \u003d extractMealDescription(input, command);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        int calories \u003d Parameter.getCalories(input);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"        Meal meal \u003d new Meal(mealDescription, calories);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"        return meal;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"     * Extracts the meal description from the input string.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"     * @param input The input string containing the meal description","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"     * @param command The command string to parse from","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"     * @return An Optional containing the extracted meal description, or empty if none exists","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"    public static Optional\u003cString\u003e extractMealDescription(String input, String command) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"        int mealDescriptionIndex \u003d input.indexOf(command) + command.length();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dri-water"},"content":"        int signallerIndex \u003d input.indexOf(Parameter.EMPTY_SIGNALLER.getPrefix());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dri-water"},"content":"        if (signallerIndex \u003d\u003d -1) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dri-water"},"content":"            signallerIndex \u003d input.length();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dri-water"},"content":"        return Optional.ofNullable(input.substring(mealDescriptionIndex, signallerIndex).strip());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"    public boolean descriptionIsEmpty() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"        return this.name.orElse(\"\").length() \u003d\u003d 0;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"    public boolean isBeforeEqualDate(LocalDateTime timestamp) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"        return false;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"    public boolean isAfterEqualDate(LocalDateTime timestamp) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"        return false;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"        return this.name.orElse(\"\") + \",\" + this.getCalories();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dri-water"},"content":"    public Optional\u003cString\u003e getName() {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dri-water"},"content":"        return this.name;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dri-water"},"content":"    public int getCalories() {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dri-water"},"content":"        return this.calories;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"    public String toString() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"        return this.name.orElse(\"Meal\") + \" with \" + this.calories + \" calories\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Dri-water":27,"ryryry-3302":3,"kennethSty":49}},{"path":"src/main/java/seedu/healthmate/core/MealEntriesList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import static seedu.healthmate.core.MealEntry.extractMealEntryFromString;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dri-water"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dri-water"},"content":"import java.util.List;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.ConsumptionStatistics;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadPortionException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadTimestampException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.MealNotFoundException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.DateTimeUtils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.Parameter;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"public class MealEntriesList extends MealList {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"    public MealEntriesList() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"        super();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"    public MealEntriesList(ArrayList\u003cMeal\u003e mealList) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"        super(mealList);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"     * Creates a new mealEntry from user input and appends it to the list of mealEntries","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kennethSty"},"content":"     * @param userInput the original user input","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"     * @param command the command that triggered this action","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"     * @param mealOptions the list of available presaved meals","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"     * @param user the user\u0027s profile","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"    public void extractAndAppendMeal(String userInput, String command, MealList mealOptions, User user) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"        try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"            int portions \u003d Parameter.getPortions(userInput);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"            MealEntry meal \u003d extractMealEntryFromString(userInput, command, mealOptions);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"            addPortionsOfMeal(meal, portions);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"            printDaysConsumptionBar(user, meal.getTimestamp());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"        } catch (EmptyCalorieException | BadCalorieException e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Every meal needs a calorie integer (e.g. /c120).\", \"\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Do not forget to use /c{Integer} mark the following integer as calories\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"                    \"Retry: \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"        } catch (MealNotFoundException e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"            UI.printReply(\"Please save this meal to the meal menu first, or use /c and /p to include calories and\"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"                    + \" portion sizes\", \"\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"        } catch (BadPortionException e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Please reformat your portion size properly (e.g for 2 portions {/p2}).\",","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"                    \"Retry: \");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"        } catch (BadTimestampException e) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Please include a timestamp for your meal (e.g for 2024-10-30 {/t2024-10-30}).\",","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"                    \"Retry: \");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kennethSty"},"content":"     * Removes a meal from the list of tracked meal consumption","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"     * Prints out visual feedback to highlight the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"     * resulting change interms of today\u0027s calorie consumption bar","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"     * @param userInput The user input causing the this remove process","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"     * @param command The identified command instance","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kennethSty"},"content":"     * @param user The user\u0027s profile","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"    public void removeMealWithFeedback(String userInput, String command, User user) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DarkDragoon2002"},"content":"        try {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DarkDragoon2002"},"content":"            int mealNumber \u003d Integer.parseInt(userInput.replaceAll(command, \"\").strip());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"            LocalDateTime mealEntryDate \u003d this.getDateOfMealEntry(mealNumber);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DarkDragoon2002"},"content":"            deleteMeal(mealNumber);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"            printDaysConsumptionBar(user, mealEntryDate);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DarkDragoon2002"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(\"Meal Entry index needs to be an integer\", \"Error: \");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DarkDragoon2002"},"content":"        } catch (IndexOutOfBoundsException s) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(\"Meal Entry index needs to be within range\", \"Error: \");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DarkDragoon2002"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"     * Given portions `p`, adds the mealEntry p times to the list of mealEntries","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"     * @param mealEntry the meal to be added","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kennethSty"},"content":"     * @param portion the portions consumed of the meal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kennethSty"},"content":"    public void addPortionsOfMeal(Meal mealEntry, int portion) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"        IntStream.range(0, Math.max(1, portion))","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"                .forEach(i -\u003e this.addMeal(mealEntry));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kennethSty"},"content":"     * Adds a mealEntry to the mealEntriesList","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"     * @param mealEntry","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"    public void addMeal(Meal mealEntry) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"        super.mealList.add(mealEntry);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kennethSty"},"content":"        UI.printReply(mealEntry.toString(), \"Tracked: \");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kennethSty"},"content":"     * Deletes a mealEntry by its index in the log meals overview","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kennethSty"},"content":"     * @param mealNumber","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author DarkDragoon2002","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DarkDragoon2002"},"content":"    @Override","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DarkDragoon2002"},"content":"    public void deleteMeal(int mealNumber) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DarkDragoon2002"},"content":"        Meal mealToDelete \u003d this.mealList.get(mealNumber - 1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DarkDragoon2002"},"content":"        super.mealList.remove(mealNumber - 1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printReply(mealToDelete.toString(), \"Deleted entry: \");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kennethSty"},"content":"    public List\u003cMeal\u003e getMealEntries() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kennethSty"},"content":"        return new ArrayList\u003c\u003e(super.mealList);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kennethSty"},"content":"     * Computes actual calorie consumption and delegates the construction of the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kennethSty"},"content":"     * consumption bar to the user instance with the relevant idealCalories consumption data","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ryan-txn"},"content":"     * @param user User profile for which the ideal calorie consumption","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ryan-txn"},"content":"     *                  will be compared with the actual consumption","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kennethSty"},"content":"     * @param dateTime","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kennethSty"},"content":"    public void printDaysConsumptionBar(User user, LocalDateTime dateTime) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kennethSty"},"content":"        assert user !\u003d null : \"User cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"        assert dateTime !\u003d null: \"Date needs to be specified to print todays consumption bar\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDateTime todayStartOfDay \u003d DateTimeUtils.startOfDayLocalDateTime(DateTimeUtils.currentDate());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDateTime todayEndOfDay \u003d DateTimeUtils.endOfDayLocalDateTime(DateTimeUtils.currentDate());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DarkDragoon2002"},"content":"        MealEntriesList mealsConsumedToday \u003d this.getMealEntriesByDate(todayEndOfDay, todayStartOfDay);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kennethSty"},"content":"        int caloriesConsumed \u003d mealsConsumedToday.getTotalCaloriesConsumed();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DarkDragoon2002"},"content":"        user.printTargetCalories();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printString(\"Current Calories Consumed: \" + caloriesConsumed);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kennethSty"},"content":"        user.printUsersConsumptionBar(\"% of Expected Calorie Intake Consumed: \",","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kennethSty"},"content":"                caloriesConsumed,","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"                dateTime.toLocalDate());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DarkDragoon2002"},"content":"     * Prints the historic consumption bars for a specified number of days.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user the User whose consumption history is to be printed","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param days the number of days to include in the consumption history","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DarkDragoon2002"},"content":"     * @throws IllegalArgumentException if user is null or days is negative","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DarkDragoon2002"},"content":"    public void printHistoricConsumptionBars(User user, int days) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DarkDragoon2002"},"content":"        assert user !\u003d null : \"User cannot be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DarkDragoon2002"},"content":"        assert days \u003e\u003d 0 : \"Days cannot be negative\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DarkDragoon2002"},"content":"        user.printTargetCalories();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kennethSty"},"content":"        ConsumptionStatistics consumptionStats \u003d ConsumptionStatistics.computeStats(user, days, this);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kennethSty"},"content":"        this.printHistoricBarPerDay(days, user);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kennethSty"},"content":"        consumptionStats.printStats(days);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kennethSty"},"content":"    public int getTotalCaloriesConsumed() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"        return this.mealList.stream()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"                .map(meal -\u003e meal.getCalories())","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"                .reduce(0, (accumulator, calorie) -\u003e accumulator + calorie);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kennethSty"},"content":"    public Optional\u003cMealEntry\u003e getMaxCaloriesConsumed() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"        return this.mealList.stream()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kennethSty"},"content":"                .map(meal -\u003e (MealEntry) meal)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kennethSty"},"content":"                .reduce((meal1, meal2) -\u003e meal1.getCalories() \u003e meal2.getCalories() ? meal1 : meal2);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kennethSty"},"content":"    public MealEntriesList getMealEntriesByDate(LocalDateTime upperDateBound, LocalDateTime lowerDateBound) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kennethSty"},"content":"        ArrayList\u003cMeal\u003e filteredMeals \u003d super.mealList.stream()","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kennethSty"},"content":"                .filter(meal -\u003e meal.isBeforeEqualDate(upperDateBound))","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kennethSty"},"content":"                .filter(meal -\u003e meal.isAfterEqualDate(lowerDateBound))","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kennethSty"},"content":"                .collect(Collectors.toCollection(() -\u003e new ArrayList\u003cMeal\u003e()));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kennethSty"},"content":"        return new MealEntriesList(filteredMeals);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author DarkDragoon2002","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DarkDragoon2002"},"content":"     * Credit: Loop by DarkDragoon2002","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DarkDragoon2002"},"content":"     * Iterates daily over this list of mealEntries and prints daily consumption bar","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param days number of days to go back in time","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user user profile who\u0027s the progress bar is built","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DarkDragoon2002"},"content":"    private void printHistoricBarPerDay(int days, User user) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDate today \u003d DateTimeUtils.currentDate();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DarkDragoon2002"},"content":"        for (int i \u003d days - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DarkDragoon2002"},"content":"            LocalDate printDate \u003d today.minusDays(i);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DarkDragoon2002"},"content":"            LocalDateTime upperDateBound \u003d DateTimeUtils.endOfDayLocalDateTime(printDate);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DarkDragoon2002"},"content":"            LocalDateTime lowerDateBound \u003d DateTimeUtils.startOfDayLocalDateTime(printDate);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DarkDragoon2002"},"content":"            MealEntriesList mealsConsumed \u003d this.getMealEntriesByDate(upperDateBound, lowerDateBound);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DarkDragoon2002"},"content":"            int caloriesConsumed \u003d mealsConsumed.getTotalCaloriesConsumed();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DarkDragoon2002"},"content":"            user.printHistoricConsumptionBar(caloriesConsumed, printDate);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DarkDragoon2002"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kennethSty"},"content":"    private LocalDateTime getDateOfMealEntry(int mealNumber) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kennethSty"},"content":"        MealEntry mealEntry \u003d (MealEntry) this.mealList.get(mealNumber - 1);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kennethSty"},"content":"        return mealEntry.getTimestamp();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Dri-water":4,"ryryry-3302":9,"ryan-txn":2,"kennethSty":133,"DarkDragoon2002":63}},{"path":"src/main/java/seedu/healthmate/core/MealEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadTimestampException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyTimestampException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.MealNotFoundException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.Parameter;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":" * Represents a meal entry in the HealthMate application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":" * A meal entry extends the Meal class and includes timestamp information.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"public class MealEntry extends Meal{","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"    private final LocalDateTime timestamp;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"     * Constructs a MealEntry with the current timestamp.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"     * @param name The name/description of the meal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"     * @param calories The caloric content of the meal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"    public MealEntry(Optional\u003cString\u003e name, int calories) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"        super(name, calories);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"        this.timestamp \u003d LocalDateTime.now();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"     * Constructs a MealEntry with a specified timestamp.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"     * @param name The name/description of the meal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"     * @param calories The caloric content of the meal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"     * @param timestamp The timestamp of when the meal was consumed","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"    public MealEntry(Optional\u003cString\u003e name, int calories, LocalDateTime timestamp) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"        super(name, calories);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dri-water"},"content":"     * Extracts a MealEntry object from a string input.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dri-water"},"content":"     * @param input The input string to parse","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dri-water"},"content":"     * @param command The command associated with the input","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dri-water"},"content":"     * @param mealOptions List of predefined meal options","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dri-water"},"content":"     * @return A new MealEntry object based on the input","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dri-water"},"content":"     * @throws EmptyCalorieException If calories information is missing","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dri-water"},"content":"     * @throws BadCalorieException If calories value is invalid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dri-water"},"content":"     * @throws MealNotFoundException If referenced meal is not found in options","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"     * @throws BadTimestampException If timestamp format is invalid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"    public static MealEntry extractMealEntryFromString(String input, String command, MealList mealOptions)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dri-water"},"content":"            throws EmptyCalorieException, BadCalorieException, MealNotFoundException, BadTimestampException {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"        int calories;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"        Optional\u003cString\u003e mealDescription \u003d extractMealDescription(input, command);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dri-water"},"content":"        try {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ryryry-3302"},"content":"            calories \u003d Parameter.getCalories(input);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryryry-3302"},"content":"        } catch (EmptyCalorieException e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dri-water"},"content":"            System.out.println(\"Getting info from meal options...\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dri-water"},"content":"            Optional\u003cInteger\u003e optionalCalories \u003d mealOptions.getCaloriesByMealName(mealDescription.orElse(\"\"));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryryry-3302"},"content":"            if (!optionalCalories.isPresent() \u0026\u0026 !(mealDescription.orElse(\"\").equals(\"\"))) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ryryry-3302"},"content":"                UI.printMealNotFound();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ryryry-3302"},"content":"                throw new MealNotFoundException();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ryryry-3302"},"content":"            }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dri-water"},"content":"            calories \u003d optionalCalories.orElseThrow(() -\u003e new EmptyCalorieException());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dri-water"},"content":"        try {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"            LocalDate timestamp \u003d Parameter.getTimestamp(input);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"            return new MealEntry(mealDescription, calories, timestamp.atStartOfDay());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dri-water"},"content":"        } catch (EmptyTimestampException e) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dri-water"},"content":"            return new MealEntry(mealDescription, calories);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dri-water"},"content":"        } catch (BadTimestampException e) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dri-water"},"content":"            throw new BadTimestampException();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dri-water"},"content":"     * Gets the timestamp of the meal entry.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dri-water"},"content":"     * @return The timestamp when the meal was consumed","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kennethSty"},"content":"    public LocalDateTime getTimestamp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kennethSty"},"content":"        return this.timestamp;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dri-water"},"content":"     * Converts the meal entry to a string format for saving.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dri-water"},"content":"     * @return String representation of the meal entry for storage","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kennethSty"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"        return super.toSaveString() + \", \" + this.timestamp;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dri-water"},"content":"     * Checks if the meal entry\u0027s timestamp is before or equal to the given timestamp.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dri-water"},"content":"     * @param timestamp The timestamp to compare against","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dri-water"},"content":"     * @return true if this entry\u0027s timestamp is before or equal to the given timestamp","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kennethSty"},"content":"    public boolean isBeforeEqualDate(LocalDateTime timestamp) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kennethSty"},"content":"        return this.timestamp.isBefore(timestamp) || this.timestamp.isEqual(timestamp);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dri-water"},"content":"     * Checks if the meal entry\u0027s timestamp is after or equal to the given timestamp.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dri-water"},"content":"     * @param timestamp The timestamp to compare against","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dri-water"},"content":"     * @return true if this entry\u0027s timestamp is after or equal to the given timestamp","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kennethSty"},"content":"    public boolean isAfterEqualDate(LocalDateTime timestamp) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kennethSty"},"content":"        return this.timestamp.isAfter(timestamp) || this.timestamp.isEqual(timestamp);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Dri-water"},"content":"     * Returns a string representation of the meal entry.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dri-water"},"content":"     * @return String representation of the meal entry including timestamp","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kennethSty"},"content":"    public String toString() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"        return super.toString() + \" (at: \" + this.timestamp.toLocalDate() + \")\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Dri-water":69,"ryryry-3302":8,"kennethSty":58}},{"path":"src/main/java/seedu/healthmate/core/MealList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"import static seedu.healthmate.core.Meal.extractMealFromString;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":"import java.util.List;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":" * Represents a list of meals that can be manipulated.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":" * Provides methods to add, remove, and manage meals in the list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"public class MealList {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"    protected ArrayList\u003cMeal\u003e mealList;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"     * Constructs an empty MealList.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"    public MealList() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"        this.mealList \u003d new ArrayList\u003cMeal\u003e();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"     * Constructs a MealList with an existing list of meals.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"     * @param mealList The ArrayList of meals to initialize with","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"    public MealList(ArrayList\u003cMeal\u003e mealList) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"        this.mealList \u003d mealList;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"     * Extracts meal information from user input and adds it to the list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"     * @param userInput The raw input string from user","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"     * @param command The command that triggered this action","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"     * @param mealOptions List of available meal options","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"     * @param user The current user","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"    public void extractAndAppendMeal(String userInput, String command, MealList mealOptions, User user) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"        try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"            Meal meal \u003d extractMealFromString(userInput, command);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"            if (!meal.descriptionIsEmpty()) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"                this.addMeal(meal);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"            } else {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"                UI.printReply(\"Meal options require a name\", \"Retry: \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"            }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"        } catch (EmptyCalorieException | BadCalorieException e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Every meal needs a calorie integer. (e.g. 120)\", \"\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Do not forget to use /c mark the following integer as calories\",","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"                    \"Retry: \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dri-water"},"content":"     * Removes a meal from the list based on user input.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"     * @param userInput The raw input string from user","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dri-water"},"content":"     * @param command The command that triggered this action","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"    public void extractAndRemoveMeal(String userInput, String command) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"        try {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DarkDragoon2002"},"content":"            int mealNumber \u003d Integer.parseInt(userInput.replaceAll(command, \"\").strip());","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DarkDragoon2002"},"content":"            deleteMeal(mealNumber);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DarkDragoon2002"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(\"Meal index needs to be an integer\", \"Error: \");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DarkDragoon2002"},"content":"        } catch (IndexOutOfBoundsException s) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DarkDragoon2002"},"content":"            UI.printReply(\"Meal index needs to be within range\", \"Error: \");","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DarkDragoon2002"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dri-water"},"content":"     * Adds a meal to the list without displaying CLI messages.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dri-water"},"content":"     * @param meal The meal to be added","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"    public void addMealWithoutCLIMessage(Meal meal) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"        this.mealList.add(meal);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dri-water"},"content":"     * Adds a meal to the list and displays a confirmation message.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dri-water"},"content":"     * @param meal The meal to be added","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"    public void addMeal(Meal meal) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"        this.mealList.add(meal);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"        UI.printReply(meal.toString(), \"Added to options: \");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dri-water"},"content":"     * Deletes a meal from the list by its index.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dri-water"},"content":"     * @param mealNumber The 1-based index of the meal to delete","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author DarkDragoon2002","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DarkDragoon2002"},"content":"    public void deleteMeal(int mealNumber) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DarkDragoon2002"},"content":"        Meal mealToDelete \u003d this.mealList.get(mealNumber - 1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DarkDragoon2002"},"content":"        this.mealList.remove(mealNumber - 1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printReply(mealToDelete.toString(), \"Deleted option: \");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dri-water"},"content":"    public List\u003cMeal\u003e getMealList() {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dri-water"},"content":"        return new ArrayList\u003c\u003e(mealList);","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dri-water"},"content":"     * Retrieves the calories for a meal by its name.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Dri-water"},"content":"     * @param mealName The name of the meal to look up","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dri-water"},"content":"     * @return Optional containing the calories if found, empty otherwise","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dri-water"},"content":"    public Optional\u003cInteger\u003e getCaloriesByMealName(String mealName) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dri-water"},"content":"        for (Meal meal : mealList) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Dri-water"},"content":"            if (meal.getName().isPresent() \u0026\u0026 meal.getName().get().equalsIgnoreCase(mealName)) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Dri-water"},"content":"                return Optional.of(meal.getCalories());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dri-water"},"content":"        return Optional.empty();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dri-water"},"content":"     * Returns the string representation of a meal at the given index.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Dri-water"},"content":"     * @param mealIndex The index of the meal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dri-water"},"content":"     * @return String representation of the meal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kennethSty"},"content":"    public String toMealStringByIndex(int mealIndex) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kennethSty"},"content":"        return this.mealList.get(mealIndex).toString();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kennethSty"},"content":"    public int size() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kennethSty"},"content":"        return this.mealList.size();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dri-water"},"content":"     * Updates an existing meal in the list with new information.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dri-water"},"content":"     * @param newMeal The meal containing updated information","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dri-water"},"content":"    public void updateMeal(Meal newMeal) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dri-water"},"content":"        for (int i \u003d 0; i \u003c mealList.size(); i++) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Dri-water"},"content":"            if (mealList.get(i).getName().equals(newMeal.getName())) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dri-water"},"content":"                mealList.remove(i);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Dri-water"},"content":"                mealList.add(i, newMeal);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Dri-water"},"content":"                break;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Dri-water":73,"ryryry-3302":2,"kennethSty":56,"DarkDragoon2002":18}},{"path":"src/main/java/seedu/healthmate/core/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryan-txn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryan-txn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Goals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryan-txn"},"content":"public class User {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryan-txn"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryan-txn"},"content":"    private final double idealCalories;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryan-txn"},"content":"    private final double heightEntry;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryan-txn"},"content":"    private final double weightEntry;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryan-txn"},"content":"    private final boolean isMale;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryan-txn"},"content":"    private final int age;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryan-txn"},"content":"    private final HealthGoal healthGoal;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryan-txn"},"content":"    private final LocalDateTime localDateTime;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryan-txn"},"content":"    public User(double height, double weight, boolean isMale,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryan-txn"},"content":"                int age, String healthGoal) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryan-txn"},"content":"        this.heightEntry \u003d height;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryan-txn"},"content":"        this.weightEntry \u003d weight;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryan-txn"},"content":"        this.isMale \u003d isMale;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryan-txn"},"content":"        this.age \u003d age;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryan-txn"},"content":"        this.healthGoal \u003d new HealthGoal(healthGoal);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryan-txn"},"content":"        this.idealCalories \u003d this.healthGoal.getTargetCalories(height, weight, isMale, age);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryan-txn"},"content":"        this.localDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryan-txn"},"content":"    public User(double height, double weight, boolean isMale, int age,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryan-txn"},"content":"                String healthGoal, double idealCalories, String localDateTime) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryan-txn"},"content":"        this.heightEntry \u003d height;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryan-txn"},"content":"        this.weightEntry \u003d weight;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryan-txn"},"content":"        this.isMale \u003d isMale;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryan-txn"},"content":"        this.age \u003d age;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryan-txn"},"content":"        this.healthGoal \u003d new HealthGoal(healthGoal);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryan-txn"},"content":"        this.idealCalories \u003d idealCalories;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryan-txn"},"content":"        this.localDateTime \u003d LocalDateTime.parse(localDateTime, formatter);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"     * Asks user to input specifics for creating a new User instance","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"     * @return A new user instance created with the data inputted by user.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"    public static User askForUserData() {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"        try {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Create your profile: please enter...\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Height in cm (e.g. 180):\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"            double height \u003d Double.parseDouble(scanner.nextLine());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Weight in kg (e.g. 80):\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"            double weight \u003d Double.parseDouble(scanner.nextLine());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Gender (male or female):\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"            String gender \u003d scanner.nextLine();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"            boolean isMale \u003d (gender.equalsIgnoreCase(\"male\"));","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Age (e.g. 20):\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"            int age \u003d Integer.parseInt(scanner.nextLine());","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Health Goal (WEIGHT_LOSS, STEADY_STATE, BULKING):\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"            String healthGoal \u003d scanner.nextLine();","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"            User user \u003d new User(height, weight, isMale, age, healthGoal);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kennethSty"},"content":"            UI.printString(\"Profile creation Successful!\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Great! You can now begin to use the app!\", \"\");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryan-txn"},"content":"            UserHistoryTracker userHistoryTracker \u003d new UserHistoryTracker();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryan-txn"},"content":"            userHistoryTracker.saveUserToFile(user);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"            return user;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kennethSty"},"content":"            UI.printReply(\"Wrong user input\", \"Retry: \");","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DarkDragoon2002"},"content":"            return askForUserData();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"     * Prints a user\u0027s consumption bar ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"     * @param message Print message to the user","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"     * @param currentCalories Actual calorie consumption","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"     * @param timestamp The time for which ideal and actual consumption is compared","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kennethSty"},"content":"    public void printUsersConsumptionBar(String message, int currentCalories, LocalDate timestamp) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kennethSty"},"content":"        UI.printConsumptionBar(message, this.idealCalories, currentCalories, timestamp);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DarkDragoon2002"},"content":"     * Simulates the construction of a user-specific consumption bar for testing.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param caloriesConsumed The actual calories consumed by the user.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param timestamp        The date for which the consumption is being simulated.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return A string representation of the simulated consumption bar, including","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DarkDragoon2002"},"content":"     *         target calories, current calories consumed, and the percentage of","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DarkDragoon2002"},"content":"     *         expected calorie intake consumed.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DarkDragoon2002"},"content":"    public String simulateUsersConsumptionBar(int caloriesConsumed, LocalDate timestamp) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DarkDragoon2002"},"content":"        return simulateTargetCalories()","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateString(\"Current Calories Consumed: \" + caloriesConsumed)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.buildConsumptionBar(\"% of Expected Calorie Intake Consumed: \",","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DarkDragoon2002"},"content":"                this.idealCalories,","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DarkDragoon2002"},"content":"                caloriesConsumed,","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DarkDragoon2002"},"content":"                timestamp);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DarkDragoon2002"},"content":"     * Prints the ideal caloric intake.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DarkDragoon2002"},"content":"    public void printTargetCalories() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printReply(String.valueOf((int) this.idealCalories), \"Ideal Daily Caloric Intake: \");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DarkDragoon2002"},"content":"    public String simulateTargetCalories() {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DarkDragoon2002"},"content":"        return UI.simulateFrameLine() + UI.simulateString(\"Ideal Daily Caloric Intake: \"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DarkDragoon2002"},"content":"                + (int) this.idealCalories) + UI.simulateFrameLine();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DarkDragoon2002"},"content":"     * Prints the historic consumption bar for the current calories and timestamp.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param currentCalories the current caloric intake","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param timestamp       the timestamp of the consumption record","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DarkDragoon2002"},"content":"     * @throws IllegalArgumentException if currentCalories is negative or timestamp is null","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DarkDragoon2002"},"content":"    public void printHistoricConsumptionBar(int currentCalories, LocalDate timestamp) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DarkDragoon2002"},"content":"        assert currentCalories \u003e\u003d 0 : \"Current calories cannot be negative\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DarkDragoon2002"},"content":"        assert timestamp !\u003d null : \"Timestamp cannot be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kennethSty"},"content":"        UI.printHistoricConsumptionBar(this.idealCalories, currentCalories, timestamp);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DarkDragoon2002"},"content":"    public double getIdealCalories() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DarkDragoon2002"},"content":"        return this.idealCalories;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"    public static User createUserStub() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kennethSty"},"content":"        return new User(180, 80.0, true, 20, \"BULKING\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kennethSty"},"content":"    public String toString() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ryan-txn"},"content":"        return heightEntry + \",\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ryan-txn"},"content":"                + weightEntry + \",\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ryan-txn"},"content":"                + isMale + \",\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ryan-txn"},"content":"                + age + \",\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ryan-txn"},"content":"                + healthGoal.toString() + \",\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ryan-txn"},"content":"                + idealCalories + \",\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ryan-txn"},"content":"                + localDateTime.format(formatter);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ryryry-3302"},"content":"    public Goals getHealthGoal() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ryryry-3302"},"content":"        return Goals.valueOf(this.healthGoal.getCurrentHealthGoal());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ryryry-3302"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ryryry-3302"},"content":"        return this.localDateTime;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ryryry-3302"},"content":"    public double getWeight() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ryryry-3302"},"content":"        return this.weightEntry;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":11,"ryan-txn":42,"kennethSty":70,"DarkDragoon2002":46}},{"path":"src/main/java/seedu/healthmate/core/UserEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryan-txn"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryan-txn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":" * Represents a list of user entries in the HealthMate application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":" * This class manages a collection of User objects and provides methods to manipulate and access the list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryan-txn"},"content":"public class UserEntryList {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryan-txn"},"content":"    private ArrayList\u003cUser\u003e userEntryList;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"     * Constructs an empty UserEntryList.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryan-txn"},"content":"    public UserEntryList() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryan-txn"},"content":"        this.userEntryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"     * Adds a new user entry to the list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"     * @param user The User object to be added to the list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryan-txn"},"content":"    public void addUserEntry(User user) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryan-txn"},"content":"        userEntryList.add(user);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"     * Returns the list of all user entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"     * @return ArrayList containing all User objects","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryan-txn"},"content":"    public ArrayList\u003cUser\u003e getUserEntryList() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryan-txn"},"content":"        return this.userEntryList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"     * Returns the most recently added user entry.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"     * @return The last User object in the list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryan-txn"},"content":"    public User getLastEntry() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryan-txn"},"content":"        return userEntryList.get(userEntryList.size() - 1);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryan-txn"},"content":"}","lastModifiedDate":"2024-11-01","isFullCredit":false}],"authorContributionMap":{"Dri-water":22,"ryan-txn":24}},{"path":"src/main/java/seedu/healthmate/core/UserHistoryTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryan-txn"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryan-txn"},"content":"import java.io.File;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryan-txn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryan-txn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryan-txn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryan-txn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryan-txn"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryan-txn"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryan-txn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryan-txn"},"content":"public class UserHistoryTracker {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryan-txn"},"content":"    private static final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryan-txn"},"content":"    private static final String USER_DATA_FILE \u003d \"user_data.csv\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryan-txn"},"content":"    public UserHistoryTracker() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryan-txn"},"content":"        createDirectoryIfNotExists(DATA_DIRECTORY);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryan-txn"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryan-txn"},"content":"     * Loads a User instance if a file with user data exists.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryan-txn"},"content":"     * Creates a new User instance otherwise","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryan-txn"},"content":"     * @param userHistoryTracker","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryan-txn"},"content":"     * @return A newly created or \"loaded\" user object","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryan-txn"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryan-txn"},"content":"    public User checkForUserData(UserHistoryTracker userHistoryTracker) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryan-txn"},"content":"        Optional\u003cUserEntryList\u003e optionalUserEntryList \u003d userHistoryTracker.loadUserData();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryan-txn"},"content":"        return optionalUserEntryList.map(userEntryList -\u003e userEntryList.getLastEntry())","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryan-txn"},"content":"                .orElseGet(() -\u003e User.askForUserData());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryan-txn"},"content":"    public void clearSaveFile() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryan-txn"},"content":"        try {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryan-txn"},"content":"            FileWriter fw \u003d new FileWriter(DATA_DIRECTORY + File.separator + USER_DATA_FILE, false);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryan-txn"},"content":"            fw.write(\"\");  // Overwrite with an empty string","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryan-txn"},"content":"            fw.close();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Save file cleared successfully.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryan-txn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Error clearing save file: \" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryan-txn"},"content":"    public Optional\u003cUserEntryList\u003e loadUserData() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryan-txn"},"content":"        createFileIfNotExists();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryan-txn"},"content":"        File userDataFile \u003d new File(DATA_DIRECTORY + File.separator + USER_DATA_FILE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryan-txn"},"content":"        UserEntryList userEntryList \u003d new UserEntryList();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryan-txn"},"content":"        try (Scanner s \u003d new Scanner(userDataFile)){","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryan-txn"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryan-txn"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryan-txn"},"content":"                User user \u003d getUserEntryFromFileLine(line);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryan-txn"},"content":"                userEntryList.addUserEntry(user);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryan-txn"},"content":"            }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryan-txn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Error creating user data file: \" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryan-txn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Error parsing a number.\" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryan-txn"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryan-txn"},"content":"            // silent catch if existing user file contains no content","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryan-txn"},"content":"        return userEntryList.getUserEntryList().isEmpty() ? Optional.empty() : Optional.of(userEntryList);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ryan-txn"},"content":"    public void printAllUserEntries() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryan-txn"},"content":"        File userDataFile \u003d new File(DATA_DIRECTORY + File.separator + USER_DATA_FILE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ryan-txn"},"content":"        try (Scanner scanner \u003d new Scanner(userDataFile)) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ryan-txn"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ryan-txn"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ryan-txn"},"content":"                String[] fields \u003d line.split(\",\");  // Split line into components by commas","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ryan-txn"},"content":"                System.out.println(String.join(\", \", fields));  // Join components with a comma and space","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryan-txn"},"content":"            }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryan-txn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Error: User data file not found. \" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ryan-txn"},"content":"    private static User getUserEntryFromFileLine(String line) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ryan-txn"},"content":"        String[] fields \u003d line.split(\",\");  // Split the CSV line by commas","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ryan-txn"},"content":"        // Parse each field from the CSV line","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ryan-txn"},"content":"        double height \u003d Double.parseDouble(fields[0]);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ryan-txn"},"content":"        double weight \u003d Double.parseDouble(fields[1]);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ryan-txn"},"content":"        boolean isMale \u003d Boolean.parseBoolean(fields[2]);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ryan-txn"},"content":"        int age \u003d Integer.parseInt(fields[3]);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ryan-txn"},"content":"        String healthGoal \u003d fields[4];","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ryan-txn"},"content":"        double idealCalories \u003d Double.parseDouble(fields[5]);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ryan-txn"},"content":"        String localDateTime \u003d fields[6];","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ryan-txn"},"content":"        User user \u003d new User(height, weight, isMale, age, healthGoal, idealCalories, localDateTime);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ryan-txn"},"content":"        return user;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ryan-txn"},"content":"    public static void createDirectoryIfNotExists(String folderName) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ryan-txn"},"content":"        File directory \u003d new File(folderName);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ryan-txn"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ryan-txn"},"content":"            directory.mkdir();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ryan-txn"},"content":"        assert directory.exists() : \"Data directory should exist after creation\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ryan-txn"},"content":"    public void saveUserEntryListToFile(UserEntryList userEntryList) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ryan-txn"},"content":"        ArrayList\u003cUser\u003e userEntries \u003d userEntryList.getUserEntryList();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ryan-txn"},"content":"        for (User userEntry : userEntries) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ryan-txn"},"content":"            saveUserToFile(userEntry);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ryan-txn"},"content":"    public void saveUserToFile(User userEntry) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ryan-txn"},"content":"        createFileIfNotExists();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ryan-txn"},"content":"        addUserEntry(userEntry);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ryan-txn"},"content":"    public void addUserEntry(User userEntry) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ryan-txn"},"content":"        File userDataFile \u003d new File(DATA_DIRECTORY + File.separator + USER_DATA_FILE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ryan-txn"},"content":"        try {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ryan-txn"},"content":"            FileWriter fw \u003d new FileWriter(userDataFile, true);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ryan-txn"},"content":"            fw.write(userEntry.toString() + System.lineSeparator());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ryan-txn"},"content":"            fw.close();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ryan-txn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Error adding userEntry to data file: \" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ryan-txn"},"content":"    public void createFileIfNotExists() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ryan-txn"},"content":"        try {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ryan-txn"},"content":"            File userDataFile \u003d new File(DATA_DIRECTORY + File.separator + USER_DATA_FILE);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ryan-txn"},"content":"            if (!userDataFile.exists()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ryan-txn"},"content":"                userDataFile.createNewFile();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ryan-txn"},"content":"                System.out.println(\"Creating new save file\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ryan-txn"},"content":"            }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ryan-txn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ryan-txn"},"content":"            System.out.println(\"Error creating user data file: \" + e.getMessage());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ryan-txn"},"content":"}","lastModifiedDate":"2024-11-01","isFullCredit":false}],"authorContributionMap":{"ryan-txn":140}},{"path":"src/main/java/seedu/healthmate/core/WeightEntryDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.core;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.utils.Pair;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import java.util.List;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"public class WeightEntryDisplay {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    private static List\u003cPair\u003cLocalDateTime, Double\u003e\u003e weightEntries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"    public static void display(Optional\u003cUserEntryList\u003e userEntryList) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"        if (userEntryList.isEmpty()) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(\"No weight entries available.\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"            return;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"        ArrayList\u003cUser\u003e users \u003d userEntryList.get().getUserEntryList();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"        int size \u003d users.size();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"        int startIndex \u003d Math.max(0, size - 10);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"        weightEntries.clear();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"        for (int i \u003d startIndex; i \u003c size; i++) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"            User user \u003d users.get(i);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"            weightEntries.add(new Pair\u003c\u003e(user.getLocalDateTime(), user.getWeight()));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"        double minWeight \u003d Double.MAX_VALUE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        double maxWeight \u003d Double.MIN_VALUE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"        for (Pair\u003cLocalDateTime, Double\u003e entry : weightEntries) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"            double weight \u003d entry.u();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"            if (weight \u003c minWeight) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"                minWeight \u003d weight;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"            }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"            if (weight \u003e maxWeight) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"                maxWeight \u003d weight;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"            }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"        final int graphHeight \u003d 10;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"        if (maxWeight \u003d\u003d minWeight) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(\"All weight entries are the same.\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"            return;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"        double scale \u003d graphHeight / (maxWeight - minWeight);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"        System.out.println(\"Weight Timeline\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"        for (int y \u003d graphHeight; y \u003e\u003d 0; y--) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"            double weightValue \u003d minWeight + (y * (maxWeight - minWeight) / graphHeight);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"            System.out.printf(\"%5.1f | \", weightValue);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"            for (Pair\u003cLocalDateTime, Double\u003e entry : weightEntries) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"                double weight \u003d entry.u();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"                if ((weight - minWeight) * scale \u003e\u003d y) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryryry-3302"},"content":"                    System.out.print(\" *    \");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryryry-3302"},"content":"                } else {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"                    System.out.print(\"      \");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryryry-3302"},"content":"                }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ryryry-3302"},"content":"            }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryryry-3302"},"content":"        System.out.print(\"       \");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ryryry-3302"},"content":"        for (int i \u003d 0; i \u003c weightEntries.size(); i++) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ryryry-3302"},"content":"            System.out.print(\"----- \");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ryryry-3302"},"content":"        System.out.println();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryryry-3302"},"content":"        System.out.print(\"       \");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryryry-3302"},"content":"        for (Pair\u003cLocalDateTime, Double\u003e entry : weightEntries) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryryry-3302"},"content":"            System.out.printf(\"%-5s \", entry.t().toLocalDate().toString().substring(5)); // Format MM-DD, padded","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryryry-3302"},"content":"        System.out.println();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":80}},{"path":"src/main/java/seedu/healthmate/exceptions/BadCalorieException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.exceptions;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * Exception thrown when the calorie value in a meal is invalid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class BadCalorieException extends Exception {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-25","isFullCredit":false}],"authorContributionMap":{"Dri-water":3,"ryryry-3302":4,"kennethSty":1}},{"path":"src/main/java/seedu/healthmate/exceptions/BadPortionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.exceptions;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * Exception thrown when the portion value in a meal is invalid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class BadPortionException extends Exception {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-25","isFullCredit":false}],"authorContributionMap":{"Dri-water":3,"ryryry-3302":3,"kennethSty":1}},{"path":"src/main/java/seedu/healthmate/exceptions/BadTimestampException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.exceptions;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * Exception thrown when the timestamp in a meal is invalid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"public class BadTimestampException extends Exception {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":"}","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"Dri-water":6,"kennethSty":1}},{"path":"src/main/java/seedu/healthmate/exceptions/EmptyCalorieException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.exceptions;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * Exception thrown when the calorie value in a meal is empty.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"public class EmptyCalorieException extends Exception {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Dri-water":3,"kennethSty":4}},{"path":"src/main/java/seedu/healthmate/exceptions/EmptyTimestampException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.exceptions;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * Exception thrown when the timestamp in a meal is empty.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"public class EmptyTimestampException extends Exception {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":"}","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"Dri-water":6,"kennethSty":1}},{"path":"src/main/java/seedu/healthmate/exceptions/MealNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.exceptions;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * Exception thrown when a meal is not found in the list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class MealNotFoundException extends Exception {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-25","isFullCredit":false}],"authorContributionMap":{"Dri-water":3,"ryryry-3302":3,"kennethSty":1}},{"path":"src/main/java/seedu/healthmate/recommender/Goals.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"public enum Goals {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"    WEIGHT_LOSS,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"    STEADY_STATE,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"    BULKING;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":7}},{"path":"src/main/java/seedu/healthmate/recommender/Recipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"public abstract class Recipe {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"    private static final String INDENTATION \u003d \"      \";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"    public final String recipeName;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"    private final int calories;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"    private final int protein;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"    private final int carbs;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"    private final int fat;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"    private final int fiber;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    private final String recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"    private final Goals goal;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"    public Recipe(String name, int calories, int protein, int carbs, int fat, int fiber, String recipe, Goals goal) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"        this.recipeName \u003d name;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"        this.protein \u003d protein;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"        this.carbs \u003d carbs;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"        this.fat \u003d fat;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"        this.fiber \u003d fiber;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"        this.recipe \u003d recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    @Override","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"    public String toString() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"        sb.append(recipeName).append(\": \").append(calories).append(\" calories\\n\")","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"                .append(INDENTATION).append(\"Protein: \").append(protein).append(\"g\\n\")","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"                .append(INDENTATION).append(\"Carbs: \").append(carbs).append(\"g\\n\")","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"                .append(INDENTATION).append(\"Fat: \").append(fat).append(\"g\\n\")","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"                .append(INDENTATION).append(\"Fiber: \").append(fiber).append(\"g\\n\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"        // Split the recipe string into individual lines for ingredients","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"        String[] ingredients \u003d recipe.split(\"\\n\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"        for (String ingredient : ingredients) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"            sb.append(INDENTATION).append(ingredient).append(\"\\n\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"        return sb.toString();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"    public String getRecipeName() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"        return recipeName;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"    public int getCalories() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"        return calories;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"    public Goals getGoal() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"        return goal;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":54}},{"path":"src/main/java/seedu/healthmate/recommender/RecipeMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.recipes.BulkingOatmeal;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.recipes.FruitSmoothie;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.recipes.HealthySandwich;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.recipes.VeggieWrap;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"import java.util.List;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"import java.util.Map;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":" * A utility class that manages a collection of recipes and provides methods to access them.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":" * Contains a static map of recipe names to Recipe objects and methods to retrieve recipes","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":" * based on different criteria.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"public class RecipeMap {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"    private static final Map\u003cString, Recipe\u003e RECIPEMAP \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    static {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"        RECIPEMAP.put(FruitSmoothie.RECIPE_NAME, new FruitSmoothie());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"        RECIPEMAP.put(BulkingOatmeal.RECIPE_NAME, new BulkingOatmeal());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"        RECIPEMAP.put(HealthySandwich.RECIPE_NAME, new HealthySandwich());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"        RECIPEMAP.put(VeggieWrap.RECIPE_NAME, new VeggieWrap());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"     * Retrieves a list of recipes based on user input and command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"     * If the user input exactly matches the command, returns all recipes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"     * Otherwise, attempts to find a specific recipe by name.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dri-water"},"content":"     * @param userInput The input string from the user","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dri-water"},"content":"     * @param command The command to process","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"     * @return A list of recipes matching the criteria","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"    public static List\u003cRecipe\u003e getRecipes(String userInput, String command) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"        if(userInput.equals(command)) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"            return getAllRecipes();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"        String recipeToFind \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"        List\u003cRecipe\u003e recipes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"        if(!RECIPEMAP.containsKey(recipeToFind)) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"            return getAllRecipes();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"        recipes.add(getRecipeByName(recipeToFind));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"        return recipes;  // Handle case like \"list commands add mealEntry\"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dri-water"},"content":"     * Retrieves a recipe by its name.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dri-water"},"content":"     * @param recipeName The name of the recipe to retrieve","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dri-water"},"content":"     * @return The Recipe object corresponding to the given name","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"    private static Recipe getRecipeByName(String recipeName) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"        return RECIPEMAP.get(recipeName);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dri-water"},"content":"     * Retrieves all recipes from the recipe map.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dri-water"},"content":"     * Includes assertions to ensure the map is not empty.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dri-water"},"content":"     * @return A list of all available recipes","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ryryry-3302"},"content":"    private static List\u003cRecipe\u003e getAllRecipes() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryryry-3302"},"content":"        // Assert that the command map is not empty","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryryry-3302"},"content":"        assert !RECIPEMAP.isEmpty() : \"Command map should not be empty\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ryryry-3302"},"content":"        // Log the number of commands retrieved","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ryryry-3302"},"content":"        return new ArrayList\u003c\u003e(RECIPEMAP.values());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dri-water"},"content":"     * Retrieves all recipes that match a specific fitness goal.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dri-water"},"content":"     * @param userGoal The fitness goal to filter recipes by","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dri-water"},"content":"     * @return A list of recipes that match the specified goal","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryryry-3302"},"content":"    public static List\u003cRecipe\u003e getRecipesByGoal(Goals userGoal) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ryryry-3302"},"content":"        List\u003cRecipe\u003e filteredRecipes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ryryry-3302"},"content":"        for (Recipe recipe : RECIPEMAP.values()) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ryryry-3302"},"content":"            if (recipe.getGoal() \u003d\u003d userGoal) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ryryry-3302"},"content":"                filteredRecipes.add(recipe);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ryryry-3302"},"content":"            }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ryryry-3302"},"content":"        return filteredRecipes;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"Dri-water":33,"ryryry-3302":56}},{"path":"src/main/java/seedu/healthmate/recommender/recipes/BulkingOatmeal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender.recipes;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Goals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class BulkingOatmeal extends Recipe {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"    //https://bonytobeastly.com/bulking-meals/#6-high-protein-oatmeal-second-breakfast","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"    public static final String RECIPE_NAME \u003d \"High-Protein Oatmeal (Second Breakfast)\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CALORIES \u003d 850;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"    private static final int PROTEIN \u003d 55;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CARBS \u003d 115;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FAT \u003d 22;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FIBER \u003d 10;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"    private static final Goals GOAL \u003d Goals.BULKING;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    private static final String RECIPE \u003d \"\"\"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"            1 cup oats (such as quick oats)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"            2 cups whole milk (or soy milk, low-fat milk, etc)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"            1 diced peach (or apple, mangoes, berries, etc)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"            1 tbsp honey","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"            1 scoop protein powder (e.g., whey isolate)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"            A pinch of salt","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"            1 tsp cinnamon","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"            ¼ tsp vanilla","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"            1 tsp ashwagandha powder (optional)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"            \"\"\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"    public BulkingOatmeal() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"        super(RECIPE_NAME, CALORIES, PROTEIN, CARBS, FAT, FIBER, RECIPE, GOAL);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":31}},{"path":"src/main/java/seedu/healthmate/recommender/recipes/FruitSmoothie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender.recipes;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Goals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class FruitSmoothie extends Recipe {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"    //https://bonytobeastly.com/bulking-meals/#2-generic-bulking-smoothie-snackbreakfast","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"    public static final String RECIPE_NAME \u003d \"Green Bulking Smoothie\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CALORIES \u003d 500;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"    private static final int PROTEIN \u003d 40;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CARBS \u003d 55;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FAT \u003d 20;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FIBER \u003d 20;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"    private static final Goals GOAL \u003d Goals.BULKING;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    private static final String RECIPE \u003d \"\"\"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"            1 banana (frozen or fresh)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"            1 handful fresh spinach","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"            1 tablespoon of almond butter","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"            4 frozen strawberries","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"            1 tablespoon flax or chia seeds","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"            225ml of cold milk, soy milk, or oat milk","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"            1 scoop of unflavoured protein powder","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"            \"\"\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"    public FruitSmoothie() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"        super(RECIPE_NAME, CALORIES, PROTEIN, CARBS, FAT, FIBER, RECIPE, GOAL);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":29}},{"path":"src/main/java/seedu/healthmate/recommender/recipes/HealthySandwich.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender.recipes;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Goals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class HealthySandwich extends Recipe {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"    //https://www.eatingwell.com/high-protein-veggie-sandwich-formula-8714142","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"    public static final String RECIPE_NAME \u003d \"Healthy Turkey Avocado Sandwich\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CALORIES \u003d 400;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"    private static final int PROTEIN \u003d 30; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CARBS \u003d 45; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FAT \u003d 15; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FIBER \u003d 10; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"    private static final Goals GOAL \u003d Goals.STEADY_STATE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    private static final String RECIPE \u003d \"\"\"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"            2 slices of whole grain bread","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"            100g sliced turkey breast","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"            1/2 avocado, sliced","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"            1 handful of mixed greens (lettuce, spinach)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"            2 slices of tomato","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"            1 tablespoon mustard or hummus","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"            \"\"\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    public HealthySandwich() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"        super(RECIPE_NAME, CALORIES, PROTEIN, CARBS, FAT, FIBER, RECIPE, GOAL);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":28}},{"path":"src/main/java/seedu/healthmate/recommender/recipes/VeggieWrap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate.recommender.recipes;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Goals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"public class VeggieWrap extends Recipe {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"    //recipe from https://www.eatingwell.com/veggie-wraps-8690591","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"    public static final String RECIPE_NAME \u003d \"Veggie Wrap with Hummus\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CALORIES \u003d 361; // per serving","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"    private static final int PROTEIN \u003d 12; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"    private static final int CARBS \u003d 50; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FAT \u003d 14; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"    private static final int FIBER \u003d 8; // grams","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"    private static final Goals GOAL \u003d Goals.WEIGHT_LOSS;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    private static final String RECIPE \u003d \"\"\"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"            1 teaspoon extra-virgin olive oil","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"            ½ small zucchini, sliced","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"            ½ medium red bell pepper, sliced","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"            ¼ small red onion, sliced","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"            ½ teaspoon dried oregano","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"            Pinch of salt","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"            2 whole-grain wraps","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"            ¼ cup hummus","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"            ½ cup baby spinach","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"            2 tablespoons crumbled feta cheese","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"            4 black olives, sliced","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"            \"\"\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"    public VeggieWrap() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"        super(RECIPE_NAME, CALORIES, PROTEIN, CARBS, FAT, FIBER, RECIPE, GOAL);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":33}},{"path":"src/main/java/seedu/healthmate/services/ChatParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.services;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.command.CommandPair;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.LogMealsCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.SaveMealCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.ListCommandsCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.AddMealEntryCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.DeleteMealCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.DeleteMealEntryCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.MealMenuCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.UpdateUserDataCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.TodayCalorieProgressCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.HistoricCalorieProgressCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.MealRecommendationsCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.commands.WeightTimelineCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.UserHistoryTracker;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.Logging;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"/**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":" * Encapsulates the main logic of the application by parsing user input into objects","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":" * and storing them respectively.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":" */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"public class ChatParser {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"    private static Logger logger \u003d Logger.getLogger(ChatParser.class.getName());","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"    private MealEntriesList mealEntries;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"    private MealList mealOptions;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"    private final HistoryTracker historyTracker;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryan-txn"},"content":"    private final UserHistoryTracker userHistoryTracker;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"    public ChatParser(){","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"        Logging.setupLogger(logger, ChatParser.class.getName());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dri-water"},"content":"        this.historyTracker \u003d new HistoryTracker();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"        logger.log(Level.INFO, \"Initializing HistoryTracker\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printSeparator();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dri-water"},"content":"        this.mealEntries \u003d historyTracker.loadMealEntries();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealEntries !\u003d null : \"Meal entries list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"        logger.log(Level.INFO, \"Loaded MealEntries\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dri-water"},"content":"        this.mealOptions \u003d historyTracker.loadMealOptions();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"        assert mealOptions !\u003d null : \"Meal options list should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"        logger.log(Level.INFO, \"Loaded MealOptions\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryan-txn"},"content":"        this.userHistoryTracker \u003d new UserHistoryTracker();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryan-txn"},"content":"        logger.log(Level.INFO, \"Initializing UserHistoryTracker\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"        UI.printSeparator();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"     * Reads in user input from the command line","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"     * and initiates the parsing process steered by one-token and two-token-based user prompts.","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"    public void run() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"        logger.log(Level.INFO, \"Checking if user data exists\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryan-txn"},"content":"        User userEntry \u003d userHistoryTracker.checkForUserData(this.userHistoryTracker);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"        assert userEntry !\u003d null : \"User entry should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryan-txn"},"content":"        parseUserInput(userEntry);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"     * Function simulating the above run() method with a User stub for testing.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"    public void simulateRunWithStub(User userStub) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DarkDragoon2002"},"content":"        assert userStub !\u003d null : \"User stub should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"        logger.log(Level.INFO, \"Checking if user data exists\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"        parseUserInput(userStub);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"     * Reads in user input via a scanner and maintains the main loop until the user","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DarkDragoon2002"},"content":"     * exits the application with \"Bye\".","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user profile connected with the current application run.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kennethSty"},"content":"    public void parseUserInput(User user) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DarkDragoon2002"},"content":"        assert user !\u003d null : \"User should not be null in parseUserInput\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kennethSty"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"            logger.log(Level.INFO, \"Getting next user input line\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"            userInput \u003d scanner.nextLine().strip();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DarkDragoon2002"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kennethSty"},"content":"                logger.log(Level.INFO, \"User closes application\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kennethSty"},"content":"                UI.printFarewell();","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DarkDragoon2002"},"content":"            } else {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"                try {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"                    this.multiCommandParsing(userInput, user);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kennethSty"},"content":"                    logger.log(Level.INFO, \"User input contains more than 1 token\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kennethSty"},"content":"                } catch (ArrayIndexOutOfBoundsException a) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kennethSty"},"content":"                    logger.log(Level.WARNING, \"Invalid command\", a);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"                    UI.printReply(\"Invalid command\", \"Retry: \");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kennethSty"},"content":"                }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"            }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DarkDragoon2002"},"content":"     * Steers the activation of features offered to the userEntry via two-token commands.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput String userEntry input from the command line.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user The user profile connected with the current application run.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ryan-txn"},"content":"    public void multiCommandParsing(String userInput, User user) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DarkDragoon2002"},"content":"        assert userInput !\u003d null \u0026\u0026 !userInput.isEmpty() : \"User input should not be null or empty\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DarkDragoon2002"},"content":"        assert user !\u003d null : \"User should not be null in multiCommandParsing\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kennethSty"},"content":"        CommandPair commandPair \u003d getCommandFromInput(userInput);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DarkDragoon2002"},"content":"        assert commandPair !\u003d null : \"CommandPair should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kennethSty"},"content":"        String command \u003d commandPair.getMainCommand();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kennethSty"},"content":"        logger.log(Level.INFO, \"User commands are: \" + commandPair);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kennethSty"},"content":"        switch (command) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ryryry-3302"},"content":"        case MealMenuCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DarkDragoon2002"},"content":"            MealMenuCommand.executeCommand(mealOptions, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kennethSty"},"content":"            break;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ryryry-3302"},"content":"        case SaveMealCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DarkDragoon2002"},"content":"            SaveMealCommand.executeCommand(historyTracker, mealOptions, userInput, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kennethSty"},"content":"            break;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ryryry-3302"},"content":"        case DeleteMealCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DarkDragoon2002"},"content":"            DeleteMealCommand.executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DarkDragoon2002"},"content":"                    historyTracker, mealOptions, userInput, command, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ryryry-3302"},"content":"        case DeleteMealEntryCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DarkDragoon2002"},"content":"            DeleteMealEntryCommand.executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DarkDragoon2002"},"content":"                    historyTracker, mealEntries, user, userInput, command, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ryryry-3302"},"content":"        case AddMealEntryCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DarkDragoon2002"},"content":"            AddMealEntryCommand.executeCommand(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DarkDragoon2002"},"content":"                    historyTracker, mealOptions, mealEntries, user, userInput, command, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kennethSty"},"content":"            break;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ryryry-3302"},"content":"        case LogMealsCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DarkDragoon2002"},"content":"            LogMealsCommand.executeCommand(mealEntries, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kennethSty"},"content":"            break;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ryryry-3302"},"content":"        case ListCommandsCommand.COMMAND:","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DarkDragoon2002"},"content":"            ListCommandsCommand.executeCommand(userInput, command, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ryryry-3302"},"content":"            break;","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ryan-txn"},"content":"        case UpdateUserDataCommand.COMMAND:","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DarkDragoon2002"},"content":"            UpdateUserDataCommand.executeCommand(userHistoryTracker, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DarkDragoon2002"},"content":"        case TodayCalorieProgressCommand.COMMAND:","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DarkDragoon2002"},"content":"            TodayCalorieProgressCommand.executeCommands(mealEntries, user, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DarkDragoon2002"},"content":"        case HistoricCalorieProgressCommand.COMMAND:","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DarkDragoon2002"},"content":"            HistoricCalorieProgressCommand.executeCommand(mealEntries, commandPair, user, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DarkDragoon2002"},"content":"            break;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ryryry-3302"},"content":"        case MealRecommendationsCommand.COMMAND:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DarkDragoon2002"},"content":"            MealRecommendationsCommand.executeCommand(user, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ryryry-3302"},"content":"            break;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ryryry-3302"},"content":"        case WeightTimelineCommand.COMMAND:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DarkDragoon2002"},"content":"            WeightTimelineCommand.executeCommand(userHistoryTracker, logger);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ryryry-3302"},"content":"            break;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kennethSty"},"content":"        default:","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DarkDragoon2002"},"content":"            logger.log(Level.WARNING, \"Invalid command received\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ryryry-3302"},"content":"            UI.printReply(\"Use a valid command\", \"Retry: \");","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kennethSty"},"content":"            break;","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kennethSty"},"content":"     * Takes in user input and structures it into a preprocessed pair of a main command and additional commands.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param userInput The user input from the command line.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return CommandPair containing the main command and any additional commands.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kennethSty"},"content":"    private CommandPair getCommandFromInput(String userInput) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DarkDragoon2002"},"content":"        assert userInput !\u003d null \u0026\u0026 !userInput.isEmpty() : \"User input should not be null or empty\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kennethSty"},"content":"        String[] inputTokens \u003d userInput.split(\" \");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DarkDragoon2002"},"content":"        assert inputTokens.length \u003e 0 : \"Input tokens should not be empty\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kennethSty"},"content":"        String commandToken1 \u003d inputTokens[0].strip();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DarkDragoon2002"},"content":"        String commandToken2 \u003d (inputTokens.length \u003e 1) ? inputTokens[1].strip() : \"\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DarkDragoon2002"},"content":"        String twoTokenCommand \u003d commandToken1 + (commandToken2.isEmpty() ? \"\" : \" \" + commandToken2);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DarkDragoon2002"},"content":"        String[] additionalCommands \u003d IntStream.range(2, inputTokens.length)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DarkDragoon2002"},"content":"                .mapToObj(i -\u003e inputTokens[i].strip())","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kennethSty"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kennethSty"},"content":"        return new CommandPair(twoTokenCommand, additionalCommands);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kennethSty"},"content":"    ","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ryan-txn"},"content":"    public UserHistoryTracker getUserHistoryTracker() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ryan-txn"},"content":"        return this.userHistoryTracker;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kennethSty"},"content":"    public String getMealOptionsStringWithNewMeal(String newMealString) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ryan-txn"},"content":"        return UI.toMealOptionsString(this.mealOptions, newMealString);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kennethSty"},"content":"    public void cleanMealLists() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ryan-txn"},"content":"        this.mealEntries \u003d this.historyTracker.loadEmptyMealEntries();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ryan-txn"},"content":"        this.mealOptions \u003d this.historyTracker.loadEmptyMealOptions();","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ryan-txn"},"content":"        historyTracker.saveMealOptions(mealOptions);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ryan-txn"},"content":"        historyTracker.saveMealEntries(mealEntries);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"DarkDragoon2002"},"content":"    public void printTodayCalorieProgress() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ryan-txn"},"content":"        User currentUser \u003d userHistoryTracker.checkForUserData(userHistoryTracker);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"DarkDragoon2002"},"content":"        assert currentUser !\u003d null : \"User should not be null\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ryan-txn"},"content":"        mealEntries.printDaysConsumptionBar(currentUser, LocalDateTime.now());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"Dri-water":6,"ryryry-3302":31,"ryan-txn":24,"kennethSty":91,"DarkDragoon2002":61}},{"path":"src/main/java/seedu/healthmate/services/ConsumptionStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.services;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntry;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.DateTimeUtils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"public class ConsumptionStatistics {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"    ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"    private final int idealCalories;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"    private final int totalIdealCalories;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"    private final int totalCaloriesConsumed;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"    private final Optional\u003cMealEntry\u003e maxMeal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"    public ConsumptionStatistics(int idealCalories, int totalIdealCalories,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"                                 int totalCaloriesConsumed, Optional\u003cMealEntry\u003e maxMeal) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"        this.idealCalories \u003d idealCalories;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"        this.totalIdealCalories \u003d totalIdealCalories;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"        this.totalCaloriesConsumed \u003d totalCaloriesConsumed;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"        this.maxMeal \u003d maxMeal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author DarkDragoon2002","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * Computes consumption statistics","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param user the user for which the ideal consumption mark is computed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param days the number of days going in the past for which the total statistics are computed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param mealEntries the mealEntries based on which the consumption is computed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return A new consumption instance containing the statistics","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"    public static ConsumptionStatistics computeStats(User user, int days, MealEntriesList mealEntries) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDateTime today \u003d DateTimeUtils.currentDate().atTime(23, 59);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDateTime lastDate \u003d today.minusDays(days);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"        MealEntriesList mealsConsumed \u003d mealEntries.getMealEntriesByDate(today, lastDate);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"        int totalCaloriesConsumed \u003d mealsConsumed.getTotalCaloriesConsumed();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"        int idealCalories \u003d (int) user.getIdealCalories();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"        int totalIdealCalories \u003d days * idealCalories;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"        Optional\u003cMealEntry\u003e maxMeal \u003d mealsConsumed.getMaxCaloriesConsumed();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"        return new ConsumptionStatistics(idealCalories, totalIdealCalories, totalCaloriesConsumed, maxMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"    //@@author","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"    public void printStats(int days) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"        UI.printHistoricConsumptionStats(days, this.idealCalories, this.totalCaloriesConsumed,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"                this.totalIdealCalories, this.maxMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"kennethSty":31,"DarkDragoon2002":21}},{"path":"src/main/java/seedu/healthmate/services/HistoryTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.services;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryan-txn"},"content":"import java.io.File;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryan-txn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryan-txn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryan-txn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryan-txn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryan-txn"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dri-water"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dri-water"},"content":"import java.util.List;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.Meal;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntry;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":" * Handles saving and loading of meal entries and meal options to/from persistent storage.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":" * Uses CSV files to store the data in a data directory.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"public class HistoryTracker {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"    private static final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"    private static final String MEAL_ENTRIES_FILE \u003d \"meal_entries.csv\";","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"    private static final String MEAL_OPTIONS_FILE \u003d \"meal_options.csv\";","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"     * Creates a new HistoryTracker and ensures the data directory exists.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"    public HistoryTracker() {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"        createDirectoryIfNotExists(DATA_DIRECTORY);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"     * Creates a directory if it does not already exist.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"     * @param folderName The name of the directory to create","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"    public static void createDirectoryIfNotExists(String folderName) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"        File directory \u003d new File(folderName);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dri-water"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dri-water"},"content":"            directory.mkdir();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dri-water"},"content":"        assert directory.exists() : \"Data directory should exist after creation\";","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dri-water"},"content":"     * Saves the list of meal entries to a CSV file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dri-water"},"content":"     * @param mealEntries The list of meal entries to save","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dri-water"},"content":"    public void saveMealEntries(MealEntriesList mealEntries) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryan-txn"},"content":"        saveMealToFile(mealEntries.getMealEntries(), MEAL_ENTRIES_FILE);","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dri-water"},"content":"     * Saves new or modified meal options to a CSV file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dri-water"},"content":"     * Only saves meals that don\u0027t already exist in the file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dri-water"},"content":"     * @param mealOptions The list of meal options to save","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"    public void saveMealOptions(MealList mealOptions) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dri-water"},"content":"        //only saves meals which are new/details change","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dri-water"},"content":"        List\u003cMeal\u003e mealList \u003d mealOptions.getMealList();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dri-water"},"content":"        List\u003cMeal\u003e existingMeals \u003d loadMealFromFile(MEAL_OPTIONS_FILE, false);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dri-water"},"content":"        List\u003cMeal\u003e newMeals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dri-water"},"content":"        ","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dri-water"},"content":"        for (Meal meal : mealList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dri-water"},"content":"            if (!existingMeals.contains(meal)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dri-water"},"content":"                newMeals.add(meal);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dri-water"},"content":"        ","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dri-water"},"content":"        saveMealToFile(newMeals, MEAL_OPTIONS_FILE);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dri-water"},"content":"     * Loads meal entries from the CSV file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dri-water"},"content":"     * @return A MealEntriesList containing all saved meal entries","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"    public MealEntriesList loadMealEntries() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kennethSty"},"content":"        List\u003cMeal\u003e meals \u003d loadMealFromFile(MEAL_ENTRIES_FILE, true);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"        MealEntriesList mealEntriesList \u003d new MealEntriesList();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kennethSty"},"content":"        for (Meal meal : meals) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kennethSty"},"content":"            mealEntriesList.addMealWithoutCLIMessage(meal);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Meal Entries Loaded Successfully!\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"        return mealEntriesList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ryan-txn"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dri-water"},"content":"     * Loads meal options from the CSV file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dri-water"},"content":"     * @return A MealList containing all saved meal options","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"    public MealList loadMealOptions() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"        List\u003cMeal\u003e meals \u003d loadMealFromFile(MEAL_OPTIONS_FILE, false);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"        MealList mealList \u003d new MealList();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kennethSty"},"content":"        for (Meal meal : meals) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kennethSty"},"content":"            mealList.addMealWithoutCLIMessage(meal);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Meal Options Loaded Successfully!\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kennethSty"},"content":"        return mealList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dri-water"},"content":"     * Creates and returns an empty MealEntriesList.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dri-water"},"content":"     * @return An empty MealEntriesList","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kennethSty"},"content":"    public MealEntriesList loadEmptyMealEntries() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kennethSty"},"content":"        return new MealEntriesList();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Dri-water"},"content":"     * Creates and returns an empty MealList.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Dri-water"},"content":"     * @return An empty MealList","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kennethSty"},"content":"    public MealList loadEmptyMealOptions() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kennethSty"},"content":"        return new MealList();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Dri-water"},"content":"     * Saves a list of meals to a specified CSV file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Dri-water"},"content":"     * @param meals The list of meals to save","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Dri-water"},"content":"     * @param fileName The name of the file to save to","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ryan-txn"},"content":"    private void saveMealToFile(List\u003cMeal\u003e meals, String fileName) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Dri-water"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(DATA_DIRECTORY + File.separator + fileName))) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Dri-water"},"content":"            for (Meal meal : meals) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kennethSty"},"content":"                writer.write(meal.toSaveString());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Dri-water"},"content":"                writer.newLine();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Dri-water"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Dri-water"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Dri-water"},"content":"     * Loads meals from a specified CSV file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Dri-water"},"content":"     * @param fileName The name of the file to load from","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Dri-water"},"content":"     * @param isEntry Whether the meals being loaded are meal entries (true) or meal options (false)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Dri-water"},"content":"     * @return A list of meals loaded from the file","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ryan-txn"},"content":"    private List\u003cMeal\u003e loadMealFromFile(String fileName, boolean isEntry) {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Dri-water"},"content":"        List\u003cMeal\u003e meals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"        try (BufferedReader reader \u003d new BufferedReader(","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kennethSty"},"content":"                new FileReader(DATA_DIRECTORY + File.separator + fileName))","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kennethSty"},"content":"            ) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Dri-water"},"content":"            String line;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Dri-water"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Dri-water"},"content":"                String[] parts \u003d line.split(\",\");","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kennethSty"},"content":"                meals \u003d parseAndAddMeal(meals, parts, isEntry);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Dri-water"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Dri-water"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Dri-water"},"content":"        return meals;","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Dri-water"},"content":"     * Parses meal data from CSV format and adds it to the meals list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Dri-water"},"content":"     * @param meals The list to add the parsed meal to","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Dri-water"},"content":"     * @param parts The array of strings containing the meal data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Dri-water"},"content":"     * @param isEntry Whether the meal being parsed is a meal entry (true) or meal option (false)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Dri-water"},"content":"     * @return The updated list of meals","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kennethSty"},"content":"    private List\u003cMeal\u003e parseAndAddMeal(List\u003cMeal\u003e meals, String[] parts, boolean isEntry) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"        boolean isCorrectMealEntry \u003d isEntry \u0026\u0026 (parts.length \u003d\u003d 3);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"        boolean isCorrectMeal \u003d !isEntry \u0026\u0026 (parts.length \u003d\u003d 2);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"        if (isCorrectMealEntry) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kennethSty"},"content":"            String name \u003d parts[0].isEmpty() ? null : parts[0];","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kennethSty"},"content":"            int calories \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kennethSty"},"content":"            LocalDateTime timestamp \u003d LocalDateTime.parse(parts[2].strip());","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"            meals.add(new MealEntry(Optional.ofNullable(name), calories, timestamp));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kennethSty"},"content":"        } else if (isCorrectMeal) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kennethSty"},"content":"            String name \u003d parts[0].isEmpty() ? null : parts[0];","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kennethSty"},"content":"            int calories \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kennethSty"},"content":"            meals.add(new Meal(Optional.ofNullable(name), calories));","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kennethSty"},"content":"        return meals;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Dri-water"},"content":"}","lastModifiedDate":"2024-10-04","isFullCredit":false}],"authorContributionMap":{"Dri-water":112,"ryan-txn":11,"kennethSty":56}},{"path":"src/main/java/seedu/healthmate/services/MealSaver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.services;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.Meal;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.DuplicateEntryChecker;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":" * Service class responsible for saving and managing meal data.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":" * Handles extraction of meal information from user input and persistence of meals.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":"public class MealSaver {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":"    private HistoryTracker historyTracker;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"     * Constructs a new MealSaver with the specified history tracker.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"     * @param historyTracker The history tracker to use for saving meal data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"    public MealSaver(HistoryTracker historyTracker) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"        this.historyTracker \u003d historyTracker;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"     * Extracts a meal object from the user\u0027s input string.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"     * ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"     * @param userInput The raw input string from the user","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"     * @return Optional containing the extracted Meal if successful, empty Optional otherwise","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"    public Optional\u003cMeal\u003e extractMealFromUserInput(String userInput) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"        try {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"            String command \u003d \"save meal\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"            Meal meal \u003d Meal.extractMealFromString(userInput, command);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"            if (meal.descriptionIsEmpty()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"                UI.printReply(\"Meal options require a name\", \"Retry: \");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"                return Optional.empty();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"            return Optional.of(meal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dri-water"},"content":"        } catch (EmptyCalorieException e) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dri-water"},"content":"            UI.printReply(\"Every meal needs a calorie integer. (e.g. 120)\", \"\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dri-water"},"content":"        } catch (StringIndexOutOfBoundsException s) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dri-water"},"content":"            UI.printReply(\"Do not forget to use /c to mark the following integer as calories\", \"Retry: \");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"        } catch (Exception n) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dri-water"},"content":"            UI.printReply(\"A calorie entry needs to be an integer\", \"Error: \");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dri-water"},"content":"        return null;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dri-water"},"content":"     * Saves a meal to the meal list, handling duplicate entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"     * @param meal The meal to save","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dri-water"},"content":"     * @param mealList The list to save the meal to","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dri-water"},"content":"    public void saveMeal(Meal meal, MealList mealList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dri-water"},"content":"        if (DuplicateEntryChecker.isDuplicate(meal.getName(), mealList.getMealList())) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"            System.out.println(\"Duplicate meal found: \" + meal.getName());","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Dri-water"},"content":"            if (shouldOverwrite(meal)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Dri-water"},"content":"                overwriteMeal(meal, mealList);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dri-water"},"content":"        } else {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dri-water"},"content":"            mealList.addMeal(meal);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dri-water"},"content":"        historyTracker.saveMealOptions(mealList);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dri-water"},"content":"     * Determines if a duplicate meal should be overwritten.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Dri-water"},"content":"     * @param meal The meal to check","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Dri-water"},"content":"     * @return true if the meal should be overwritten, false otherwise","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Dri-water"},"content":"    private boolean shouldOverwrite(Meal meal) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Dri-water"},"content":"        // Logic to determine if the meal should be overwritten","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Dri-water"},"content":"        return true;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dri-water"},"content":"     * Overwrites an existing meal in the meal list with a new meal.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dri-water"},"content":"     * @param newMeal The new meal to replace the existing one","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dri-water"},"content":"     * @param mealList The list containing the meal to overwrite","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dri-water"},"content":"    private void overwriteMeal(Meal newMeal, MealList mealList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dri-water"},"content":"        mealList.updateMeal(newMeal);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Dri-water"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Dri-water":77,"ryryry-3302":2,"kennethSty":11}},{"path":"src/main/java/seedu/healthmate/services/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.services;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import java.util.List;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.command.Command;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntriesList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntry;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealList;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.DateTimeUtils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"public class UI {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"    ","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"    private static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"    private static final String SEPARATOR \u003d","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"            \"_____________________________________________________________________________\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryan-txn"},"content":"    private static final String INDENTATION \u003d \"      \";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryan-txn"},"content":"    private static final String LINE \u003d INDENTATION + SEPARATOR;","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"    private static final String FRAME_LINE \u003d LINE + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryan-txn"},"content":"              INDENTATION + \" |\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"     \\\\\\\\|//\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"     \\\\\\\\|//\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"    \\\\\\\\\\\\|///\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"    \\\\\\\\\\\\|///\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"     \\\\\\\\|//\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"      \\\\|/\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryan-txn"},"content":"            + INDENTATION + \"       |\\n\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"    public static void printReply(String input, String actionPerformed) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(INDENTATION + actionPerformed + input);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"    public static void printGreeting() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(INDENTATION + LOGO);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(INDENTATION + \"Welcome to HealthMate\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(INDENTATION + \"Let\u0027s get healthy!\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kennethSty"},"content":"    public static void printFarewell() {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(INDENTATION + \"Stay healthy!\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"    public static void printSeparator() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"    public static void printString(String input) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"        System.out.println(INDENTATION + input);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"    public static void printMealOptions(MealList mealOptions) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"        printSeparator();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kennethSty"},"content":"        if (mealOptions.size() \u003e 0) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"            for (int i \u003d 0; i \u003c mealOptions.size(); i++) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryan-txn"},"content":"                System.out.println(INDENTATION + (i + 1)","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"                        + \": \" + mealOptions.toMealStringByIndex(i));","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"            }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"        } else {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"            printReply(\"No meal options added yet\", \"\");","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DarkDragoon2002"},"content":"        printSeparator();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"    public static void printMealEntries(MealEntriesList mealEntries) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DarkDragoon2002"},"content":"        printSeparator();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"        if (mealEntries.size() \u003e 0) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"            for (int i \u003d 0; i \u003c mealEntries.size(); i++) {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryan-txn"},"content":"                System.out.println(INDENTATION + (i + 1)","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"                        + \": \" + mealEntries.toMealStringByIndex(i));","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kennethSty"},"content":"            }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kennethSty"},"content":"        } else {","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ryan-txn"},"content":"            printReply(\"No meal entries added yet\", \"\");","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DarkDragoon2002"},"content":"        printSeparator();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ryryry-3302"},"content":"    public static void printMealNotFound() {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ryryry-3302"},"content":"        System.out.println(\"The meal was not found in the meal menu!\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"     * Prints list of possible commands to the command line","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"     * @param commands A list of possible commands the user can choose to interact with the system","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ryryry-3302"},"content":"    public static void printCommands(List\u003cCommand\u003e commands) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ryan-txn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ryryry-3302"},"content":"        if (commands.size() \u003d\u003d 1) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(INDENTATION + commands.get(0).toString());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ryryry-3302"},"content":"        } else {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(INDENTATION + \"Use `list commands \u003ccommand\u003e` to view a command\u0027s syntax\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ryryry-3302"},"content":"            for (Command command : commands) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ryryry-3302"},"content":"                System.out.println(INDENTATION + command.command);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ryan-txn"},"content":"                System.out.println(LINE);","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ryan-txn"},"content":"            }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ryryry-3302"},"content":"    public static void printRecommendation(List\u003cRecipe\u003e recipes) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ryryry-3302"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ryryry-3302"},"content":"        System.out.println(INDENTATION + \"Recommended recipes for your health goal\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ryryry-3302"},"content":"        if (recipes.size() \u003d\u003d 1) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(INDENTATION + recipes.get(0).toString());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ryryry-3302"},"content":"        } else {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ryryry-3302"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ryryry-3302"},"content":"            for (Recipe recipe : recipes) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ryryry-3302"},"content":"                System.out.println(INDENTATION + recipe.toString());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ryryry-3302"},"content":"                System.out.println(LINE);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ryryry-3302"},"content":"            }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ryan-txn"},"content":"    /**","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kennethSty"},"content":"     * Outputs the result of list meals as a String if a newMealString would be added at the end","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ryan-txn"},"content":"     * @param mealOptions","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ryan-txn"},"content":"     * @param newMealString","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ryan-txn"},"content":"     * @return","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ryan-txn"},"content":"     */","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ryan-txn"},"content":"    public static String toMealOptionsString(MealList mealOptions, String newMealString) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ryan-txn"},"content":"        String mealOptionsString \u003d \"\";","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ryan-txn"},"content":"        for (int i \u003d 0; i \u003c mealOptions.size(); i++) {","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"            mealOptionsString +\u003d INDENTATION + (i + 1) + \": \" + mealOptions.toMealStringByIndex(i) + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ryan-txn"},"content":"        }","lastModifiedDate":"2024-10-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kennethSty"},"content":"        mealOptionsString +\u003d INDENTATION + (mealOptions.size() + 1) + \": \" + newMealString + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kennethSty"},"content":"        return LINE + NEW_LINE + mealOptionsString + LINE + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-09-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kennethSty"},"content":"     * Prints bar comparing actual versus an expected calorie consumption","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kennethSty"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kennethSty"},"content":"     * Inspired by:","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"     * https://medium.com/javarevisited/how-to-display-progressbar-on-the-standard-console-using-java-18f01d52b30e","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kennethSty"},"content":"     * @param message Message printed if actual is 2x larger than expected with exact value","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kennethSty"},"content":"     * @param expectedValue double expected value","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kennethSty"},"content":"     * @param actualValue int actual value","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kennethSty"},"content":"     * @param timestamp timestamp in which the provided actualValue was consumed","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kennethSty"},"content":"    public static void printConsumptionBar(String message,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kennethSty"},"content":"                                           double expectedValue,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kennethSty"},"content":"                                           int actualValue,","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kennethSty"},"content":"                                           LocalDate timestamp) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kennethSty"},"content":"        assert timestamp !\u003d null : \"Timestamp cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kennethSty"},"content":"        String consumptionBar \u003d buildConsumptionBar(message, expectedValue, actualValue, timestamp);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kennethSty"},"content":"        System.out.println(consumptionBar);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kennethSty"},"content":"     * High-level creation function of the progress bar.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kennethSty"},"content":"     * Embedds the progress bar into the visual format of the UI","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kennethSty"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kennethSty"},"content":"     * @param message Message printed if actual is 2x larger than expected with exact value","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kennethSty"},"content":"     * @param expectedValue double expected value","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kennethSty"},"content":"     * @param actualValue int actual value","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"     * @param timestamp timestamp in which the provided actualValue was consumed","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"     * @return the progressBar in form of a String ready to be printed","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kennethSty"},"content":"    public static String buildConsumptionBar(String message,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kennethSty"},"content":"                                       double expectedValue,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kennethSty"},"content":"                                       int actualValue,","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"                                       LocalDate timestamp) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kennethSty"},"content":"        return INDENTATION + message + NEW_LINE","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DarkDragoon2002"},"content":"                + INDENTATION + progressBarStringBuilder(expectedValue, actualValue) + \" (\" + timestamp + \")\"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kennethSty"},"content":"                + NEW_LINE + LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DarkDragoon2002"},"content":"     * Prints a progress bar for historic consumption data.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param expectedValue the expected consumption value","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param actualValue   the actual consumption value","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param timestamp     the timestamp of the consumption data","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DarkDragoon2002"},"content":"     * @throws IllegalArgumentException if the timestamp is null","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kennethSty"},"content":"    public static void printHistoricConsumptionBar(double expectedValue, int actualValue, LocalDate timestamp) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DarkDragoon2002"},"content":"        assert timestamp !\u003d null : \"Timestamp cannot be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DarkDragoon2002"},"content":"        System.out.println(INDENTATION","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DarkDragoon2002"},"content":"                + progressBarStringBuilder(expectedValue, actualValue)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DarkDragoon2002"},"content":"                + \" (\" + timestamp + \")\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kennethSty"},"content":"    public static void printHistoricConsumptionStats(int days,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kennethSty"},"content":"                                                     int idealCalories,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kennethSty"},"content":"                                                     int totalCaloriesConsumed,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kennethSty"},"content":"                                                     int totalIdealCalories,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kennethSty"},"content":"                                                     Optional\u003cMealEntry\u003e maxMeal) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kennethSty"},"content":"        LocalDateTime today \u003d DateTimeUtils.currentDate().atTime(23, 59);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kennethSty"},"content":"        LocalDateTime maxConsumptionDate \u003d maxMeal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kennethSty"},"content":"                .map(mealEntry -\u003e mealEntry.getTimestamp())","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kennethSty"},"content":"                .orElse(today);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kennethSty"},"content":"        int maxCaloriesConsumed \u003d maxMeal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kennethSty"},"content":"                .map(mealEntry -\u003e mealEntry.getCalories())","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kennethSty"},"content":"                .orElse(0);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kennethSty"},"content":"        String maxMealString \u003d maxMeal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kennethSty"},"content":"                .map(mealEntry -\u003e mealEntry.toString())","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kennethSty"},"content":"                .orElse(\"No maximum meal available\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kennethSty"},"content":"        double percentOfIdealConsumed \u003d Math.round(100.0 * (double)totalCaloriesConsumed / (double)totalIdealCalories);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kennethSty"},"content":"        double percentMaxOfIdeal \u003d Math.round(100.0 * (double)maxCaloriesConsumed / (double)idealCalories);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Stats over past \" + days + \" days\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Total Calories Consumed: \" + totalCaloriesConsumed);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Total Ideal Calories: \" + totalIdealCalories);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Percentage of Total Ideal Calories : \" + percentOfIdealConsumed + \"%\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kennethSty"},"content":"        UI.printString( \"Day With Heaviest Meal: \" + maxConsumptionDate.toLocalDate());","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Heaviest Meal Consumed: \" + maxMealString);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kennethSty"},"content":"        UI.printString(\"Meals Consumption\u0027s Percentage of Daily Ideal Calories: \" + percentMaxOfIdeal + \"%\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kennethSty"},"content":"        UI.printSeparator();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kennethSty"},"content":"    public static String progressBarStringBuilder(double expectedValue, int actualValue) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kennethSty"},"content":"        int percentageOfExpected \u003d (int) Math.ceil((actualValue / expectedValue) * 100);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kennethSty"},"content":"        String incomplete \u003d \"░\"; // U+2591 Unicode Character","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kennethSty"},"content":"        String complete \u003d \"█\"; // U+2588 Unicode Character","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kennethSty"},"content":"        int numberOfBoxes \u003d 60;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kennethSty"},"content":"        double totalPercent \u003d 100.0;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kennethSty"},"content":"        int hundredPercentMark \u003d (numberOfBoxes / 2);","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kennethSty"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kennethSty"},"content":"        IntStream.rangeClosed(1, numberOfBoxes)","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kennethSty"},"content":"                .boxed()","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kennethSty"},"content":"                .map(i -\u003e {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kennethSty"},"content":"                    //maps progress from 100 percent scale to numberOfIcons scale","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kennethSty"},"content":"                    if (i \u003d\u003d hundredPercentMark) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"DarkDragoon2002"},"content":"                        return \"|\" + String.format(\"%6s\", percentageOfExpected + \"%|\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kennethSty"},"content":"                    } else if (i \u003c\u003d ((percentageOfExpected / totalPercent) * hundredPercentMark)) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kennethSty"},"content":"                        return complete;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kennethSty"},"content":"                    } else {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kennethSty"},"content":"                        return incomplete;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kennethSty"},"content":"                    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kennethSty"},"content":"                }).forEach(step -\u003e builder.append(step));","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"DarkDragoon2002"},"content":"        return builder.toString();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kennethSty"},"content":"    // Functions to simulate UI behaviour for testing","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kennethSty"},"content":"    public static String simulateReply(String input, String actionPerformed) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kennethSty"},"content":"        String line1 \u003d FRAME_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kennethSty"},"content":"        String line2 \u003d INDENTATION + actionPerformed + input + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kennethSty"},"content":"        return  line1 + line2 + FRAME_LINE;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"DarkDragoon2002"},"content":"    public static String simulateString(String input) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kennethSty"},"content":"        return INDENTATION + input + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"DarkDragoon2002"},"content":"    public static String simulateFrameLine() {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"DarkDragoon2002"},"content":"        return FRAME_LINE;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kennethSty"},"content":"    public static String simulateFareWell() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kennethSty"},"content":"        String line1 \u003d INDENTATION + \"Stay healthy!\" + NEW_LINE;;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kennethSty"},"content":"        return line1 + FRAME_LINE;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kennethSty"},"content":"    public static String simulateInitOutput() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kennethSty"},"content":"        String line2 \u003d INDENTATION + \"Meal Entries Loaded Successfully!\" + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"kennethSty"},"content":"        String line3 \u003d INDENTATION + \"Meal Options Loaded Successfully!\" + NEW_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"kennethSty"},"content":"        return FRAME_LINE + line2 + line3 + FRAME_LINE;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kennethSty"},"content":"    public static String simulateHistoricConsumptionBar(double expectedValue, int actualValue, LocalDate timestamp) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"kennethSty"},"content":"        assert timestamp !\u003d null : \"Timestamp cannot be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kennethSty"},"content":"        return INDENTATION + progressBarStringBuilder(expectedValue, actualValue) + \" (\" + timestamp + \")\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-09-27","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":35,"ryan-txn":37,"kennethSty":176,"DarkDragoon2002":36}},{"path":"src/main/java/seedu/healthmate/utils/DateTimeUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.utils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":" * Utility class for handling LocalDate and LocalDateTime operations.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"public final class DateTimeUtils {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"    // Private constructor to prevent instantiation","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"    private DateTimeUtils() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"        throw new AssertionError(\"Utility class should not be instantiated\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"     * Gets the current date.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return the current LocalDate","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"    public static LocalDate currentDate() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"        return LocalDate.now();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     * Gets the LocalDateTime representing the end of the given day.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"     * The end of day is defined as 23:59:59.999999999.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param date the LocalDate for which the end of day is needed","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return the LocalDateTime at the end of the given day","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"     * @throws IllegalArgumentException if the date is null","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"    public static LocalDateTime endOfDayLocalDateTime(LocalDate date) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"        return date.atTime(LocalTime.MAX);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"     * Gets the LocalDateTime representing the start of the given day.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"     * The start of day is defined as 00:00:00.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"     *","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param date the LocalDate for which the start of day is needed","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     * @return the LocalDateTime at the start of the given day","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"     * @throws IllegalArgumentException if the date is null","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"    public static LocalDateTime startOfDayLocalDateTime(LocalDate date) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        return date.atStartOfDay();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"kennethSty":1,"DarkDragoon2002":51}},{"path":"src/main/java/seedu/healthmate/utils/DuplicateEntryChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.utils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"import java.util.List;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":"import java.util.Optional;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":"import java.util.Set;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.Meal;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dri-water"},"content":"public class DuplicateEntryChecker {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dri-water"},"content":"    ","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"     * Checks if the given entry is a duplicate in the list of meal options.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":"     * @param optional The entry to check for duplication.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":"     * @param mealList The list of meal options to check against.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":"     * @return true if the entry is a duplicate, false otherwise.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"    public static boolean isDuplicate(Optional\u003cString\u003e optional, List\u003cMeal\u003e mealList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"        for (Meal option : mealList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"            if (option.getName().equals(optional)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"                return true;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"        return false;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Dri-water"},"content":"    ","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Dri-water"},"content":"     * Checks if there are any duplicate entries in the given list of meal options.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dri-water"},"content":"     * @param mealOptions The list of meal options to check for duplicates.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dri-water"},"content":"     * @return true if duplicates are found, false otherwise.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Dri-water"},"content":"    public static boolean hasDuplicates(List\u003cString\u003e mealOptions) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Dri-water"},"content":"        Set\u003cString\u003e uniqueOptions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Dri-water"},"content":"        for (String option : mealOptions) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Dri-water"},"content":"            if (!uniqueOptions.add(option)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"                return true;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dri-water"},"content":"        return false;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Dri-water"},"content":"     * Finds and returns the first duplicate entry in the given list of meal options.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Dri-water"},"content":"     * @param mealOptions The list of meal options to check for duplicates.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Dri-water"},"content":"     * @return The first duplicate entry found, or null if no duplicates exist.","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dri-water"},"content":"    public static String findFirstDuplicate(List\u003cString\u003e mealOptions) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dri-water"},"content":"        Set\u003cString\u003e uniqueOptions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dri-water"},"content":"        for (String option : mealOptions) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dri-water"},"content":"            if (!uniqueOptions.add(option)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"                return option;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Dri-water"},"content":"        return null;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Dri-water"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Dri-water":57,"kennethSty":3}},{"path":"src/main/java/seedu/healthmate/utils/Logging.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.utils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.io.File;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.HistoryTracker;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":" * Utility class for setting up logging functionality.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kennethSty"},"content":"public class Logging {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"     * Sets up a logger with both console and file handlers.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Dri-water"},"content":"     * The console handler is set to only log SEVERE messages, while the file handler logs ALL levels.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Dri-water"},"content":"     * Log files are stored in a \u0027logs\u0027 directory with the class name as the file name.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Dri-water"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"     * @param logger The logger instance to be configured","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"     * @param nameClassToBeLogged The name of the class being logged (used for the log file name)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"     * @return The configured logger instance","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"    public static Logger setupLogger(Logger logger, String nameClassToBeLogged) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"        ConsoleHandler ch \u003d new ConsoleHandler();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"        ch.setLevel(Level.SEVERE);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"        logger.addHandler(ch);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"        try {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"            HistoryTracker.createDirectoryIfNotExists(\"logs\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"            FileHandler fh \u003d new FileHandler(\"logs\" + File.separator + nameClassToBeLogged + \".log\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"            fh.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"            fh.setLevel(Level.ALL);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"            logger.addHandler(fh);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"            logger.log(Level.SEVERE, \"Logger file creation unsuccessful\", ex);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"        }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"        return logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-10-20","isFullCredit":false}],"authorContributionMap":{"Dri-water":12,"kennethSty":32,"DarkDragoon2002":2}},{"path":"src/main/java/seedu/healthmate/utils/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.utils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":" * A generic class representing a pair of two values of potentially different types.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":" * @param \u003cT\u003e The type of the first element","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":" * @param \u003cU\u003e The type of the second element","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Dri-water"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"    private final T t;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"    private final U u;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":"     * Constructs a new Pair with the given values.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":"     * @param t The first element","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":"     * @param u The second element","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"    public Pair(T t, U u) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"        this.u \u003d u;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Dri-water"},"content":"     * Returns the first element of the pair.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Dri-water"},"content":"     * @return The first element","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"    public T t() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"        return this.t;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Dri-water"},"content":"     * Returns the second element of the pair.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Dri-water"},"content":"     * @return The second element","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"    public U u() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"        return this.u;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Dri-water"},"content":"     * Returns a string representation of the pair.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Dri-water"},"content":"     * @return A string in the format \"Pair of [first element], [second element]\"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kennethSty"},"content":"    public String toString() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"        return \"Pair of \" + this.t + \", \" + this.u;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"Dri-water":23,"kennethSty":25}},{"path":"src/main/java/seedu/healthmate/utils/Parameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate.utils;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadPortionException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadTimestampException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyTimestampException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"public enum Parameter {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":"    EMPTY_SIGNALLER(\"/\"),","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    CALORIE_SIGNALLER(\"/c\"),","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":"    PORTIONS_SIGNALLER(\"/p\"),","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Dri-water"},"content":"    TIMESTAMP_SIGNALLER(\"/t\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"    private String prefix;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    // Enum constructor","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"    Parameter(String prefix) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"    // Getter for the prefix","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"    public String getPrefix() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        return prefix;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"    // Method to parse the value associated with a parameter","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"    // Method to parse the value associated with a parameter","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"    public static int parseParameter(String input, Parameter param) throws NumberFormatException {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"        // Create a regex pattern for the parameter prefix (like /c or /p)","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"        String regex \u003d param.getPrefix() + \"(\\\\d+)(\\\\s|$)\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"        boolean containsParam \u003d input.contains(param.getPrefix());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"        if (matcher.find()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"            return Integer.parseInt(matcher.group(1));","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"        } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"            // Contains param but bad format response is -2","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"            // If param is missing return 1 for portions for default and -1 for Calories","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"            return containsParam? -2: param \u003d\u003d PORTIONS_SIGNALLER?1:-1;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Dri-water"},"content":"     * Extracts the number of portions from the input string.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Dri-water"},"content":"     * @param input The input string containing portion information","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Dri-water"},"content":"     * @return The number of portions specified, or 1 if not specified","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Dri-water"},"content":"     * @throws BadPortionException if the portion format is invalid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"    public static int getPortions(String input) throws BadPortionException {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"        int portions \u003d parseParameter(input, Parameter.PORTIONS_SIGNALLER);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"        if (portions \u003d\u003d -2) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryryry-3302"},"content":"            throw new BadPortionException();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"        return parseParameter(input, Parameter.PORTIONS_SIGNALLER);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Dri-water"},"content":"     * Extracts the calorie count from the input string.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Dri-water"},"content":"     * @param input The input string containing calorie information","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Dri-water"},"content":"     * @return The number of calories specified","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Dri-water"},"content":"     * @throws BadCalorieException if the calorie format is invalid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Dri-water"},"content":"     * @throws EmptyCalorieException if no calorie value is specified","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ryryry-3302"},"content":"    public static int getCalories(String input) throws BadCalorieException, EmptyCalorieException {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ryryry-3302"},"content":"        int calories \u003d parseParameter(input, Parameter.CALORIE_SIGNALLER);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryryry-3302"},"content":"        if (calories \u003d\u003d -1) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryryry-3302"},"content":"            throw new EmptyCalorieException();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryryry-3302"},"content":"        } else if (calories \u003d\u003d -2) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryryry-3302"},"content":"            throw new BadCalorieException();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ryryry-3302"},"content":"        return calories;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Dri-water"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Dri-water"},"content":"     * Extracts and parses the timestamp from the input string.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Dri-water"},"content":"     * @param input The input string containing timestamp information in yyyy-MM-dd format","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Dri-water"},"content":"     * @return The parsed LocalDate object","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Dri-water"},"content":"     * @throws EmptyTimestampException if no timestamp is specified","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Dri-water"},"content":"     * @throws BadTimestampException if the timestamp format is invalid","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Dri-water"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"    public static LocalDate getTimestamp(String input) throws EmptyTimestampException, BadTimestampException {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kennethSty"},"content":"        String regex \u003d TIMESTAMP_SIGNALLER.getPrefix() + \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Dri-water"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Dri-water"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Dri-water"},"content":"        boolean containsTimestamp \u003d input.contains(TIMESTAMP_SIGNALLER.getPrefix());","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Dri-water"},"content":"        ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Dri-water"},"content":"        if (!containsTimestamp) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Dri-water"},"content":"            throw new EmptyTimestampException();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Dri-water"},"content":"        ","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Dri-water"},"content":"        if (matcher.find()) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Dri-water"},"content":"            try {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"                return LocalDate.parse(matcher.group(0).replace(TIMESTAMP_SIGNALLER.getPrefix(), \"\"), formatter);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Dri-water"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Dri-water"},"content":"                throw new BadTimestampException();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Dri-water"},"content":"            }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Dri-water"},"content":"        } else {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Dri-water"},"content":"            throw new BadTimestampException();","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Dri-water"},"content":"        }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Dri-water":44,"ryryry-3302":53,"kennethSty":13}},{"path":"src/test/java/seedu/healthmate/ChatParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kennethSty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kennethSty"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kennethSty"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kennethSty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"import java.util.List;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryan-txn"},"content":"import seedu.healthmate.core.UserHistoryTracker;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.MealEntry;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.ChatParser;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryan-txn"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kennethSty"},"content":"public class ChatParserTest {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kennethSty"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kennethSty"},"content":"    private final PrintStream originalOutput \u003d System.out;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kennethSty"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kennethSty"},"content":"    public void setOutputStream() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kennethSty"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kennethSty"},"content":"    @AfterEach","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kennethSty"},"content":"    public void restoreStream() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kennethSty"},"content":"        System.setOut(originalOutput);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kennethSty"},"content":"     * Executes the chatParser\u0027s run method with simulated Input.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kennethSty"},"content":"     * Tests full integration with no stubs","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kennethSty"},"content":"     * @param chatParser","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kennethSty"},"content":"     * @param simulatedInput User input for which the behaviour of chatParser.run() is asserted","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     * @param expectedOutput Expected output printed to the console that is to be compared with the actual output","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kennethSty"},"content":"    private void compareChatParserOutput(ChatParser chatParser, String simulatedInput, String expectedOutput) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kennethSty"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kennethSty"},"content":"        chatParser.run();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"        // Normalize both actual and expected outputs by trimming and standardizing line breaks","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"        String actualOutput \u003d outputStream.toString().trim().replace(\"\\r\\n\", \"\\n\").replaceAll(\"\\\\s+$\", \"\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"        String normalizedExpectedOutput \u003d expectedOutput.trim().replace(\"\\r\\n\", \"\\n\").replaceAll(\"\\\\s+$\", \"\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(normalizedExpectedOutput, actualOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kennethSty"},"content":"        chatParser.cleanMealLists();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kennethSty"},"content":"     * Mocks a chatParser run with a User stub","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kennethSty"},"content":"     * @param chatParser","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kennethSty"},"content":"     * @param simulatedInput User input for which the behaviour of chatParser.run() is asserted","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kennethSty"},"content":"     * @param expectedOutput Expected output printed to the consule that is to be compared with the actual ouput","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kennethSty"},"content":"    private void compareChatParserOutputWithStub(ChatParser chatParser, User userStub,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kennethSty"},"content":"                                                 String simulatedInput, String expectedOutput) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kennethSty"},"content":"        System.setIn(new ByteArrayInputStream(simulatedInput.getBytes()));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kennethSty"},"content":"        chatParser.simulateRunWithStub(userStub);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kennethSty"},"content":"        assertEquals(outputStream.toString(), expectedOutput);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kennethSty"},"content":"        chatParser.cleanMealLists();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kennethSty"},"content":"     * Tests if the ChatParser correctly flags invalid random input","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kennethSty"},"content":"     * Inspired by: https://stackoverflow.com/questions/1119385/junit-test-for-system-out-println","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kennethSty"},"content":"    @Test","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kennethSty"},"content":"    public void randomInput_printsError() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kennethSty"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kennethSty"},"content":"        String simulatedInput \u003d \"hi\\nbye\\n\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kennethSty"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DarkDragoon2002"},"content":"            + UI.simulateReply(\"Use a valid command\", \"Retry: \")","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateFareWell();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kennethSty"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kennethSty"},"content":"     * Tests the situation of adding a meal (without portions and dates specified)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ryryry-3302"},"content":"    void addMealToOptionsWithName_success() {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kennethSty"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kennethSty"},"content":"        String simulatedInput \u003d \"save meal burger /c300\\nmeal menu\\nbye\\n\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kennethSty"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateReply(\"burger with 300 calories\", \"Added to options: \")","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kennethSty"},"content":"            + chatParser.getMealOptionsStringWithNewMeal(\"burger with 300 calories\")","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateFareWell();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kennethSty"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kennethSty"},"content":"     * Tests if adding a meal to meal options without a name failes correctly","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kennethSty"},"content":"    @Test void addMealToOptionsNoName_failure() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kennethSty"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kennethSty"},"content":"        String simulatedInput \u003d \"save meal /c300\\nbye\";","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kennethSty"},"content":"        String expectedOuput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateReply(\"Meal options require a name\", \"Retry: \")","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateFareWell();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kennethSty"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOuput);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kennethSty"},"content":"     * Tests if tracking a meal entry with correctly specified calories was successful.","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kennethSty"},"content":"    @Test void trackMealEntryWithCalories_success() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kennethSty"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ryan-txn"},"content":"        UserHistoryTracker userHistoryTracker \u003d new UserHistoryTracker();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ryan-txn"},"content":"        User user \u003d userHistoryTracker.checkForUserData(chatParser.getUserHistoryTracker());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kennethSty"},"content":"        String simulatedInput \u003d \"add mealEntry pizza /c300\\nbye\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kennethSty"},"content":"        LocalDate today \u003d LocalDateTime.now().toLocalDate();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kennethSty"},"content":"        String timeString \u003d \"(at: \" + today + \")\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateReply(\"pizza with 300 calories \" + timeString, \"Tracked: \")","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kennethSty"},"content":"            + user.simulateUsersConsumptionBar(300, today)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kennethSty"},"content":"            + System.lineSeparator()","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kennethSty"},"content":"            + UI.simulateFareWell();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kennethSty"},"content":"     * Negative test of a wrong showHistoricCalories command","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kennethSty"},"content":"    @Test void showHistoricCaloriesNoTime_failure() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kennethSty"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kennethSty"},"content":"        String simulatedInput \u003d \"show historicCalories \\n bye\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kennethSty"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kennethSty"},"content":"                + UI.simulateReply(\"Specify the number of days you want to look into the past\",","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kennethSty"},"content":"                \"Missing input: \")","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kennethSty"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kennethSty"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kennethSty"},"content":"     * Tests adding 10 \"burger /c300\" mealEntries over the past 10 days as well as the show historicCalories feature","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kennethSty"},"content":"     * Scenario simulated:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kennethSty"},"content":"     * A user adds one burger with 300 calories as a new mealEntrie for each of the past 10 days.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kennethSty"},"content":"     * Afterwards, he wants to see the impact on the consumption bars (over the last 10 days).","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kennethSty"},"content":"     * The test is based on a user stub with the specifics:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kennethSty"},"content":"     * height: 180, weight: 80.0, isMale: true, age: 20, HealthGoal: \"BULKING\"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kennethSty"},"content":"    @Test void addPastMealsAndShowHistory_success() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kennethSty"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kennethSty"},"content":"        User user \u003d User.createUserStub();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kennethSty"},"content":"        MealEntry testMeal \u003d new MealEntry(Optional.of(\"burger\"), 300);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kennethSty"},"content":"        LocalDate today \u003d LocalDateTime.now().toLocalDate();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kennethSty"},"content":"        List\u003cLocalDate\u003e pastTenDays \u003d generatePastDates(today, 10);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kennethSty"},"content":"        String simulatedInput \u003d buildInputHistoricCaloriesTest(pastTenDays, user);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kennethSty"},"content":"        String expectedOutput \u003d buildExpectedOutputHistoricCaloriesTest(testMeal, user, pastTenDays);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kennethSty"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kennethSty"},"content":"     * Helper method generating a List of past days (starting today)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kennethSty"},"content":"     * @param today today\u0027s date","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kennethSty"},"content":"     * @param numberOfDaysIntoPast the number of past days for which we want to generate the dates","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kennethSty"},"content":"     * @return List\u003cLocalDate\u003e\u003c/LocalDate\u003e A list of past days","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kennethSty"},"content":"    private List\u003cLocalDate\u003e generatePastDates(LocalDate today, int numberOfDaysIntoPast) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kennethSty"},"content":"        return IntStream.range(0, numberOfDaysIntoPast).boxed()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kennethSty"},"content":"            .map(i -\u003e today.minusDays(i))","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kennethSty"},"content":"            .toList();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kennethSty"},"content":"     * Helper method to generate the input for the test \u0027addPastMealsAndShowHistory_success\u0027.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kennethSty"},"content":"     * @param pastDays the days for which past mealEntries are added","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kennethSty"},"content":"     * @param user the user for whom the mealEntries are entered as consumption","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kennethSty"},"content":"     * @return String the input provided to the system to simulate the usage scenario described above","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kennethSty"},"content":"    private String buildInputHistoricCaloriesTest(List\u003cLocalDate\u003e pastDays, User user) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kennethSty"},"content":"        String mealEntryBasePrompt \u003d \"add mealEntry burger /c300 /t\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kennethSty"},"content":"        String addMealEntriesPrompts \u003d pastDays.stream()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kennethSty"},"content":"                .map(date -\u003e mealEntryBasePrompt + date.toString())","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kennethSty"},"content":"                .reduce(\"\", (total, prompt) -\u003e total + prompt + \"\\n\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kennethSty"},"content":"        String historicCaloriesPrompt \u003d \"show historicCalories 10\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kennethSty"},"content":"        String closeAppPrompt \u003d \"\\nbye\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kennethSty"},"content":"        return addMealEntriesPrompts + historicCaloriesPrompt + closeAppPrompt;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kennethSty"},"content":"     * Helper method to build the expected output of the test \u0027addPastMealsAndShowHistory_success\u0027","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kennethSty"},"content":"     * @param testMeal the meal for which the behaviour is tested","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kennethSty"},"content":"     * @param user the user for whom the ideal calorie intake is computed","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kennethSty"},"content":"     * @param pastDays the days for which the historic consumption bars are generated","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kennethSty"},"content":"     * @return String the output expected to be returned by the system.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kennethSty"},"content":"    private String buildExpectedOutputHistoricCaloriesTest(MealEntry testMeal, User user, List\u003cLocalDate\u003e pastDays) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kennethSty"},"content":"        String expectedAddPastMealResult \u003d simulateAddingPastMeals(pastDays, user);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kennethSty"},"content":"        String expectedShowHistoricCalories \u003d simulateHistoricCalories(testMeal, pastDays);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kennethSty"},"content":"        return UI.simulateInitOutput()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kennethSty"},"content":"                + expectedAddPastMealResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kennethSty"},"content":"                + expectedShowHistoricCalories","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kennethSty"},"content":"                + System.lineSeparator()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kennethSty"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kennethSty"},"content":"     * Helper method for the test \u0027addPastMealsAndShowHistory_success\u0027.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kennethSty"},"content":"     * Creates the output String of the system when adding the past mealEntries.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kennethSty"},"content":"     * @param pastDays the days for which the mealEntries are added","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kennethSty"},"content":"     * @param user the user for whom the mealEntries are entered as consumption","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kennethSty"},"content":"     * @return String the output caused by adding the testMeal to each of the pastDays.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kennethSty"},"content":"    private String simulateAddingPastMeals(List\u003cLocalDate\u003e pastDays, User user) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kennethSty"},"content":"        return pastDays.stream()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kennethSty"},"content":"            .map(date -\u003e","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kennethSty"},"content":"                UI.simulateReply(\"burger with 300 calories \" +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kennethSty"},"content":"                    \"(at: \" + date + \")\", \"Tracked: \")","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kennethSty"},"content":"                    + user.simulateUsersConsumptionBar(300, date))","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kennethSty"},"content":"            .reduce(\"\", (total, oneOutput) -\u003e total + oneOutput + System.lineSeparator());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kennethSty"},"content":"     * Helper method for the test \u0027addPastMealsAndShowHistory_success\u0027","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kennethSty"},"content":"     * @param testMealEntry the test meal that was added to each of the past days specified in the test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kennethSty"},"content":"     * @param pastDays the past days","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kennethSty"},"content":"     * @return String the expected output of the system when executing the show historicCalories command","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kennethSty"},"content":"    private String simulateHistoricCalories(MealEntry testMealEntry, List\u003cLocalDate\u003e pastDays) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kennethSty"},"content":"        User userStub \u003d User.createUserStub();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kennethSty"},"content":"        double idealCalories \u003d userStub.getIdealCalories();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kennethSty"},"content":"        int testMealCalories \u003d testMealEntry.getCalories();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kennethSty"},"content":"        assert (int)idealCalories \u003d\u003d 2865 : \"Test assumes ideal daily calories of 2865\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kennethSty"},"content":"        assert pastDays.size() \u003d\u003d 10 : \"Test expects an input of 10\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kennethSty"},"content":"        assert testMealCalories \u003d\u003d 300 : \"Test expects a calorie intake of 300\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kennethSty"},"content":"        assert testMealEntry.getName().orElse(\"\") \u003d\u003d \"burger\" : \"Tests expects a burger as test meal\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kennethSty"},"content":"        String idealIntakeString \u003d UI.simulateReply(\"2865\", \"Ideal Daily Caloric Intake: \");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kennethSty"},"content":"        String historyBarsString \u003d simulateHistoryConsumptionBars(pastDays, idealCalories, 300);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kennethSty"},"content":"        String statsString \u003d getStatsString(pastDays.get(9));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kennethSty"},"content":"        return idealIntakeString + historyBarsString + statsString;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kennethSty"},"content":"     * Helper method for the test \u0027addPastMealsAndShowHistory_success\u0027","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kennethSty"},"content":"     * Generates the consumptions bars in the format of the show historicCalories command.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kennethSty"},"content":"     * @param pastDays List\u003cLocalDate\u003e\u003c/LocalDate\u003e days for which the consumptions bars are generated","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kennethSty"},"content":"     * @param idealCalories Double calories the respective user should consume dayls","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kennethSty"},"content":"     * @param testMealCalories Integer calories of the testMeal that is consumed per day","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kennethSty"},"content":"     * @return String the historic consumption bars for a daily consumption of testMealCalories","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kennethSty"},"content":"    private String simulateHistoryConsumptionBars(List\u003cLocalDate\u003e pastDays, double idealCalories, int testMealCalories){","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"kennethSty"},"content":"        return pastDays.stream().sorted()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"kennethSty"},"content":"                .map(date -\u003e UI.simulateHistoricConsumptionBar(idealCalories, testMealCalories, date))","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"kennethSty"},"content":"                .reduce(\"\", (total, oneBar) -\u003e total + oneBar + System.lineSeparator());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"kennethSty"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"kennethSty"},"content":"     * Helper method for the test \u0027addPastMealsAndShowHistory_success\u0027.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"kennethSty"},"content":"     * @param maxConsumptionDate The day which the system will select as the maximum consumption day","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"kennethSty"},"content":"     * @return the Consumption statistics expected for the consumption tested in \u0027addPastMealsAndShowHistory_success\u0027","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"kennethSty"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"kennethSty"},"content":"    private String getStatsString(LocalDate maxConsumptionDate) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"kennethSty"},"content":"        return","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"kennethSty"},"content":"                \"      Stats over past 10 days\" + System.lineSeparator() +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"kennethSty"},"content":"                \"      Total Calories Consumed: 3000\" + System.lineSeparator() +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"kennethSty"},"content":"                \"      Total Ideal Calories: 28650\" + System.lineSeparator() +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"kennethSty"},"content":"                \"      Percentage of Total Ideal Calories : 10.0%\" + System.lineSeparator() +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"kennethSty"},"content":"                \"      Day With Heaviest Meal: \" + maxConsumptionDate + System.lineSeparator() +","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"kennethSty"},"content":"                \"      Heaviest Meal Consumed: burger with 300 calories (at: \"+ maxConsumptionDate + \")\" +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"kennethSty"},"content":"                System.lineSeparator() +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"kennethSty"},"content":"                \"      Meals Consumption\u0027s Percentage of Daily Ideal Calories: 10.0%\" + System.lineSeparator() +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"kennethSty"},"content":"                \"      _____________________________________________________________________________\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"kennethSty"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests if deleting a meal option by its index is successful.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"DarkDragoon2002"},"content":"    void deleteMeal_existingMealByIndex_success() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"save meal burger /c300\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"delete meal 1\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"meal menu\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"burger with 300 calories\", \"Added to options: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"Deleted option: burger with 300 calories\", \"\")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"      _____________________________________________________________________________\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"      _____________________________________________________________________________\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"      No meal options added yet\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"      _____________________________________________________________________________\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"      _____________________________________________________________________________\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests if attempting to delete a non-existent meal option by index returns an error.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"DarkDragoon2002"},"content":"    void deleteMeal_nonExistentIndex_failure() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"delete meal 1\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"Meal index needs to be within range\", \"Error: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests if trying to delete a meal option without specifying an index returns an error.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"DarkDragoon2002"},"content":"    void deleteMeal_noIndex_failure() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"delete meal\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"Meal index needs to be an integer\", \"Error: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"DarkDragoon2002"},"content":"    private static String simulateIdealCalories(int idealCalories) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"DarkDragoon2002"},"content":"        return UI.simulateString(\"Ideal Daily Caloric Intake: \" + idealCalories);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"DarkDragoon2002"},"content":"    private static String simulateConsumedCalories(int consumedCalories) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"DarkDragoon2002"},"content":"        return UI.simulateString(\"Current Calories Consumed: \" + consumedCalories);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"DarkDragoon2002"},"content":"    private static String simulateConsumptionMessageWithBar(int idealCalories, int consumedCalories) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"DarkDragoon2002"},"content":"        return UI.simulateFrameLine()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateIdealCalories(idealCalories)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFrameLine()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateConsumedCalories(consumedCalories)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.buildConsumptionBar(\"% of Expected Calorie Intake Consumed: \", idealCalories,","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"DarkDragoon2002"},"content":"                        consumedCalories, LocalDate.now())","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests if deleting a meal entry by index in the meal log is successful.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"DarkDragoon2002"},"content":"    void deleteMealEntry_existingEntryByIndex_success() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"add mealEntry pizza /c300\\n\"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"DarkDragoon2002"},"content":"                + \"delete mealEntry 1\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"pizza with 300 calories (at: \" + LocalDate.now() + \")\", \"Tracked: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateConsumptionMessageWithBar(2865, 300)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"Deleted entry: pizza with 300 calories (at: \" + LocalDate.now() + \")\", \"\")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateConsumptionMessageWithBar(2865, 0)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests if attempting to delete a non-existent meal entry by index returns an error.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"DarkDragoon2002"},"content":"    void deleteMealEntry_nonExistentIndex_failure() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"delete mealEntry 1\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"Meal Entry index needs to be within range\", \"Error: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests if trying to delete a meal entry without specifying an index returns an error.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"DarkDragoon2002"},"content":"    void deleteMealEntry_noIndex_failure() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"delete mealEntry\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"Meal Entry index needs to be an integer\", \"Error: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests the scenario where todayCalories command is executed successfully with meals added.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"DarkDragoon2002"},"content":"    void todayCalorieProgress_withMeals_success() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"add mealEntry pizza /c500\\nshow todayCalories\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateReply(\"pizza with 500 calories (at: \" + today + \")\", \"Tracked: \")","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateConsumptionMessageWithBar(2865, 500)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateConsumptionMessageWithBar(2865, 500)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests the scenario where todayCalories command is executed with no meals added.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"DarkDragoon2002"},"content":"    void todayCalorieProgress_noMeals_success() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"DarkDragoon2002"},"content":"        ChatParser chatParser \u003d new ChatParser();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"DarkDragoon2002"},"content":"        String simulatedInput \u003d \"show todayCalories\\nbye\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"DarkDragoon2002"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"DarkDragoon2002"},"content":"        String expectedOutput \u003d UI.simulateInitOutput()","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"DarkDragoon2002"},"content":"                + simulateConsumptionMessageWithBar(2865, 0)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"DarkDragoon2002"},"content":"                + UI.simulateFareWell();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"DarkDragoon2002"},"content":"        compareChatParserOutput(chatParser, simulatedInput, expectedOutput);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"kennethSty"},"content":"}","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":2,"ryan-txn":4,"kennethSty":265,"DarkDragoon2002":154}},{"path":"src/test/java/seedu/healthmate/HealthGoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DarkDragoon2002"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.core.HealthGoal;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"/**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":" * Test class for the HealthGoal class.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":" */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"public class HealthGoalTest {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"    private HealthGoal healthGoal;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"        // Initialize with a default health goal for each test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal \u003d new HealthGoal(\"STEADY_STATE\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests saving a valid health goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"    public void testSaveHealthGoal_validGoal() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"WEIGHT_LOSS\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(\"WEIGHT_LOSS\", healthGoal.getCurrentHealthGoal(),","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected health goal to be WEIGHT_LOSS\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"STEADY_STATE\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(\"STEADY_STATE\", healthGoal.getCurrentHealthGoal(),","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected health goal to be STEADY_STATE\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"BULKING\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(\"BULKING\", healthGoal.getCurrentHealthGoal(),","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected health goal to be BULKING\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests saving an invalid health goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"    public void testSaveHealthGoal_invalidGoal() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"INVALID_GOAL\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(\"STEADY_STATE\", healthGoal.getCurrentHealthGoal(),","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Health goal should remain unchanged for invalid input\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests target calories calculation for a male with a weight loss goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"    public void testGetTargetCalories_maleWeightLoss() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"WEIGHT_LOSS\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DarkDragoon2002"},"content":"        double targetCalories \u003d healthGoal.getTargetCalories(180, 75, true, 25);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(1270.52, targetCalories, 0.01,","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected target calories for male weight loss to be 1270.52\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests target calories calculation for a female with a bulking goal.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DarkDragoon2002"},"content":"    public void testGetTargetCalories_femaleBulking() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"BULKING\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DarkDragoon2002"},"content":"        double targetCalories \u003d healthGoal.getTargetCalories(160, 55, false, 30);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(1982.94, targetCalories, 0.01,","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected target calories for female bulking to be 1982.94\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests target calories calculation for steady state.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DarkDragoon2002"},"content":"    public void testGetTargetCalories_steadyState() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"STEADY_STATE\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DarkDragoon2002"},"content":"        double targetCalories \u003d healthGoal.getTargetCalories(170, 68, true, 28);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(1821.86, targetCalories, 0.01,","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected target calories for steady state to be 1821.86\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DarkDragoon2002"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DarkDragoon2002"},"content":"    /**","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DarkDragoon2002"},"content":"     * Tests the toString() method.","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DarkDragoon2002"},"content":"     */","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DarkDragoon2002"},"content":"    @Test","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DarkDragoon2002"},"content":"    public void testToString() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DarkDragoon2002"},"content":"        healthGoal.saveHealthGoal(\"BULKING\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DarkDragoon2002"},"content":"        assertEquals(\"BULKING\", healthGoal.toString(),","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DarkDragoon2002"},"content":"                \"Expected toString() to return BULKING\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DarkDragoon2002"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DarkDragoon2002"},"content":"}","lastModifiedDate":"2024-10-21","isFullCredit":false}],"authorContributionMap":{"kennethSty":2,"DarkDragoon2002":93}},{"path":"src/test/java/seedu/healthmate/HealthMateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kennethSty"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"class HealthMateTest {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"kennethSty":2,"-":10}},{"path":"src/test/java/seedu/healthmate/HistoryTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Dri-water"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Dri-water"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Dri-water"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Dri-water"},"content":"import java.io.File;","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Dri-water"},"content":"","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.HistoryTracker;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Dri-water"},"content":"public class HistoryTrackerTest {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Dri-water"},"content":"    ","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Dri-water"},"content":"    @Test","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Dri-water"},"content":"    public void testCreateDataDirectory() {","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Dri-water"},"content":"        HistoryTracker historyTracker \u003d new HistoryTracker();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Dri-water"},"content":"        File dataDirectory \u003d new File(\"data\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Dri-water"},"content":"        assertEquals(true, dataDirectory.exists(), \"Data directory should be created\");","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Dri-water"},"content":"        dataDirectory.delete();","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Dri-water"},"content":"    }","lastModifiedDate":"2024-10-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Dri-water"},"content":"}","lastModifiedDate":"2024-10-16","isFullCredit":false}],"authorContributionMap":{"Dri-water":16,"kennethSty":2}},{"path":"src/test/java/seedu/healthmate/ParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.BadPortionException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.exceptions.EmptyCalorieException;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.utils.Parameter;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"public class ParametersTest {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"    @AfterEach","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"    /**","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"     * Test cases for getCalories method","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"     */","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"    public void testGetCalories() {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"        // valid case","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"        try {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"            int calories \u003d Parameter.getCalories(\"add mealEntry grapes /c400 /p3\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(400, calories);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"            // Shouldn\u0027t throw exception for valid input","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"        // missing calories (throws EmptyCalorieException)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"        assertThrows(EmptyCalorieException.class, () -\u003e {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"            Parameter.getCalories(\"add mealEntry grapes /p3\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"        });","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"        // bad format (throws BadCalorieException)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"        assertThrows(EmptyCalorieException.class, () -\u003e {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"            Parameter.getCalories(\"add mealEntry grapes /1ch5 /p3\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"        });","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"        // bad format (throws BadCalorieException)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"        assertThrows(BadCalorieException.class, () -\u003e {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"            Parameter.getCalories(\"add mealEntry grapes /c123123asdasd /p3\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"        });","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"        // bad format (throws BadCalorieException)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"        assertThrows(EmptyCalorieException.class, () -\u003e {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"            Parameter.getCalories(\"add mealEntry grapes /abc 400 /p3\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryryry-3302"},"content":"        });","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ryryry-3302"},"content":"    /**","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryryry-3302"},"content":"     * Test cases for getPortions method","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ryryry-3302"},"content":"     */","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryryry-3302"},"content":"    public void testGetPortions() {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ryryry-3302"},"content":"        // valid case","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ryryry-3302"},"content":"        try {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ryryry-3302"},"content":"            int portions \u003d Parameter.getPortions(\"add mealEntry grapes /c400 /p3\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(3, portions);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ryryry-3302"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryryry-3302"},"content":"            // Shouldn\u0027t throw exception for valid input","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryryry-3302"},"content":"        // missing portions, default to 1","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryryry-3302"},"content":"        try {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ryryry-3302"},"content":"            int portions \u003d Parameter.getPortions(\"add mealEntry grapes /c400\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(1, portions); // Default to 1 when portions are not specified","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ryryry-3302"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ryryry-3302"},"content":"            // Shouldn\u0027t throw exception for missing portion, default to 1","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ryryry-3302"},"content":"        // bad format (throws BadPortionException)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ryryry-3302"},"content":"        assertThrows(BadPortionException.class, () -\u003e {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ryryry-3302"},"content":"            Parameter.getPortions(\"add mealEntry grapes /c400 /pabc\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ryryry-3302"},"content":"        });","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ryryry-3302"},"content":"        // bad format (throws BadPortionException)","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ryryry-3302"},"content":"        assertThrows(BadPortionException.class, () -\u003e {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ryryry-3302"},"content":"            Parameter.getPortions(\"add mealEntry grapes /c400 /p3abc\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ryryry-3302"},"content":"        });","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ryryry-3302"},"content":"        // valid with spaces","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ryryry-3302"},"content":"        try {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ryryry-3302"},"content":"            int portions \u003d Parameter.getPortions(\"add mealEntry grapes /p2 \");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(2, portions); // Spaces should be ignored","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ryryry-3302"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ryryry-3302"},"content":"            // Shouldn\u0027t throw exception for valid input with spaces","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ryryry-3302"},"content":"        // no portion signaller, default to 1","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ryryry-3302"},"content":"        try {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ryryry-3302"},"content":"            int portions \u003d Parameter.getPortions(\"add mealEntry grapes /c400\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(1, portions); // Default to 1 when portions are not specified","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ryryry-3302"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ryryry-3302"},"content":"            // Shouldn\u0027t throw exception for missing portion, default to 1","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-25","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":106,"kennethSty":5}},{"path":"src/test/java/seedu/healthmate/RecipeMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Goals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.RecipeMap;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.recommender.Recipe;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"import java.util.List;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"public class RecipeMapTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"    public void testGetRecipesByGoalReturnsFilteredRecipes() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"        // Assuming you have defined Goals as an enum and the recipes have a goal","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"        Goals userGoal \u003d Goals.BULKING;  // Example goal","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"        List\u003cRecipe\u003e recipes \u003d RecipeMap.getRecipesByGoal(userGoal);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"        for (Recipe recipe : recipes) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(userGoal, recipe.getGoal());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"        userGoal \u003d Goals.STEADY_STATE;  // Example goal","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"        recipes \u003d RecipeMap.getRecipesByGoal(userGoal);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"        for (Recipe recipe : recipes) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(userGoal, recipe.getGoal());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"        userGoal \u003d Goals.WEIGHT_LOSS;  // Example goal","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        recipes \u003d RecipeMap.getRecipesByGoal(userGoal);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"        for (Recipe recipe : recipes) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"            assertEquals(userGoal, recipe.getGoal());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":35}},{"path":"src/test/java/seedu/healthmate/UITest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kennethSty"},"content":"import seedu.healthmate.services.UI;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kennethSty"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"public class UITest {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kennethSty"},"content":"    private static final String SEPARATOR \u003d","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kennethSty"},"content":"            \"_____________________________________________________________________________\";","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"    private static final String INDENTATION \u003d \"      \";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"    private static final String LINE \u003d INDENTATION + SEPARATOR;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"    private static final String FRAME_LINE \u003d LINE + LINE_SEPARATOR;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"            INDENTATION + \" |\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"     \\\\\\\\|//\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"     \\\\\\\\|//\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"    \\\\\\\\\\\\|///\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"    \\\\\\\\\\\\|///\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"     \\\\\\\\|//\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"      \\\\|/\\n\"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"                    + INDENTATION + \"       |\\n\";","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"    @AfterEach","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"     * Tests if print greeting methods prints correctly","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"    public void testPrintGreeting() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"        UI.printGreeting();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"        String expectedOutput \u003d INDENTATION + LOGO","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"                + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"                + LINE + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"                + INDENTATION + \"Welcome to HealthMate\" + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"                + INDENTATION + \"Let\u0027s get healthy!\" + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"                + LINE + LINE_SEPARATOR;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"     * Tests if farewell message prints correctly","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryryry-3302"},"content":"    public void testPrintFarewell() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"        UI.printFarewell();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ryryry-3302"},"content":"        String expectedOutput \u003d INDENTATION + \"Stay healthy!\" + LINE_SEPARATOR + LINE + LINE_SEPARATOR;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ryryry-3302"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ryryry-3302"},"content":"    /**","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ryryry-3302"},"content":"     * Tests if reply method works with and without arguments","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ryryry-3302"},"content":"     */","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ryryry-3302"},"content":"    public void testPrintReply() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ryryry-3302"},"content":"        UI.printReply(\"Test input\", \"Action performed: \");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ryryry-3302"},"content":"        String expectedOutput \u003d LINE + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ryryry-3302"},"content":"                + INDENTATION + \"Action performed: Test input\" + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ryryry-3302"},"content":"                + LINE + LINE_SEPARATOR;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ryryry-3302"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ryryry-3302"},"content":"        UI.printReply(\"\", \"\");","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ryryry-3302"},"content":"        String expectedOutput2 \u003d LINE + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ryryry-3302"},"content":"                + INDENTATION + LINE_SEPARATOR","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ryryry-3302"},"content":"                + LINE + LINE_SEPARATOR;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ryryry-3302"},"content":"        assertEquals(expectedOutput + expectedOutput2, outContent.toString());","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":81,"kennethSty":4}},{"path":"src/test/java/seedu/healthmate/WeightEntryDisplayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryryry-3302"},"content":"package seedu.healthmate;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ryryry-3302"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.User;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.UserEntryList;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ryryry-3302"},"content":"import seedu.healthmate.core.WeightEntryDisplay;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ryryry-3302"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ryryry-3302"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ryryry-3302"},"content":"import java.util.Optional;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ryryry-3302"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ryryry-3302"},"content":"public class WeightEntryDisplayTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ryryry-3302"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ryryry-3302"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ryryry-3302"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ryryry-3302"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ryryry-3302"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ryryry-3302"},"content":"    @AfterEach","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ryryry-3302"},"content":"    public void tearDown() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ryryry-3302"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ryryry-3302"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ryryry-3302"},"content":"    public void testShouldPrintGraph() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ryryry-3302"},"content":"        // Setup test data","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ryryry-3302"},"content":"        UserEntryList users \u003d new UserEntryList();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 79.0, true, 25,\"WEIGHT_LOSS\", 2200.0, \"2024-10-24 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 78.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-25 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 77.5, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-26 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 76.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-27 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 75.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-28 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 74.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-29 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 73.5, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-30 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 72.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-10-31 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 71.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-11-01 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ryryry-3302"},"content":"        users.addUserEntry(new User(70.0, 70.0, true, 25, \"WEIGHT_LOSS\", 2200.0, \"2024-11-02 16:34:15\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ryryry-3302"},"content":"        Optional\u003cUserEntryList\u003e optionalUserEntryList \u003d Optional.of(users);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ryryry-3302"},"content":"        WeightEntryDisplay.display(optionalUserEntryList);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ryryry-3302"},"content":"        String output \u003d outContent.toString();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ryryry-3302"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ryryry-3302"},"content":"        assertTrue(output.contains(\"Weight Timeline\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ryryry-3302"},"content":"        assertTrue(output.contains(\"|\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ryryry-3302"},"content":"        assertTrue(output.contains(\"--\"));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ryryry-3302"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ryryry-3302"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"ryryry-3302":62}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kennethSty"},"content":"java -jar ../build/libs/%jarloc% \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"kennethSty":1,"-":17}},{"path":"tp/.idea/misc.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"DarkDragoon2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"ProjectRootManager\" version\u003d\"2\" languageLevel\u003d\"JDK_17\" default\u003d\"true\" project-jdk-name\u003d\"17\" project-jdk-type\u003d\"JavaSDK\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coutput url\u003d\"file://$PROJECT_DIR$/..\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"\u003c/project\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"DarkDragoon2002":6}},{"path":"tp/.idea/workspace.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"DarkDragoon2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DarkDragoon2002"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"ChangeListManager\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003clist default\u003d\"true\" id\u003d\"5763c5c8-6b22-498e-a90a-1b9accc92c19\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"SHOW_DIALOG\" value\u003d\"false\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"HIGHLIGHT_CONFLICTS\" value\u003d\"true\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value\u003d\"false\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"LAST_RESOLUTION\" value\u003d\"IGNORE\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"Git.Settings\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"RECENT_GIT_ROOT_PATH\" value\u003d\"$PROJECT_DIR$/..\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"ProjectColorInfo\"\u003e\u003c![CDATA[{","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DarkDragoon2002"},"content":"  \"associatedIndex\": 7","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DarkDragoon2002"},"content":"}]]\u003e\u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"ProjectId\" id\u003d\"2mt6ixbKGqRcxhZaJtug7Ndmaki\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"ProjectViewState\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"hideEmptyMiddlePackages\" value\u003d\"true\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"showLibraryContents\" value\u003d\"true\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"PropertiesComponent\"\u003e\u003c![CDATA[{","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DarkDragoon2002"},"content":"  \"keyToString\": {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DarkDragoon2002"},"content":"    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DarkDragoon2002"},"content":"    \"git-widget-placeholder\": \"master\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DarkDragoon2002"},"content":"    \"kotlin-language-version-configured\": \"true\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DarkDragoon2002"},"content":"    \"nodejs_package_manager_path\": \"npm\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DarkDragoon2002"},"content":"    \"project.structure.last.edited\": \"Project\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DarkDragoon2002"},"content":"    \"project.structure.proportion\": \"0.0\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DarkDragoon2002"},"content":"    \"project.structure.side.proportion\": \"0.0\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DarkDragoon2002"},"content":"    \"settings.editor.selected.configurable\": \"reference.idesettings.quicklists\",","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DarkDragoon2002"},"content":"    \"vue.rearranger.settings.migration\": \"true\"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DarkDragoon2002"},"content":"  }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DarkDragoon2002"},"content":"}]]\u003e\u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"SharedIndexes\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003cattachedChunks\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003cset\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DarkDragoon2002"},"content":"        \u003coption value\u003d\"bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.20224.419\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DarkDragoon2002"},"content":"        \u003coption value\u003d\"bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-IU-242.20224.419\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003c/set\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003c/attachedChunks\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"SpellCheckerSettings\" RuntimeDictionaries\u003d\"0\" Folders\u003d\"0\" CustomDictionaries\u003d\"0\" DefaultDictionary\u003d\"application-level\" UseSingleDictionary\u003d\"true\" transferred\u003d\"true\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"TaskManager\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003ctask active\u003d\"true\" id\u003d\"Default\" summary\u003d\"Default task\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003cchangelist id\u003d\"5763c5c8-6b22-498e-a90a-1b9accc92c19\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003ccreated\u003e1727883657946\u003c/created\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003coption name\u003d\"number\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003coption name\u003d\"presentableId\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003cupdated\u003e1727883657946\u003c/updated\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DarkDragoon2002"},"content":"      \u003cworkItem from\u003d\"1727883659017\" duration\u003d\"158000\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003c/task\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003cservers /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003ccomponent name\u003d\"TypeScriptGeneratedFilesManager\"\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DarkDragoon2002"},"content":"    \u003coption name\u003d\"version\" value\u003d\"3\" /\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DarkDragoon2002"},"content":"  \u003c/component\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DarkDragoon2002"},"content":"\u003c/project\u003e","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"DarkDragoon2002":57}}]
