[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"# BuffBuddy ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"BuffyBuddy is your go to workout tracker to help you stay on track with your goals. ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 17 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 17 in a previous Intellij project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the setup**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"Bev-low":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.9\u0027","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:5.3.1\u0027","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"java {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    toolchain {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        languageVersion \u003d JavaLanguageVersion.of(17)","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"TVageesan":1,"nirala-ts":5,"Bev-low":2,"-":47}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"| Display                                | Name           | Github Profile                                                    | Portfolio                                      |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"|----------------------------------------|:--------------:|:------------------------------------------------------------------:|:----------------------------------------------:|","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dAtul)   | Atul Teja      | [Github](https://github.com/atulteja)                               | [Portfolio]()                                  |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)  | Thiru Vageesan | [Github](https://github.com/tvageesan)                              | [Portfolio](docs/team/johndoe.md)              |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"| ![](https://ibb.co/48tTmwJ)             | Low Beverly    | [Github](https://github.com/Bev-low)                                | [Portfolio](https://github.com/Bev-low/tp/blob/master/docs/docs/team/bev-low.md) |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)  | Tanishka       | [Github Profile](https://github.com/nirala-ts)                      | [Portfolio](docs/team/johndnirala-ts)          |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dAndreus)| Andreus        | [Github Profile](https://github.com/Andreus)                        | [Portfolio](docs/team/johndoe.md)              |","lastModifiedDate":"2024-10-20","isFullCredit":false}],"authorContributionMap":{"-":2,"andreusxcarvalho":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"We used these third party libraries to develop our application:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"- Gson","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"- Mockito","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"## Design","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"### UI Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"### Programme Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"### Meal Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"![Meal and MealList Class Diagram](./images/mealAndMealListClassDiagrams.png)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"The `Meal` component,","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"- **Represents individual meals with nutritional information:** The `Meal` class encapsulates details about a meal, specifically its name and calorie count. This allows easy tracking of individual meals within a day.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"- **Attributes:** Each `Meal` object has two main attributes: `name` (the name of the meal) and `calories` (the calorie content of the meal).","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"- **Validation:** The class enforces constraints during instantiation, ensuring that the `name` cannot be null or empty and that the calorie count is non-negative, reducing errors in meal tracking.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"- **Supports equality checks and hashing:** The `Meal` class overrides `equals()` and `hashCode()` methods to ensure that meals with identical names and calorie counts are considered equal, which is useful for meal comparison and for storing in collections like sets.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"- **Detailed representation:** The `toString()` method of `Meal` provides a concise, readable summary of the meal’s details, including the name and calorie count in the format `\"[Meal Name] | [Calories] kcal\"`. This makes it easy to display meal information in logs, summaries, or user interfaces.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"API: `MealList.java`","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"- **Manages a collection of meals:** The `MealList` class provides functionality for managing a list of `Meal` objects, allowing for easy addition, deletion, and retrieval of meals throughout the day.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"- **Provides collection-based functionality:** The class includes methods for common operations, such as checking if the list is empty, getting the total number of meals, and adding or deleting meals from the list. Each action is logged for traceability.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"- **Supports detailed retrieval and representation:** The `getMeals()` method returns the list of all meals, and the `toString()` method generates a formatted string that lists each meal with its index, making it convenient for displaying meal information in a user interface or summary.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"- **Ensures data consistency:** The `MealList` class handles edge cases, such as attempts to delete meals at invalid indexes, by throwing appropriate exceptions. This helps maintain data integrity within the list.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"- **Facilitates efficient comparisons and storage:** The class overrides `equals()` and `hashCode()` methods, which enables comparison of two `MealList` objects and allows it to be used in collections, ensuring that meal tracking remains accurate and consistent.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"### Water Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"![Water Class Diagram](./images/waterClassDiagram.png)","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"The `Water` component,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"**Tracks daily water intake:** The `Water` class allows for recording individual water consumption entries throughout the day, stored in liters. Each entry is logged, providing a detailed trace of daily water consumption.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"**Attributes:** The main attribute of the `Water` class is waterList, a list of Float values representing individual water intake entries in liters.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"**Validation and error handling:** When adding water entries, the `Water` class enforces that the water amount is positive. Deletion attempts with invalid indexes are handled with exceptions, ensuring safe and predictable usage.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"**Supports collection-based functionality:** The `Water` class includes methods for adding and deleting water entries, checking if the list is empty, and retrieving the entire list of entries. Each action is logged, allowing developers to track and troubleshoot any changes to the water intake log.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"**User-friendly representation:** The toString() method formats and returns a string representation of all water entries. Each entry is listed with an index, making it easy to display in user interfaces and summaries.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"**Efficient storage and retrieval:** The getWaterList() method returns the full list of water intake entries, while the class’s clear and consistent data structure facilitates straightforward water consumption tracking and data retrieval.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"### History Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"#### DailyRecord","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"![Diagram for DailyRecord Component](./images/DailyRecord_API_UML.jpg)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"The `DailyRecord` component,","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"- **Tracks daily workout, meals, and water intake:** The `DailyRecord` class maintains a log of the day’s activities, meals consumed,","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"  and water intake. It provides methods to add, update, and retrieve each of these records.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"- **Encapsulates multiple data types:** `DailyRecord` works with various objects such as `Day` (for recording the workout programme),","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"  `MealList` (for managing a list of meals consumed), and `Water` (for tracking daily water intake). These components are stored and managed","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"  together within a single daily record.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"- **Enables modification and deletion:** The class provides methods for adding meals and water to the record, updating the workout for the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"  day, and removing items such as meals or water entries. Each modification is logged for traceability.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"- **Calculates key daily statistics:** `DailyRecord` is capable of calculating the total calories burned from the recorded `Day` and the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"  calories gained from the `MealList`. It can also sum the total water intake for the day.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"- **Provides a comprehensive summary:** The class’s `toString()` method generates a detailed summary of the day’s activities, including","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"  calories burned, meals eaten, water consumed, and the caloric balance, making it easy to retrieve and display all relevant information in a readable format.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"### Storage Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"#### Storage","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"![Diagram for Storage Component](./images/Storage_API_UML.jpg)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"The `Storage` component,","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"- **Handles the saving and loading of both `ProgrammeList` and `History` data in JSON format:** The `Storage` component is responsible","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"  for serializing `ProgrammeList` and `History` objects into JSON format and passing them on to `FileManager`, as well as getting the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"  data in Json format from `FileManager` and deserializing it into the appropriate objects when needed.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"- **Serves as an adapter between `FileManager` and `BuffBuddy` classes:** `Storage` acts as an intermediary, translating between the JSON","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"  data handled by `FileManager` and the objects in the `BuffBuddy` application, ensuring seamless conversion between formats.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"- **Relies on `ProgrammeList` and `History` from the Model component:** Since the `Storage` component is tasked with saving and retrieving","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"  the `ProgrammeList` and `History` objects, it ensures the data is accurately represented and stored.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"- **Utilizes custom serializers:** To properly handle date formats and other specific needs, Storage makes use of custom serializers for","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"  objects like LocalDate from the `DateSerilazer` class, ensuring that these objects are correctly serialized to and deserialized from JSON.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"#### FileManager","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"![Diagram for FileManager Component](./images/FileManager_API_UML.jpg)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"The `FileManager` component,","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"- **Manages the saving and loading of data:** The `FileManager` class is responsible for reading data from and writing data to the file","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"  specified by the user. It ensures that both the `ProgrammeList` and `History` data are stored in JSON format, and retrieves them when needed.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"- **Handles file creation and directory management:** Before saving data, `FileManager` checks whether the necessary directories and","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"  files exist. If they do not, it creates them to ensure data can be stored correctly.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"- **Leverages JSON for data structure:** `FileManager` uses `Gson` to serialize and deserialize JSON data, making it easy to work with","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"  structured data. It also ensures the data is formatted in a readable way using pretty printing for clarity.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"- **Performs error handling and logging:** `FileManager` employs detailed logging to track the progress of saving and loading operations.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"  If any issues arise during file operations (e.g., missing files, failed directory creation), they are logged, and exceptions are thrown to handle errors gracefully.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TVageesan"},"content":"### Parser Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TVageesan"},"content":"### Command Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TVageesan"},"content":"#### Overview","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TVageesan"},"content":"To interact with BuffBuddy, the user\u0027s input commands are parsed into discrete `Command` objects that have the sole responsibility of accomplishing that task.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TVageesan"},"content":"As BuffBuddy contains many commands and thus many types of `Command` subclasses, the following diagram presents a simplified representation of the various `Command` classes:","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TVageesan"},"content":"![Summary of Command classes](images/commandSummary.png)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"Each abstract subclass of `Command` represents a generalization of the various commands available to BuffBuddy. In the following sections, each abstract class and their respective purposes will be elaborated on.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TVageesan"},"content":"#### Programme Commands","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TVageesan"},"content":"`ProgrammeCommand` is an abstract class for all `Command` classes that interact with `ProgrammeList` and its encapsulated data.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TVageesan"},"content":"The following diagram documents all `ProgrammeCommand` subclasses.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TVageesan"},"content":"![Summary of Programme classes](images/programmeCommandSummary.png)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TVageesan"},"content":"`EditProgrammeCommand` classes are a subset of `ProgrammeCommand` classes that focus specifically on editing the internal `ProgrammeList` data. As this data is concerned only with `ProgrammeList`, `EditCommand#execute()` has been narrowed through method overloading to only take in `ProgrammeList` as a parameter.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TVageesan"},"content":"![Summary of Edit classes](images/editCommandSummary.png)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TVageesan"},"content":"#### Meal Commands","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TVageesan"},"content":"`MealCommand` is an abstract class for all `Command` classes that interact with meal-related data within the application. These commands allow users to log, edit, and manage their meal entries, ensuring that their dietary information is accurately tracked and updated. The following diagram documents all `MealCommand` subclasses.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TVageesan"},"content":"![Summary of Meal classes](images/mealCommandSummary.png)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TVageesan"},"content":"#### Water Commands","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TVageesan"},"content":"`WaterCommand` is an abstract class for all `Command` classes that interact with water-related data within the application. These commands allow users to log, edit, and manage their water intake entries, ensuring that their hydration information is accurately tracked and updated. The following diagram documents all `WaterCommand` subclasses.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TVageesan"},"content":"![Summary of Water classes](images/waterCommandSummary.png)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"TVageesan"},"content":"#### History Commands","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TVageesan"},"content":"`HistoryCommand` is an abstract class for all `Command` classes that interact with `History` data within the application. These involve viewing weekly summaries, viewing their recorded data and getting their personal bests for each exercise. The following diagram documents all `HistoryCommand` subclasses.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"TVageesan"},"content":"![Summary of History classes](images/historyCommandSummary.png)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"TVageesan"},"content":"### Common Component","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TVageesan"},"content":"`common` package contains utility classes that are used across the multiple packages.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Bev-low"},"content":"## Implementation","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Bev-low"},"content":"### Save/Load Feature","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Bev-low"},"content":"The save/load mechanism is handled by three main components: `Storage`, `FileManager`, and `DateSerializer`. `FileManager` manages file interactions, including reading from and writing to JSON data files, while `Storage` handles the conversion between JSON objects and `ProgrammeList`/`History` objects. The `DateSerializer` is used for converting `LocalDate` to/from JSON format.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Bev-low"},"content":"#### FileManager implements the following key operations:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Bev-low"},"content":"- **`FileManager#load()`**: Reads the data file into a `JsonObject`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Bev-low"},"content":"- **`FileManager#save(JsonObject data)`**: Writes the `JsonObject` containing all data back into the file.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Bev-low"},"content":"- **`FileManager#createDirIfNotExist()`** and **`FileManager#createFileIfNotExist()`**: Ensure that the necessary directory and file exist before saving.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Bev-low"},"content":"#### Storage converts JSON data into Java objects:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Bev-low"},"content":"- **`Storage#loadProgrammeList()`**: Converts the `ProgrammeList` JSON data into a `ProgrammeList` object using `programmeListFromJson()`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Bev-low"},"content":"- **`Storage#loadHistory()`**: Converts the `History` JSON data into a `History` object using `historyFromJson()`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Bev-low"},"content":"- **`Storage#saveData()`**: Converts `ProgrammeList` and `History` into JSON using `createJSON()`, and passes it to `FileManager#save()`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"#### DateSerializer is responsible for:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"- **`DateSerializer#serialize()`**: Converts `LocalDate` into `JsonElement`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Bev-low"},"content":"- **`DateSerializer#deserialize()`**: Converts `JsonElement` back into `LocalDate`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"These operations are exposed in the `Model` interface, allowing seamless saving and loading of `ProgrammeList` and `History` data.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"### Flow of Operations","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Bev-low"},"content":"Given below is an example usage scenario and how the save/load mechanism behaves at each step.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Bev-low"},"content":"**Step 1.** The user launches the application for the first time. A `Storage` object is initialized by `BuffyBuddy`, and it attempts to load data from","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Bev-low"},"content":"the file using `FileManager`. If no data file exists, `Storage` initializes an empty `ProgrammeList` and `History`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Bev-low"},"content":"**Step 2.** The user interacts with the application by adding programmes or logging workout activities and meals, modifying both the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Bev-low"},"content":"`ProgrammeList` and `History`. These changes are stored temporarily in memory, but no data is saved to the file at this point.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Bev-low"},"content":"**Step 3.** When the user chooses to exit the application, `Model#saveData()` is triggered, which in turn calls `Storage#saveData()`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Bev-low"},"content":"At this point, `Storage` converts the current `ProgrammeList` and `History` into JSON format using the `createJSON()` method and passes","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Bev-low"},"content":"the `JsonObject` to `FileManager#save()`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Bev-low"},"content":"**Step 4.** The `FileManager` saves the updated `JsonObject` to the data file, ensuring that the user\u0027s changes are preserved for the","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Bev-low"},"content":"next session. If necessary, `FileManager#createDirIfNotExist()` and `FileManager#createFileIfNotExist()` ensure that the correct directories","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Bev-low"},"content":"and files are in place before saving.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Bev-low"},"content":"**Step 5.** The next time the user launches the application, `Storage#loadProgrammeList()` and `Storage#loadHistory()` are called, which","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Bev-low"},"content":"load the data from the file via `FileManager#load()`. The loaded data is then converted from JSON back into `ProgrammeList` and `History`","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bev-low"},"content":"objects, restoring the user\u0027s previous session.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Bev-low"},"content":"The following sequence diagram shows how a load operation for ProgrammeList goes through the Storage component:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Bev-low"},"content":"![Sequence Diagram for Load operation](./images/LoadProgrammeList_Seq_Dia.jpg)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Bev-low"},"content":"The following sequence diagram shows how a save operation goes through the Storage component:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Bev-low"},"content":"![Sequence Diagram for Save operation](./images/Save_Seq-Dia.jpg)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"andreusxcarvalho"},"content":"## WeeklySummary Feature","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"andreusxcarvalho"},"content":"The Weekly Summary feature allows users to view a summary of their workouts for the current week. This functionality is achieved through a combination of several interconnected components, including `WeeklySummaryCommand`, `Parser`, `HistoryCommandFactory`, and `History`. Users can access this feature through the `history wk` command in the UI. The implementation follows a command pattern, combined with the factory pattern for command creation.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"andreusxcarvalho"},"content":"### Overview","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"andreusxcarvalho"},"content":"The following components are crucial to the Weekly Summary feature:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"andreusxcarvalho"},"content":"1. **Parser Component**  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"andreusxcarvalho"},"content":"   The `Parser` interprets the initial command and directs the flow as follows:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"andreusxcarvalho"},"content":"   - **`Parser#parse(String)`**: Accepts the raw input string, splits it into the main command and arguments.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"andreusxcarvalho"},"content":"   - **`CommandFactory`**: Generates the appropriate command object based on the parsed input.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"andreusxcarvalho"},"content":"   - **`HistoryCommandFactory`**: Handles the creation of history-related commands, including `WeeklySummaryCommand`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"andreusxcarvalho"},"content":"2. **WeeklySummaryCommand Component**  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"andreusxcarvalho"},"content":"   The `WeeklySummaryCommand` implements the `Command` interface and performs the following:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"andreusxcarvalho"},"content":"   - Extends the abstract `Command` class.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"andreusxcarvalho"},"content":"   - Uses the command word `\"wk\"`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"andreusxcarvalho"},"content":"   - Executes by retrieving the weekly summary from the `History` object.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"andreusxcarvalho"},"content":"   - Returns a `CommandResult` that contains the formatted summary for display.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"andreusxcarvalho"},"content":"3. **History Component**  ","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"andreusxcarvalho"},"content":"   The `History` class manages workout data and provides:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"andreusxcarvalho"},"content":"   - **`getWeeklyWorkoutSummary()`**: Retrieves and formats the workout data for the current week.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"andreusxcarvalho"},"content":"### Flow of Operations","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"andreusxcarvalho"},"content":"The following example illustrates the usage scenario and behavior of the Weekly Summary feature:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"andreusxcarvalho"},"content":"1. **Step 1**: The user enters the `\"history wk\"` command in the UI. The UI reads this command and passes it to the `Parser`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"andreusxcarvalho"},"content":"2. **Step 2**: The `Parser` breaks down the command `\"history wk\"` into:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"andreusxcarvalho"},"content":"   - Main command: `\"history\"`","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"andreusxcarvalho"},"content":"   - Subcommand: `\"wk\"`","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"andreusxcarvalho"},"content":"3. **Step 3**: The `Parser` uses `CommandFactory`, which recognizes this as a history command and delegates to `HistoryCommandFactory`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"andreusxcarvalho"},"content":"4. **Step 4**: `HistoryCommandFactory` identifies `\"wk\"` as the `WeeklySummaryCommand` trigger and creates a new `WeeklySummaryCommand` instance.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"andreusxcarvalho"},"content":"5. **Step 5**: The `WeeklySummaryCommand` is passed back through the chain to the UI, which then calls its `execute` method.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"andreusxcarvalho"},"content":"6. **Step 6**: During execution:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"andreusxcarvalho"},"content":"   - `WeeklySummaryCommand` calls `History`\u0027s `getWeeklyWorkoutSummary()`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"andreusxcarvalho"},"content":"   - The summary is formatted and wrapped in a `CommandResult`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"andreusxcarvalho"},"content":"   - The UI displays the result to the user.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"andreusxcarvalho"},"content":"### Sequence Diagram","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"andreusxcarvalho"},"content":"![Sequence Diagram for WeeklySummary feature](./images/History%20WeeklySummary%20UML%20Sequence%20Diagram.png)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"TVageesan"},"content":"### Edit Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"TVageesan"},"content":"#### Overview","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"TVageesan"},"content":"The **Edit Programme** feature allows for in-depth management of programme structures, supporting operations to add, remove, and update days and exercises within each programme.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"TVageesan"},"content":"Due to the nature of modelling a Workout Programme, a hierarchical data structure is used to represent workout data.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"TVageesan"},"content":"To perform an edit to any aspect of this data, the EditCommand will traverse the hierarchy until it reaches the necessary depth to perform its edit operation.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"TVageesan"},"content":"These operations include:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"TVageesan"},"content":"- Adding or removing Days to the Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"TVageesan"},"content":"- Adding or removing Exercises to Days in the Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"TVageesan"},"content":"- Updating the details of Exercises in Days in the Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"TVageesan"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"TVageesan"},"content":"The overall design that enables this functionality is described generically by the following sequence diagram.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"TVageesan"},"content":"![Edit Command generic sequence](images/editCommand.png)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"TVageesan"},"content":"The \u0027Model\u0027 class in the above diagram is a generalization of the various data models that are being interacted with","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"TVageesan"},"content":"to perform each specific edit command. For each edit command, the following sequence diagrams","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"TVageesan"},"content":"further break down how this interaction works.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"TVageesan"},"content":"##### Add day","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"TVageesan"},"content":"![Add/Remove Day](images/addDayCommand.png)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"TVageesan"},"content":"##### Add exercise","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"TVageesan"},"content":"![Add/Remove Exercise](images/addExerciseCommand.png)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"TVageesan"},"content":"##### Update exercise","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"TVageesan"},"content":"![Edit Exercise](images/editExerciseCommand.png)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"TVageesan"},"content":"##### Example Usage","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"TVageesan"},"content":"Given below is an example usage scenario for \u0027delete exercise\u0027 and how the edit programme functions at each step.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"TVageesan"},"content":"Step 1. The user creates a programme with a given number of Days with their respective Exercises. ProgrammeList will contain a reference to this programme after its creation.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"TVageesan"},"content":"Step 2. The user executes `programme edit /p 1 /d 1 /x 1` to delete the first exercise in the first day of the first programme.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"TVageesan"},"content":"Step 3. After parsing this input, a `DeleteExerciseCommand` (inheriting from the generic `EditProgrammeCommand`) is created and executed.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"nirala-ts"},"content":"Step 4. The command first retrieves the chosen Programme with `ProgrammeList#getProgramme()`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"TVageesan"},"content":"Step 5. The command then retrieves the chosen Day with `Programme#getDay()`.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"TVageesan"},"content":"Step 6. With the Day object, it performs the `Day#deleteExercise()` with the given exercise ID","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"TVageesan"},"content":"Step 7. The deleted Exercise object is then returned to the `DeleteExerciseCommand` to display as part of the returned `CommandResult`.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"TVageesan"},"content":"#### Activity Diagram","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"TVageesan"},"content":"To summarize, the following activity diagram describes how the overall operation occurs.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"TVageesan"},"content":"![](images/editCommandActivityDiagram.png)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"TVageesan"},"content":"---","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Atulteja"},"content":"### Add Meal","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Atulteja"},"content":"#### Feature Implementation","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Atulteja"},"content":"The **Add Meal** feature manages the functionality related to adding meals to a daily record. It interacts with various components such as `History`, `DailyRecord`, and `MealList` to ensure meals are added correctly.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Atulteja"},"content":"The **Add Meal** command navigates through the following hierarchy:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Atulteja"},"content":"- **History** → **DailyRecord** → **MealList**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Atulteja"},"content":"- If a `DailyRecord` does not exist for a given date, it is created before adding the meal.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Atulteja"},"content":"- Similarly, a new `Meallist` object is created and added to the `DailyRecord` if it doesn\u0027t already exist. The meal is then added to the `MealList` object.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Atulteja"},"content":"These operations include:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Atulteja"},"content":"- Adding meals to a `MealList` in the `DailyRecord` of a particular date in the `History`.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Atulteja"},"content":"Given below is an example usage scenario for adding a meal and how the add meal command functions at each step.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Atulteja"},"content":"#### Example Usage Scenario","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Atulteja"},"content":"**Step 1**: The user starts by adding a meal using the command:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Atulteja"},"content":"meal add /n [mealName] /c [calories]","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Atulteja"},"content":"- The command is parsed and translated into an `AddMealCommand` object, which contains the necessary details.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Atulteja"},"content":"**Step 2**: The command retrieves the `DailyRecord` for the specified date from the `History` using `getRecordByDate()`. If no record exists, a new one is created.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"nirala-ts"},"content":"**Step 3**: The `AddMealCommand` adds the meal to the `MealList` of the `DailyRecord`. If the mealList already exists, it updates the existing mealList instead.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Atulteja"},"content":"**Step 4**: The newly added `Meal` object is returned to the `AddMealCommand` to display as part of the `CommandResult`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Atulteja"},"content":"The overall design that enables this functionality is described generically by the following sequence diagram.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Atulteja"},"content":"#### Sequence Diagram for \"Add Meal\" Command","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Atulteja"},"content":"![Add Meal Sequence Diagram](images/addMealSequenceDiagram.png)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Atulteja"},"content":"The diagram shows the interactions among different classes and objects during the execution of the \"Add Meal\" command.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"TVageesan"},"content":"#### Activity Diagram for \"Add Meal\" Feature","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Atulteja"},"content":"![Add Meal Activity Diagram](images/addMealActivitydiagram.png)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"TVageesan"},"content":"#### Summary of Feature","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"TVageesan"},"content":"The **Add Meal** feature uses a **hierarchical command pattern** to manage meal additions while maintaining good encapsulation and separation of concerns. The chosen design allows easy extensibility and maintainability.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"TVageesan"},"content":"### Create Programme Feature","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"TVageesan"},"content":"#### Feature Overview","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"nirala-ts"},"content":"The \"Create Programme\" feature enables users to build a structured fitness program with workout days, each containing specific exercises. This feature allows flexible customization, enabling users to plan their fitness goals in detail, including attributes such as the name, sets, reps, weight, and calories for each exercise.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"TVageesan"},"content":"#### Programme Flow","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"nirala-ts"},"content":"1. **User Input and Command Handling**:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"nirala-ts"},"content":"- Upon startup, BuffBuddy welcomes the user and continuously prompts for commands.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"nirala-ts"},"content":"- The command input is read, parsed, and handled by `handleCommand`. If the user enters a valid command (e.g., `create`), it is executed, producing a `CommandResult`.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"nirala-ts"},"content":"2. **Command Parsing and Execution**:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"nirala-ts"},"content":"- `Parser.parse()` analyzes the user’s input to identify the command type and arguments.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"nirala-ts"},"content":"- `CommandFactory.createCommand()` determines the specific command (e.g., `CreateCommand`) and forwards it to the relevant command factory (`ProgCommandFactory` for programme-related commands).","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"nirala-ts"},"content":"3. **Creating a Programme**:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"nirala-ts"},"content":"- Within `ProgCommandFactory`, `prepareCreateCommand()` splits the input string by `/d` (indicating separate days) and `/e` (indicating exercises within each day).","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"nirala-ts"},"content":"- Each **Day** is parsed by `parseDay`, and each **Exercise** is created using `parseExercise`, which extracts details such as name, sets, reps, weight, and calories using flag parsing (`/n`, `/s`, `/r`, `/w`, and `/c` flags).","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"nirala-ts"},"content":"- The `CreateCommand` is then prepared with the programme name and its associated days.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"nirala-ts"},"content":"4. **Inserting and Storing Programmes**:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"nirala-ts"},"content":"- The `execute()` method of `CreateCommand` uses `ProgrammeList` to insert a new programme, which is then stored for future access and manipulation.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"nirala-ts"},"content":"- `ProgrammeList.insertProgramme()` creates a `Programme` object and adds it to the list, ensuring it is available for subsequent commands (e.g., viewing, editing, or deleting).","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"nirala-ts"},"content":"5. **Execution Feedback**:","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"nirala-ts"},"content":"- A successful creation logs the programme details and returns a `CommandResult`, notifying the user of the new programme with its full structure.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"nirala-ts"},"content":"This flow allows users to easily create structured workout routines, customizing their fitness journey directly within BuffBuddy.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"nirala-ts"},"content":"The overall design that enables this functionality is described generically by the following sequence diagram.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"nirala-ts"},"content":"![](images/createCommand.png)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Atulteja"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Atulteja"},"content":"* [Logging Guide](LoggingGuide.md)","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Atulteja"},"content":"* [Testing Guide](TestingGuide.md)","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Atulteja"},"content":"## Appendix","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"TVageesan"},"content":"### Product scope","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Bev-low"},"content":"BuffBuddy is a fitness tracking app that help you track workout, meals, water to aid you in achieving your body goals.","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"TVageesan"},"content":"Gym goers who need a quick way to create, manage and track their workout plans and progress.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"TVageesan"},"content":"- Users will be able to quickly create, update and view their workout programmes","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"TVageesan"},"content":"- Users will be able to track their progress as they progress on their fitness journey","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"TVageesan"},"content":"- Users will be able to track water and calorie intake to better track their nutrition","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"| Version | As a ...               | I want to ...                                           | So that I can ...                                    |","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"nirala-ts"},"content":"|---------|------------------------|---------------------------------------------------------|------------------------------------------------------|","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | create a new workout plan/routine                       | tailor my workout to fit my needs                    |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | create a workout entry (input sets, weights, rep, time) | keep track of my progress                            |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | view my routine when I begin my workout                 | follow my plan more effectively                      |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | view their logged workout entry for a specific day      | see what they have done previously                   |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | delete a workout entry                                  | remove mistakenly created logs                       |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | delete a fitness routine if I no longer use it          | ensure my routines remain relevant and organized     |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"TVageesan"},"content":"| v1.0    | fitness enthusiast     | edit my existing fitness routine                        | further customize my routines after making them      |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"TVageesan"},"content":"| v2.0    | progress tracking user | view a summary of my weekly workout activity            | measure my overall progress                          |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"TVageesan"},"content":"| v2.0    | progress tracking user | track my personal bests for each exercise               | see improvements over time                           |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Bev-low"},"content":"| v2.0    | nutrition-focused user | track calories burned during my workout                 | align my fitness routine with my dietary goals       |","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"TVageesan"},"content":"| v2.0    | nutrition-focused user | add a meal I just ate                                   | track my meals over time                             |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"TVageesan"},"content":"| v2.0    | nutrition-focused user | delete a meal I ate                                     | delete a wrongly inputted meal                       |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"TVageesan"},"content":"| v2.0    | nutrition-focused user | view my meals I ate on a certain date                   | see how much calories I have eaten                   |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"TVageesan"},"content":"| v2.0    | hydration-focused user | add my water intake                                     | track my water intake for each day                   |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"TVageesan"},"content":"| v2.0    | hydration-focused user | view my water intake                                    | see how much water I have consumed across days/week  |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"TVageesan"},"content":"| v2.0    | hydration-focused user | delete a water intake                                   | remove any mistakes made when inputting water intake |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"TVageesan"},"content":"- Java 11 or above installed","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"TVageesan"},"content":"- Program built to support only single user","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"TVageesan"},"content":"- _exercise_ - Any exercise that can defined by a name, rep, set, weight and calories burned.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"TVageesan"},"content":"- _day_ - A day is a collection of exercises meant to be done in one day","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"TVageesan"},"content":"- _programme_ - A programme is a weekly plan of workout days meant to be performed in rotation","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"TVageesan":171,"nirala-ts":37,"Atulteja":82,"Bev-low":93,"-":29,"andreusxcarvalho":48}},{"path":"docs/LoggingGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"# Logging Guide","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"We are using the `java.util.logging` package for logging within this project.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"## Obtaining Loggers","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"Each class can obtain its `Logger` using `LogsCenter.getLogger(Class)`, which configures log messages according to the specified logging level.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"## Log Output","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"Log messages are sent to both the console and a designated `.log` file, ensuring that logging data is accessible in real-time and for later review.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"## Logging Levels","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"This project uses multiple log levels to categorize the types of messages logged:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"- **INFO**: Used for general messages that indicate the normal flow of the application, like the creation of objects (e.g., \"MealList created with an empty list\").","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"- **WARNING**: Employed when handling errors or potentially problematic situations, such as invalid input indices (e.g., logging a warning when an invalid index is passed to delete a meal).","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"- **SEVERE**: Not yet observed in the provided code, but typically reserved for serious issues that might prevent the application from continuing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"- **DEBUG/FINER**: While not explicitly used in the examples provided, can be added for more granular traceability, especially in methods with complex logic or decision paths.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"## Logging Conventions and Examples","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"- **Action Logging**: Each action in critical methods, such as adding or deleting entries (e.g., meals or exercises), is logged to track user interactions and changes in data.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"- **Validation Logging**: Log messages are used when inputs are validated, ensuring that any issues with input values are easily traceable.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"- **Return Value Logging**: Methods that perform key actions often log the outcomes, such as the final list of entries after additions or deletions. This practice makes it easier to verify that operations are completing as expected.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"## Best Practices for Logging","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"- When logging at **INFO** level, focus on messages that reflect major steps or state changes within the application, helping to provide a high-level overview.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"- Use **WARNING** level logging to capture recoverable issues or cases where an action does not proceed as expected.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"- Add **SEVERE** logging if you introduce error-handling for critical failures.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"For guidance on log message formatting and additional logging practices, refer to [Java: Logging conventions](https://github.com/se-edu/guides).","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Atulteja":31}},{"path":"docs/TestingGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"# Testing Guide","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"This guide provides instructions on how to run tests for the project, as well as details on the types of tests included and best practices for writing additional tests.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"## Running Tests","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"There are two main ways to run tests in this project.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"### Method 1: Using IntelliJ JUnit Test Runner","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"- To run all tests, right-click on the `src/test/java` folder and choose **Run \u0027All Tests\u0027**.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"- To run a specific test or subset of tests, right-click on a test package, test class, or individual test, and select **Run \u0027TestName\u0027**.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"### Method 2: Using Gradle","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"- Open a terminal and navigate to the project root directory.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"- Run the following command to clean and execute all tests:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    ```bash","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    ./gradlew clean test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    ```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"  \u003e Note: On Windows, use `gradlew.bat clean test` instead.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"- **:link: Link**: For more details on using Gradle for testing, refer to the [Gradle Tutorial](https://github.com/se-edu/guides) from `se-edu/guides`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"## Types of Tests","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"This project uses several types of tests to ensure comprehensive coverage of functionality and integration.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"### 1. Unit Tests","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"- **Description**: Tests the smallest units of code, typically individual methods or classes.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"- **Purpose**: Verifies that each method or class works as expected in isolation.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"- **Examples**:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    - `AddMealCommandTest` to test the `AddMealCommand` functionality.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    - `DeleteMealCommandTest` to validate the `DeleteMealCommand` execution and error handling.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"### 2. Integration Tests","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"- **Description**: Tests the interaction between multiple classes or modules.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"- **Purpose**: Ensures that different components work together correctly.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"- **Examples**:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"    - `MealCommandTest` to validate the execution of meal-related commands with dependencies on `History` and `ProgrammeList`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    - `CommandFactoryTest` to check that different command factories produce the correct commands based on input strings.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"### 3. Hybrid Tests (Unit and Integration)","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"- **Description**: Tests multiple units together and verifies their connection and interaction.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"- **Purpose**: Combines unit and integration testing to validate functionality at a higher level.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"- **Examples**:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    - `ViewMealCommandTest` to test `ViewMealCommand` interactions with `DailyRecord` and `MealList`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"## Testing Conventions and Examples","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"The following conventions are recommended for writing and organizing tests:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"### Test Naming Conventions","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"- Use descriptive names to clearly state what each test is validating. For example:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    - `testExecuteHappyPath` to indicate a test that checks successful execution.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    - `testExecuteEdgeCaseNullDailyRecord` to indicate a test for a specific edge case.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"### Structure and Assertions","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"- **Arrange, Act, Assert**: Organize tests using this structure:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    1. **Arrange**: Set up the necessary objects and mocks.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"    2. **Act**: Call the method under test.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    3. **Assert**: Verify the expected outcome using assertions like `assertEquals` and `assertThrows`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"- **Assertions**: Ensure that you use meaningful assertions to validate expected outcomes. Examples include:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    - `assertEquals(expected, actual)` for comparing results.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    - `assertThrows(Exception.class, () -\u003e { ... })` for checking exceptions.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"### Mocking and Verification","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"- **Mockito** is used for creating mock objects and verifying interactions. Examples include:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"    - **Mock Initialization**: Use `@Mock` annotations and initialize with `MockitoAnnotations.openMocks(this)`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    - **Behavior Setup**: Define behavior for mocks, such as `when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord)`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    - **Verification**: Confirm that certain methods were called, such as `verify(mockDailyRecord).addMealToRecord(sampleMeal)`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"## Common Test Scenarios","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"- **Happy Path**: Verify that commands and methods execute as expected in normal conditions.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"- **Edge Cases**: Handle cases that may cause errors, such as `null` values, invalid indices, or out-of-bound IDs.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"- **Constructor Tests**: Ensure constructors handle both valid and invalid inputs properly.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"- **Command Execution**: For each command, ensure that:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    - Expected interactions with dependencies (e.g., `History`, `DailyRecord`) occur.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"    - Correct responses or `CommandResult` messages are returned.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"## Example Tests Breakdown","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"### AddMealCommandTest","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"- **Happy Path**: `testExecuteHappyPath` verifies that `AddMealCommand` adds a meal and returns the correct success message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"- **Edge Case**: `testExecuteEdgeCaseNullDailyRecord` checks that an `AssertionError` is thrown if `DailyRecord` is `null`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"### DeleteMealCommandTest","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"- **Happy Path**: `testExecuteHappyPath` confirms that `DeleteMealCommand` removes the meal and returns the correct success message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"- **Edge Case**: `testExecuteEdgeCaseInvalidIndex` checks for `IndexOutOfBoundsException` when an invalid index is used.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"### CommandFactoryTest","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"- **Factory Pattern**: Tests that `CommandFactory` returns the correct `Command` type based on the input command string.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"- **Happy Path**: Validates each command creation, such as `createExitCommand` returning an `ExitCommand`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"- **Invalid Input**: `testCreateInvalidCommand` ensures that an unknown command returns an `InvalidCommand`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"## Best Practices for Writing Tests","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"1. **Write Clear and Isolated Tests**: Each test should focus on a single functionality or scenario.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"2. **Test Edge Cases**: Include tests for common edge cases to ensure robustness, such as invalid inputs or `null` values.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"3. **Use Descriptive Assertions**: Ensure that assertions provide clear, readable results and messages.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"4. **Keep Tests Independent**: Avoid dependencies between tests to allow each test to run independently without side effects.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"5. **Run Tests Regularly**: Run all tests frequently to catch potential issues early.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"This testing guide will help you structure, organize, and expand your test cases effectively for comprehensive project coverage.","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Atulteja":105}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"BuffBuddy is your all-in-one fitness tracking companion, designed to help you streamline and organize your workout routines.","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"Whether you’re planning custom programs, tracking daily exercises, or logging your workout history, BuffBuddy keeps everything in one place.","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"Build personalized workout plans, log progress, and stay motivated with an intuitive interface that’s perfect for fitness enthusiasts of all levels.","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 17 or above installed.","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"2. Download the latest version of `BuffBuddy` from [here](https://github.com/AY2425S1-CS2113-W10-3/tp/releases/tag/v1.0).","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"3. Open a command terminal, cd into the folder you put the jar file in, and use the `java -jar BuffBuddy.jar` command to run the application.","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"## Terminology:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"- **Exercise**: An exercise defined by a name, rep, set, weight and average calories burned.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"- **Day**: A ‘workout day’ is a collection of exercises to be done together.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"- **Programme**: A programme is a collection of workout days.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"- **Daily Record**: A daily record contains a user\u0027s workout activity, food intake and water intake for any given day.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"\u003e **Important Notes**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"\u003e When entering a multi-word input for any string argument, i.e. \"My Starter Programme\", please enter it with a \"\\_\" between the spaces like so: \"My_Starter_Programme\".","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"### 1. Add a New Programme","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"Adds a new empty workout Programme with a given name.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"Command: `prog create PROG_NAME`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"Example: `prog create Starter`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"New programme created:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"Starter","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"_Note_: Advanced users can directly create Programmes with Day and Exercise data like so:","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"Command: `prog create PROG_NAME /d /e /n EXERCISE_NAME /s SET /r REP /w WEIGHT /c CALORIES /e ...`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"Example: `prog create Starter /d ONE /e /n Bench_Press /s 3 /r 12 /w 30 /c 200 /e /n Squat /s 3 /r 12 /w 50 /c 200 /d TWO /e /n Bicep_Curl /s 3 /r 12 /w 10 /c 100`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"New programme created:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"Starter","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"Day 1: Name: ONE","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"1. Bench Press: 3 sets of 12 reps at 30 kg | Burnt 200 calories","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"2. Squat: 3 sets of 12 reps at 50 kg | Burnt 200 calories","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"Day 2: Name: TWO","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"1. Bicep Curl: 3 sets of 12 reps at 10 kg | Burnt 100 calories","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"---","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"### 2. View Programme","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"This command displays the detailed workout routine, separated by days, for the chosen Programme.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"Each exercise includes its name, sets, reps, weight and how many calories it would burn.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"If no Programme index is provided, it defaults to viewing the currently active Programme.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"Command: `prog view [PROG_INDEX]`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"andreusxcarvalho"},"content":"Example: `prog view 1`","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TVageesan"},"content":"Viewing programme:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TVageesan"},"content":"Starter","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"Day 1: ONE","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"1. Bench Press: 3 sets of 12 at 30 | Burnt 200 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"2. Squat: 3 sets of 12 at 50 | Burnt 200 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"Day 2: TWO","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"1. Bicep Curl: 3 sets of 12 at 10 | Burnt 100 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"### 3. List All Programmes","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TVageesan"},"content":"Lists all workout Programmes belonging to the user by name and index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TVageesan"},"content":"Command: `prog list`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andreusxcarvalho"},"content":"Example: `prog list`","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TVageesan"},"content":"Listing programmes:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"1. Advanced","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"2. Starter -- Active","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TVageesan"},"content":"### 4. Delete Programme","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TVageesan"},"content":"Deletes the programme at the given index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TVageesan"},"content":"Command: `prog delete INDEX`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TVageesan"},"content":"Example: `prog delete 1`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TVageesan"},"content":"Deleted programme:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TVageesan"},"content":"Starter","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TVageesan"},"content":"Day 1: ONE","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TVageesan"},"content":"1. bench: 3 sets of 30 at 30 | Burnt 0 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TVageesan"},"content":"2. Squat: 3 sets of 12 at 50 | Burnt 0 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TVageesan"},"content":"Day 2: TWO","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TVageesan"},"content":"1. Bicep Curl: 3 sets of 12 at 10 | Burnt 0 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"TVageesan"},"content":"---","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bev-low"},"content":"### 5. Add a New Day to an Existing Programme","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Bev-low"},"content":"Add a new Day to an existing programme.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Bev-low"},"content":"Command: `prog edit [/p PROG_INDEX] /ad DAY_NAME`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TVageesan"},"content":"Parameters:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"TVageesan"},"content":"- **/p PROG_INDEX** _(optional)_: Specifies the Programme index. Defaults to the current active Programme if omitted.  ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TVageesan"},"content":"  **Alias**: `/programme` – Either `/p` or `/programme` can be used to specify the programme index.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bev-low"},"content":"- **/ad DAY_NAME**: DAY_NAME is a string that names the day. ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/addDay` – Either `/ad` or `/addDay` can be used to add a day.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Bev-low"},"content":"Example: `prog edit /p 1 /ad Cardio Day`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Bev-low"},"content":"Creates a new empty Day named \"Cardio Day\" in Programme 1.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"```plaintext","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Bev-low"},"content":"Created new day: Cardio Day","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Bev-low"},"content":"_Note_: Advanced users can directly create days with exercises using the syntax found in `Create Programme`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Bev-low"},"content":"```plaintext","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Bev-low"},"content":"prog edit /p 1 /ad Pull Day /e /n \"Push-Up /w 30 /r 15 /s 3 /c 100 /e ...","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Bev-low"},"content":"### 6. Delete a Day from an Existing Programme","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Bev-low"},"content":"Delete a day from an existing programme.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Bev-low"},"content":"Command: `prog edit [/p PORG_INDEX] /xd DAY_INDEX`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"- **/p PROG_INDEX** _(optional)_: Specifies the Programme index. Defaults to the current active Programme if omitted.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/programme` – Either `/p` or `/programme` can be used to specify the programme index.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"- **/xd DAY_INDEX**: DAY_INDEX is the index of the day in the programme that the user wants to delete.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"TVageesan"},"content":"  **Alias**: `/removeDay` – Either `/xd` or `/removeDay` can be used to delete a day.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"Example: `prog edit /p 1 /xd 1`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"Deletes day 1 in programme 1","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Bev-low"},"content":"```plaintext","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Bev-low"},"content":"Deleted day:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Bev-low"},"content":"Cardio Day","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Bev-low"},"content":"### 7. Add a New Exercise in a Programme","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Bev-low"},"content":"Add an exercise to an existing day in an existing programme.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Bev-low"},"content":"**NOTE:** The exercise is added to an **EXISTING** day.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Bev-low"},"content":"Command: `prog edit [/p PORG_INDEX] /d DAY_INDEX /a /n EXERCISE_NAME /w WEIGHT /r REPS /s SETS /c CALORIES`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Bev-low"},"content":"- **/p PROG_INDEX** _(optional)_: Specifies the Programme index. Defaults to the current active Programme if omitted.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/programme` – Either `/p` or `/programme` can be used to specify the programme index.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Bev-low"},"content":"- **/d DAY_INDEX**: Index of day the user wants to add exercise to.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bev-low"},"content":"- **/a** : Flag to add exercise.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/addExercise` – Either `/ae` or `/addExercise` can be used to add an exercise.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Bev-low"},"content":"- **/n NAME**: Sets or updates the name of the exercise on update.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/name` – Either `/n` or `/name` can be used to specify the exercise name.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"TVageesan"},"content":"- **/w WEIGHT**: Sets the weight for the exercise on update.  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"TVageesan"},"content":"  **Alias**: `/weight` – Either `/w` or `/weight` can be used to specify weight.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"TVageesan"},"content":"- **/r REPS**: Sets the repetitions on update.  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"TVageesan"},"content":"  **Alias**: `/reps` – Either `/r` or `/reps` can be used to specify repetitions.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"TVageesan"},"content":"- **/s SETS**: Sets the number of sets on update.  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"TVageesan"},"content":"  **Alias**: `/sets` – Either `/s` or `/sets` can be used to specify sets.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"TVageesan"},"content":"- **/c CALORIES**: Sets the calories of the exercise on update.  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"TVageesan"},"content":"  **Alias**: `/calories` – Either `/c` or `/calories` can be used to specify the calorie count.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Bev-low"},"content":"Example: `prog edit /p 1 /d 1 /a /n Push-Up /w 30 /r 15 /s 3 /c 100`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Bev-low"},"content":"Add an exercise called \u0027Push Up\u0027 with a weight of 30, 15 reps, 3 sets, and 100 calories burned to Day 1 of Programme 1.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"TVageesan"},"content":"```plaintext","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Bev-low"},"content":"Created new exercise:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Bev-low"},"content":"Push-Up: 3 sets of 15 at 30 | Burnt 100 cals","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Bev-low"},"content":"### 8. Delete Exercise in a Programme","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Bev-low"},"content":"Delete an exercise from an existing day in an existing programme.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Bev-low"},"content":"**NOTE:** The exercise is deleted from an **EXISTING** day.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Bev-low"},"content":"Command: `prog edit [/p PORG_INDEX] /d DAY_INDEX /x EXERCISE_INDEX`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Bev-low"},"content":"- **/p PROG_INDEX** _(optional)_: Specifies the Programme index. Defaults to the current active Programme if omitted.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/programme` – Either `/p` or `/programme` can be used to specify the programme index.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Bev-low"},"content":"- **/d DAY_INDEX**: Index of day the user wants to delete an exercise from.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Bev-low"},"content":"- **/x EXERCISE_INDEX** : **Remove an Existing Exercise** from the specified day.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/removeExercise` – Either `/xe` or `/removeExercise` can be used to delete an exercise.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Bev-low"},"content":"Example: `prog edit /p 1 /d 1 /x 1`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Bev-low"},"content":"Delete the exercise at index 1 in Day 1 of Programme 1.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"TVageesan"},"content":"```plaintext","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Bev-low"},"content":"Deleted exercise:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Bev-low"},"content":"Push-Up: 3 sets of 15 at 30 | Burnt 100 cals","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Bev-low"},"content":"### 9. Update Existing Exercise in Programme","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Bev-low"},"content":"Update an exercise in an existing day of an existing programme.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Bev-low"},"content":"**NOTE:** The exercise to be updated exist in an **EXISTING** day.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Bev-low"},"content":"Command: `prog edit [/p PORG_INDEX] /d DAY_INDEX /x EXERCISE_INDEX [args]`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Bev-low"},"content":"- **/p PROG_INDEX** _(optional)_: Specifies the Programme index. Defaults to the current active Programme if omitted.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/programme` – Either `/p` or `/programme` can be used to specify the programme index.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Bev-low"},"content":"- **/d DAY_INDEX**: Index of day the user wants to edit an exercise from.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Bev-low"},"content":"- **/u EXERICSE_INDEX** : EXERCISE_INDEX is the index of exercise the user wants to edit.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Bev-low"},"content":"  **Alias**: `/updateExercise` – Either `/ue` or `/updateExercise` can be used to update an exercise.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Bev-low"},"content":"This Edit Command must have at least 1 of the arguments below.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Bev-low"},"content":"- **args**: These arguments set specific attributes for edit exercise actions:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Bev-low"},"content":"  - **/w WEIGHT**: Sets the weight for the exercise on update.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Bev-low"},"content":"    **Alias**: `/weight` – Either `/w` or `/weight` can be used to specify weight.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Bev-low"},"content":"  - **/r REPS**: Sets the repetitions on update.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Bev-low"},"content":"    **Alias**: `/reps` – Either `/r` or `/reps` can be used to specify repetitions.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Bev-low"},"content":"  - **/s SETS**: Sets the number of sets on update.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Bev-low"},"content":"    **Alias**: `/sets` – Either `/s` or `/sets` can be used to specify sets.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Bev-low"},"content":"  - **/n NAME**: Sets or updates the name of the exercise on update.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Bev-low"},"content":"    **Alias**: `/name` – Either `/n` or `/name` can be used to specify the exercise name.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Bev-low"},"content":"  - **/c CALORIES**: Sets the calories of the exercise on update.  ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Bev-low"},"content":"    **Alias**: `/calories` – Either `/c` or `/calories` can be used to specify the calorie count.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Bev-low"},"content":"Example: `prog edit /p 1 /d 1 /u 1 /w 30 /r 12`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Bev-low"},"content":"Update Exercise 1 on Day 1 of Programme 1 by setting the weight to 30 and reps to 12.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"TVageesan"},"content":"```plaintext","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Bev-low"},"content":"Updated exercise: Push-Up: 3 sets of 15 at 30 | Burnt 100 cals","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Bev-low"},"content":"### 10. Set Program as Active","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"andreusxcarvalho"},"content":"Sets given programme as the ‘active programme’, which other commands will default to if `programme_index` is not supplied.","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"TVageesan"},"content":"Command: `prog start PROGRAMME_INDEX`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"TVageesan"},"content":"Example: `prog start 1`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"TVageesan"},"content":"Started programme:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"TVageesan"},"content":"Starter","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"TVageesan"},"content":"Day 1: ONE","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"TVageesan"},"content":"1. Bench Press: 3 sets of 12 at 30 | Burnt 200 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"TVageesan"},"content":"2. Squat: 3 sets of 12 at 50 | Burnt 200 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"TVageesan"},"content":"Day 2: TWO","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"TVageesan"},"content":"1. Bicep Curl: 3 sets of 12 at 10 | Burnt 100 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Bev-low"},"content":"### 11. Log a Workout","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"TVageesan"},"content":"Log the successful completion of a workout for a given day.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"TVageesan"},"content":"Command: `prog log /p PROGRAMME_INDEX /d DAY_INDEX [/t DATE] `","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"TVageesan"},"content":"Parameters:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"TVageesan"},"content":"- `/t DATE`: date (in `dd-MM-yyyy` format) for when the workout was completed. Defaults to current day if not provided.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"TVageesan"},"content":"- `/p PROGRAMME_INDEX`: index of the programme that was completed.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"TVageesan"},"content":"- `/d DAY_INDEX`: index of the Day that was completed.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Bev-low"},"content":"Example: `prog log /p 1 /d 1 /t 12-12-2024`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"TVageesan"},"content":"Congrats! You\u0027ve successfully completed:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"TVageesan"},"content":"ONE","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"TVageesan"},"content":"1. Bench Press: 3 sets of 12 at 30 | Burnt 200 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"TVageesan"},"content":"2. Squat: 3 sets of 12 at 50 | Burnt 200 cals","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"TVageesan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Bev-low"},"content":"### 12. Add a Meal","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"TVageesan"},"content":"Adds a meal to the daily record of a specific date.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Atulteja"},"content":"Command: `meal add /n MEAL_NAME /c CALORIES /t DATE`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"TVageesan"},"content":"Parameters:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Atulteja"},"content":"- `/n MEAL_NAME`: Name of the meal.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Atulteja"},"content":"- `/c CALORIES`: Number of calories in the meal.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Atulteja"},"content":"- `/t DATE`: Date in the format `dd-MM-yyyy`.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Atulteja"},"content":"**Example**: `meal add /n Chicken_Breast /c 250 /t 30-10-2024`","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Atulteja"},"content":"Chicken Breast | 250kcal has been added to 30-10-2024.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Atulteja"},"content":"---","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Bev-low"},"content":"### 13. View Meals","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"TVageesan"},"content":"Displays all meals recorded for a specific date.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Bev-low"},"content":"Command: `meal view DATE`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"TVageesan"},"content":"Parameters:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Bev-low"},"content":"- `DATE`: Date in the format `dd-MM-yyyy`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Bev-low"},"content":"**Example**: `meal view 30-10-2024`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Atulteja"},"content":"Meals for 30-10-2024:","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Atulteja"},"content":"1. Chicken Breast | 250 kcal","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Atulteja"},"content":"2. Scrambled Eggs | 150 kcal","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"TVageesan"},"content":"---","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Bev-low"},"content":"### 14. Delete a Meal","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"TVageesan"},"content":"Deletes a meal from the daily record of a specific date.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"TVageesan"},"content":"Command: `meal delete /m MEAL_INDEX /t DATE`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"TVageesan"},"content":"Parameters:","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"TVageesan"},"content":"- `/m MEAL_INDEX`: Index of the meal to delete.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"TVageesan"},"content":"- `/t DATE`: Date in the format `dd-MM-yyyy`.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"TVageesan"},"content":"**Example**: `meal delete /m 1 /t 30-10-2024`","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"TVageesan"},"content":"Chicken Breast | 250kcal has been deleted from 30-10-2024","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"TVageesan"},"content":"```","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"TVageesan"},"content":"---","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Bev-low"},"content":"### 15. Add a Water Log","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Bev-low"},"content":"Adds a water log to the daily record of a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Bev-low"},"content":"Command: `water add /v WATER_VOLUME /t DATE`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Bev-low"},"content":"- `/v WATER_VOLUME `: Volume of Water. (floating number)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Bev-low"},"content":"- `/t DATE`: Date in the format `dd-MM-yyyy`.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Bev-low"},"content":"**Example**: `water add /v 200.2 /t 30-10-2024`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Bev-low"},"content":"200.2 liters of water has been added","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Bev-low"},"content":"### 16. View Water Logs","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Bev-low"},"content":"Displays all water logs recorded for a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Bev-low"},"content":"Command: `water view DATE`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Bev-low"},"content":"- `DATE`: Date in the format `dd-MM-yyyy`.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Bev-low"},"content":"**Example**: `water view 30-10-2024`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Bev-low"},"content":"Water intake for 30-10-2024:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Bev-low"},"content":"1: 100.0","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Bev-low"},"content":"2. 200.2","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Bev-low"},"content":"### 17. Delete a Water Log","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Bev-low"},"content":"Deletes a water log from the daily record of a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Bev-low"},"content":"Command: `water delete /w WATER_INDEX /t DATE`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Bev-low"},"content":"Parameters:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Bev-low"},"content":"- `/w WATER_INDEX`: Index of the water to delete.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Bev-low"},"content":"- `/t DATE`: Date in the format `dd-MM-yyyy`.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Bev-low"},"content":"**Example**: `water delete /w 1 /t 30-10-2024`","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Bev-low"},"content":"100.0 liters of water has been deleted","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Bev-low"},"content":"---","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Bev-low"},"content":"### 18. View All History","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Bev-low"},"content":"Displays a comprehensive record of workouts, meals, and water intake for each logged day.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"andreusxcarvalho"},"content":"Command: `history view`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Bev-low"},"content":"**Example**: `history view`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Bev-low"},"content":"Completed On: 30-10-2024","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Bev-low"},"content":"Day:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Bev-low"},"content":"ONE","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Bev-low"},"content":"1. Bench Press: 3 sets of 12 at 30 | Burnt 220 cals","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Bev-low"},"content":"2. Squat: 3 sets of 12 at 50 | Burnt 300 cals","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Bev-low"},"content":"Total Calories burnt: 520 kcal","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Bev-low"},"content":"Meals:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Bev-low"},"content":"1: pasta | 100kcal","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Bev-low"},"content":"Total Calories from Meals: 100 kcal","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Bev-low"},"content":"Water Intake:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Bev-low"},"content":"1: 100.0","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Bev-low"},"content":"Total Water Intake: 100.0 liters","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Bev-low"},"content":"Caloric Balance: -420 kcal","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Bev-low"},"content":"```","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Bev-low"},"content":"### 19. View Weekly Summary","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"andreusxcarvalho"},"content":"Displays a summary of workouts, meals, and water intake for the past week","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"andreusxcarvalho"},"content":"Command: `history wk`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"andreusxcarvalho"},"content":"**Example**: `history wk`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"andreusxcarvalho"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"andreusxcarvalho"},"content":"Your weekly workout summary: ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"andreusxcarvalho"},"content":"Empty Day","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"andreusxcarvalho"},"content":"Completed On: 30-10-2024","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"andreusxcarvalho"},"content":"ONE","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"andreusxcarvalho"},"content":"1. Bench Press: 3 sets of 12 at 30 | Burnt 200 cals","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"andreusxcarvalho"},"content":"2. Squat: 3 sets of 12 at 50 | Burnt 200 cals","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"andreusxcarvalho"},"content":"Completed On: 02-11-2024","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"andreusxcarvalho"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"Bev-low"},"content":"### 20. View PB for exercise","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"andreusxcarvalho"},"content":"Displays Personal Best for specified exercise","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"andreusxcarvalho"},"content":"Command: `history pb \u003cexercise_name\u003e`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"andreusxcarvalho"},"content":"**Example**: `history pb bench_press`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"andreusxcarvalho"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"andreusxcarvalho"},"content":"Personal best for bench press: Bench Press: 3 sets of 12 at 30","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"andreusxcarvalho"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"Bev-low"},"content":"### 21. View PBs for exercises ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"andreusxcarvalho"},"content":"Displays Personal Bests for all exercises","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"andreusxcarvalho"},"content":"Command: `history pb`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"andreusxcarvalho"},"content":"**Example**: `history pb`","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"andreusxcarvalho"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"andreusxcarvalho"},"content":"Personal bests for all exercises:","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"andreusxcarvalho"},"content":"Bench Press: Bench Press: 3 sets of 12 at 30 ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"andreusxcarvalho"},"content":"Squat: Squat: 3 sets of 12 at 50 ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"andreusxcarvalho"},"content":"Bicep Curl: Bicep Curl: 3 sets of 12 at 10 ","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"andreusxcarvalho"},"content":"```","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"andreusxcarvalho"},"content":"---","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"andreusxcarvalho"},"content":"## Command Summary","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"andreusxcarvalho"},"content":"| Command                                     | Description                                                                               | Format                                                                                             | Example                                                               |","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"Bev-low"},"content":"|---------------------------------------------|-------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"TVageesan"},"content":"| **Add Programme**                           | Creates a new workout Programme                                                           | `prog create PROG_NAME /d DAY_NAME /e /n EXERCISE_NAME /s SET /r REP /w WEIGHT /c CALORIES`        | `prog create Starter /d ONE /e /n Bench_Press /s 3 /r 12 /w 30 /c 100` |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"TVageesan"},"content":"| **View Programme**                          | Displays the detailed workout routine of a specific Programme                             | `prog view [INDEX]`                                                                                | `prog view 1`                                                         |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"TVageesan"},"content":"| **List Programmes**                         | Lists all workout Programmes with their index and name                                    | `prog list`                                                                                        | `prog list`                                                           |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"TVageesan"},"content":"| **Delete Programme**                        | Deletes a Programme by its index                                                          | `prog delete INDEX`                                                                                | `prog delete 1`                                                       |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"Bev-low"},"content":"| **Add a New Day to an Existing Programme**          | Add a new Day to an existing programme                                                    | `prog edit [/p PROG_INDEX] /ad DAY_NAME`                                                           | `prog edit /p 1 /ad \"Cardio Day\"`                                     |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"Bev-low"},"content":"| **Delete a Day from an Existing Programme** | Delete a day from an existing programme.                                                  | `prog edit [/p PORG_INDEX] /xd DAY_INDEX`                                                          | `prog edit /p 1 /xd 1\"`                                               |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"Bev-low"},"content":"| **Add a New Exercise in a Programme**       | Add an exercise to an existing day in an existing programme                               | `prog edit [/p PORG_INDEX] /d DAY_INDEX /a /n EXERCISE_NAME /w WEIGHT /r REPS /s SETS /c CALORIES` | `prog edit /p 1 /d 1 /a /n Push-Up /w 30 /r 15 /s 3 /c 100`           |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"Bev-low"},"content":"| **Delete Exercise in a Programme**          | Delete an exercise from an existing day in an existing programme                          | `prog edit [/p PORG_INDEX] /d DAY_INDEX /x EXERCISE_INDEX`                                         | `prog edit /p 1 /d 1 /x 1`                                            |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"Bev-low"},"content":"| **Update Existing Exercise in Programme**   | Update an exercise in an existing day of an existing programme                            | `prog edit [/p PORG_INDEX] /d DAY_INDEX /x EXERCISE_INDEX [args]`                                  | `prog edit /p 1 /d 1 /u 1 /w 30 /r 12`                                |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"TVageesan"},"content":"| **Set Active**                              | Sets a Programme as the active one                                                        | `prog start INDEX`                                                                                 | `prog start 1`                                                        |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"TVageesan"},"content":"| **Log Workout**                             | Logs a workout for a specific day                                                         | `prog log /p PROGRAMME_INDEX /d DAY_INDEX /t DATE`                                                 | `log /p 1 /d 1 /t 12/10/2024`                                         |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"Atulteja"},"content":"| **Add Meal**                                | Adds a meal to a daily record                                                             | `meal add /n MEAL_NAME /c CALORIES /t DATE`                                                        | `meal add /n Chicken_Breast /c 250 /t 30-10-2024`                     |","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"Bev-low"},"content":"| **View Meals**                              | Displays all meals for a specific date                                                    | `meal view /t DATE`                                                                                | `meal view 30-10-2024`                                                |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"TVageesan"},"content":"| **Delete Meal**                             | Deletes a meal from a daily record                                                        | `meal delete /m MEAL_INDEX /t DATE`                                                                | `meal delete /m 1 /t 30-10-2024`                                      |","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"Bev-low"},"content":"| **Add Water**                               | Adds a water to a daily record                                                            | `water add /n MEAL_NAME /c CALORIES /t DATE`                                                       | `water add /v 200.2 /t 30-10-2024`                                    |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"Bev-low"},"content":"| **View Water**                              | Displays all water for a specific date                                                    | `water view /t DATE`                                                                               | `water view 30-10-2024`                                               |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"Bev-low"},"content":"| **Delete Water**                            | Deletes a water from a daily record                                                       | `water delete /m MEAL_INDEX /t DATE`                                                               | `water delete /w 1 /t 30-10-2024`                                     |","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"Bev-low"},"content":"| **View History**                            | Displays a comprehensive record of workouts, meals, and water intake for each logged day. | `history view`                                                                                     | `history view`                                                        |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"andreusxcarvalho"},"content":"| **View Weekly Summary**                     | Displays a summary of workouts, meals, and water intake for the past week                 | `history wk`                                                                                       | `history wk`                                                          |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"andreusxcarvalho"},"content":"| **View PB for exercise**                    | Displays Personal Best for specified exercise                                             | `history pb \u003cexercise_name\u003e`                                                                       | `history pb squat`                                                    |","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"andreusxcarvalho"},"content":"| **View PBs for exercises**                  | Displays Personal Bests for all exercises                                                 | `history pb`                                                                                       | `history pb`                                                          |","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"TVageesan":195,"nirala-ts":4,"Atulteja":21,"Bev-low":216,"-":27,"andreusxcarvalho":98}},{"path":"docs/diagrams/addDayCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"participant \":CreateDayCommand\" as CreateDayCommand #cc88cc","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"participant \":ProgrammeList\" as ProgrammeList #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"participant \":Programme\" as Programme #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"-\u003e CreateDayCommand : execute()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"activate CreateDayCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"CreateDayCommand -\u003e ProgrammeList : getProgramme(programmeIndex)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"activate ProgrammeList","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"ProgrammeList --\u003e CreateDayCommand : selected Programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"deactivate ProgrammeList","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"CreateDayCommand -\u003e Programme : insertDay(createdDay)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"activate Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"Programme --\u003e CreateDayCommand :  inserted day","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"deactivate Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"\u003c-- CreateDayCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"deactivate CreateDayCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":25}},{"path":"docs/diagrams/addExerciseCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"participant \":CreateExerciseCommand\" as AddExerciseCommand #cc88cc","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"participant \":ProgrammeList\" as ProgrammeList #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"participant \":Programme\" as Programme #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"participant \":Day\" as Day #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"-\u003e AddExerciseCommand : execute()","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"activate AddExerciseCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e ProgrammeList : getProgramme(programmeIndex)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"activate ProgrammeList","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"ProgrammeList --\u003e AddExerciseCommand : selected Programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"deactivate ProgrammeList","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e Programme : getDay(dayIndex)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"activate Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"Programme --\u003e AddExerciseCommand : selected Day","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"deactivate Programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e Day: insertExercise(createdExercise)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"activate Day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"Day --\u003e AddExerciseCommand: inserted Exercise","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"deactivate Day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"\u003c-- AddExerciseCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"deactivate AddExerciseCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":29}},{"path":"docs/diagrams/addMealSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"@startuml","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"skinparam participant {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"    BackgroundColor #DFF6FF","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"    BorderColor #0096C7","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"    FontColor #023E8A","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"    FontStyle bold","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"skinparam sequence {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"    ActorBorderColor #F28482","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"    ActorBackgroundColor #F8AD9D","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"    LifeLineBorderColor #6D6875","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"    LifeLineBackgroundColor #B5838D","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    ParticipantBorderColor #457B9D","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    ParticipantBackgroundColor #CAF0F8","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    ArrowColor #023E8A","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    BoxBorderColor #495867","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    BoxBackgroundColor #B0C4DE","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"actor User","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"participant \"BuffBuddy\" as BB","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"participant \"UI\" as UI","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"participant \"Parser\" as Parser","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"participant \"AddMealCommand\" as AddCmd","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"participant \"History\" as History","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"participant \"DailyRecord\" as DailyRec","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"participant \"MealList\" as MealList","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"participant \"Meal\" as Meal","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"User -\u003e UI: Enter \"meal add /n [mealName] /c [calories]\"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"activate UI","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"BB -\u003e UI: Read command","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"activate BB","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"UI --\u003e BB: return command","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"BB -\u003e Parser: Parse command","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"activate Parser","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"Parser -\u003e AddCmd: Create AddMealCommand","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"deactivate Parser","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"activate AddCmd","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"AddCmd -\u003e History: Get DailyRecord by date","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"activate History","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"alt DailyRecord exists","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"  History --\u003e AddCmd: Return existing DailyRecord","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"else No DailyRecord exists","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"  History -\u003e DailyRec: Create new DailyRecord","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"  activate DailyRec","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"  DailyRec --\u003e History: Add new DailyRecord to history","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"  deactivate DailyRec","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"  History --\u003e AddCmd: Return new DailyRecord","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"end","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"deactivate History","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"AddCmd -\u003e DailyRec: Check if MealList exists","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"activate DailyRec","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"alt MealList exists","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"  DailyRec -\u003e MealList: Add meal to existing MealList","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"  activate MealList","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"else MealList does not exist","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"  DailyRec -\u003e MealList: Create new MealList","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"  activate MealList","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"  MealList -\u003e MealList: Add meal to new MealList","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"end","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"deactivate MealList","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"DailyRec --\u003e AddCmd: Return added meal","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"deactivate DailyRec","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"AddCmd --\u003e BB: Return CommandResult","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"deactivate AddCmd","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"destroy AddCmd","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"BB -\u003e UI: Show CommandResult","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"deactivate BB","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"UI -\u003e User: Display success message","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"deactivate UI","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"@enduml","lastModifiedDate":"2024-11-03","isFullCredit":false}],"authorContributionMap":{"Atulteja":80}},{"path":"docs/diagrams/commandSummary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"abstract class Command {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"    + equals(other: Object): boolean","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"class ExitCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"class InvalidCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"class CommandResult {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    - message: String","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    + CommandResult(message: String)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    + getMessage(): String","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    + equals(other: Object): boolean","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"abstract class ProgrammeCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    # programmeIndex: int","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    # dayIndex: int","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    + equals(other: Object): boolean","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"abstract class EditCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    # exerciseIndex: int","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"abstract class WaterCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    # date: LocalDate","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"abstract class MealCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"    # date: LocalDate","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"abstract class HistoryCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"Command \u003c|-- ProgrammeCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"Command \u003c|-- ExitCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"Command \u003c|-- InvalidCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"Command \u003c|-- WaterCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"Command \u003c|-- MealCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"Command \u003c|-- HistoryCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- EditCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"Command ..\u003e CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"TVageesan":52}},{"path":"docs/diagrams/editCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"actor User","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"participant \":Ui\" as Ui #88cc88","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"participant \":BuffBuddy\" as BuffBuddy #88cc88","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"participant \":Parser\" as Parser #88bbff","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"participant \":CommandFactory\" as CommandFactory #88bbff","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"participant \":ProgCommandFactory\" as ProgCommandFactory #88bbff","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"participant \":EditCommand\" as Command #cc88cc","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"participant \":Model\" as Model #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"participant \":CommandResult\" as CommandResult #cc88cc","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"User -\u003e Ui : \"prog edit...\"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"activate Ui","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"BuffBuddy -\u003e Ui: readCommand()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"activate BuffBuddy","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"Ui --\u003e BuffBuddy : \"prog edit...\"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"BuffBuddy -\u003e Parser : parse(\"prog edit...\")","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"activate Parser","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"Parser -\u003e CommandFactory : createCommand(\"prog\", \"edit...\")","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"deactivate Parser","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"activate CommandFactory","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"CommandFactory -\u003e ProgCommandFactory : parse(\"edit\",arguments)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"deactivate CommandFactory","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"activate ProgCommandFactory","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"ProgCommandFactory -\u003e Command : createEditCommand(arguments)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"deactivate ProgCommandFactory","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"activate Command","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"BuffBuddy \u003c-- Command","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"BuffBuddy -\u003e Command : execute()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"Command -\u003e Model : interact with Model","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"activate Model","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"Command \u003c-- Model: returned Data","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"deactivate Model","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"Command -\u003e CommandResult: new CommandResult(message)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"deactivate Command","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"activate CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"BuffBuddy \u003c-- CommandResult : return CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"deactivate CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"BuffBuddy -\u003e Ui : showMessage()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"deactivate BuffBuddy","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"User \u003c-- Ui","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"deactivate Ui","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":61}},{"path":"docs/diagrams/editCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"start","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":":User executes command;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"if (command type) then (prog edit)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"  if (subcommand type) then (edit day)","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"    :Execute day edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"  else (edit exercise)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    :Execute exercise edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"  endif","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"  :Retrieve updated model;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"  :Create CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"endif","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":":Return result to User;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"stop","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":20}},{"path":"docs/diagrams/editCommandSummary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"    class EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"        \u003c\u003cabstract\u003e\u003e","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"        #exerciseIndex: int","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"        +EditProgrammeCommand(programmeIndex: int, dayIndex: int, exerciseIndex: int)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"        +EditProgrammeCommand(programmeIndex: int, dayIndex: int)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"        +EditProgrammeCommand(programmeIndex: int)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"        +execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"    Fclass CreateDayCommand {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"        # createdDay: Day","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"        + CreateDayCommand(programmeIndex: int, createdDay: Day)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"        +execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    class CreateExerciseCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"        # createdExercise: Exercise","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"        + CreateExerciseCommand(programmeIndex: int, dayIndex: int, createdExercise: Exercise)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"        + execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    class DeleteDayCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"        + DeleteDayCommand(programmeIndex: int, dayIndex: int)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"        + execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    class DeleteExerciseCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        + DeleteExerciseCommand(programmeIndex: int, dayIndex: int, exerciseIndex: int)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"        + execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    class EditExerciseCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        # update: ExerciseUpdate","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        + EditExerciseCommand(programmeIndex: int, dayIndex: int, exerciseIndex: int, update: ExerciseUpdate)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        + execute(programmes: ProgrammeList): CommandResult","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    EditProgrammeCommand \u003c|--- CreateDayCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    EditProgrammeCommand \u003c|--- CreateExerciseCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"    EditProgrammeCommand \u003c|--- DeleteDayCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    EditProgrammeCommand \u003c|--- DeleteExerciseCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"    EditProgrammeCommand \u003c|--- EditExerciseCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"TVageesan":40,"andreusxcarvalho":1}},{"path":"docs/diagrams/editExerciseCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"participant \":EditExerciseCommand\" as AddExerciseCommand #cc88cc","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"participant \":ProgrammeList\" as ProgrammeList #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"participant \":Programme\" as Programme #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"participant \":Day\" as Day #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"participant \":Exercise\" as Exercise #ffbb77","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"-\u003e AddExerciseCommand : execute()","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"activate AddExerciseCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e ProgrammeList : getProgramme(programmeIndex)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"activate ProgrammeList","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"ProgrammeList --\u003e AddExerciseCommand : selected Programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"deactivate ProgrammeList","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e Programme : getDay(dayIndex)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"activate Programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"Programme --\u003e AddExerciseCommand : selected Day","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"deactivate Programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e Day: getExercise(exerciseIndex)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"activate Day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"Day --\u003e AddExerciseCommand: selected Exercise","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"deactivate Day","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand -\u003e Exercise: updateExercise(update)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"activate Exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"AddExerciseCommand \u003c-- Exercise: updated Exercise","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"deactivate Exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"\u003c-- AddExerciseCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"deactivate AddExerciseCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":35}},{"path":"docs/diagrams/historyCommandSummary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"abstract class HistoryCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"class WeeklySummaryCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"class ViewHistoryCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"    - date: LocalDate","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"HistoryCommand \u003c|-- WeeklySummaryCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"HistoryCommand \u003c|-- ViewHistoryCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"TVageesan":19}},{"path":"docs/diagrams/mealAndMealListClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"@startuml","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"title Meal and MealList Class Diagram","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"class Meal {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"    - calories : int","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"    - name : String","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"    + Meal(String name, int calories)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"    + getCalories() : int","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"    + getName() : String","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"class MealList {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"    - meals : ArrayList\u003cMeal\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    + MealList() : void","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    + isEmpty() : boolean","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    + getSize() : int","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    + addMeal(Meal meal) : void","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    + deleteMeal(int index) : Meal","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    + getMeals() : ArrayList\u003cMeal\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"MealList \"1\" *-- \"0..*\" Meal : contains","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"@enduml","lastModifiedDate":"2024-11-03","isFullCredit":false}],"authorContributionMap":{"Atulteja":24}},{"path":"docs/diagrams/mealCommandSummary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"abstract class MealCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"    # date: LocalDate","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"class AddMealCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"    - mealName: String","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"    - calories: int","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"class DeleteMealCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    - indexMealToDelete: int","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"class ViewMealCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"MealCommand \u003c|-- AddMealCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"MealCommand \u003c|-- DeleteMealCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"MealCommand \u003c|-- ViewMealCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"TVageesan":26}},{"path":"docs/diagrams/programmeCommandSummary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"abstract class ProgrammeCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"    # programmeIndex: int","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"    # dayIndex: int","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"    + equals(other: Object): boolean","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"class CreateProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    + programmeName: String","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"    + programmeContents: ArrayList\u003cDay\u003e","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"class DeleteProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"class ViewProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"class StartProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"class LogProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    # date: LocalDate","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"class ListProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    + execute(programmes: ProgrammeList, history: History): CommandResult","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- CreateProgrammeCommand","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- DeleteProgrammeCommand","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- ViewProgrammeCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- StartProgrammeCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- LogProgrammeCommand","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"ProgrammeCommand \u003c|-- ListProgrammeCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"TVageesan":43}},{"path":"docs/diagrams/waterClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"@startuml","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"title Meal and MealList Class Diagram","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"class Water {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"    - waterList : ArrayList\u003cFloat\u003e","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"    + Water(): void","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"    + isEmpty() : boolean","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"    + addWater(float water) : void","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"    + deleteWater(int index) : float","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"    + getWaterList() : ArrayList\u003cFloat\u003e","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"@enduml","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Atulteja":13}},{"path":"docs/diagrams/waterCommandSummary.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"@startuml","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"abstract class WaterCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"    # date: LocalDate","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"class AddWaterCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"    - amount: int","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"class DeleteWaterCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    - waterIndex: int","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"class ViewWaterCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    + execute(ProgrammeList, History): CommandResult","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"WaterCommand \u003c|-- AddWaterCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"WaterCommand \u003c|-- DeleteWaterCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"WaterCommand \u003c|-- ViewWaterCommand","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"@enduml","lastModifiedDate":"2024-11-02","isFullCredit":false}],"authorContributionMap":{"TVageesan":26}},{"path":"docs/team/Atulteja.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"# Project Portfolio: Atul Teja Vellampalli","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"## Project: BuffBuddy","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"BuffBuddy is a workout and meal tracker that tracks your programmes, workouts, meals and water intake alongside tracking your calories and personal bests. The user interacts with it using a CLI. ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"## Summary of Contributions","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"### Code Contributed","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"- **Code Link**: [Click here to view my code on the tP Code Dashboard](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003dAtulteja\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-09-20\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dAtulteja\u0026tabRepo\u003dAY2425S1-CS2113-W10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"- **Meals Intake features**: Designed and wrote the code to add, delete and view meals. ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    - **What it does**: This feature allows the user to add, delete or view meals to their daily record for that day. They are also able to add, delete and view meals from previous days. ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    - **Justification**: The meals futures is essential in tracking ones calorie intake so that they can visualise the amount of food they are consuming to make changes to their diet to better reach their goals. ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    - **Highlights**: This feature allows users to easily add, view, and delete meals for the current and previous days, supporting flexible and comprehensive meal tracking. Robust error handling ensures that all entries are complete and accurate, enhancing usability with clear prompts and messages. The meal tracking seamlessly integrates with daily records, giving users a holistic view of their dietary habits alongside other tracked health metrics. Efficient data handling ensures quick access to meal history without performance issues.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"- **Program Feature classes**: Designed and wrote the classes handling Program","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"- Added/edited the following sections:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    - **Added documentation for meal related features**: Description of the section or feature.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    - **Section 2**: Another section contributed to, with any additional context if needed.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"- **Sections Contributed**: Addmeal feature","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"- **UML Diagrams**:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    - **Meal and MealList class diagram**: Description of the diagram or any updates made.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    - **Addmeal activity diagram**: Additional diagrams contributed, if any.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    - **Addmeal sequence diagram**: Additional diagrams contributed, if any.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"- Participated in team meetings.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"- Assisted with [mention any collaborative tasks, like integrating code from different features or team-based debugging sessions].","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"- **Pull Request Reviews**:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"- ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"### Contributions Beyond the Project Team","lastModifiedDate":"2024-11-03","isFullCredit":false}],"authorContributionMap":{"Atulteja":46}},{"path":"docs/team/TVageesan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"# Project Portfolio: Thiru Vageesan","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"## Project: BuffBuddy","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"BuffBuddy is a fitness tracker that tracks your programmes, workouts, meals and water intake. The user interacts wtih","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"## Summary of Contributions","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"### Code Contributed","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"- **Code Link**: [Click here to view my code on the tP Code Dashboard](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003dTVageesan\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-09-20\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBev-low\u0026tabRepo\u003dAY2425S1-CS2113-W10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"- Implemented the `BuffBuddy` class which serves as the main entry point for the application. This class initializes the UI, parser, storage, programme list, and history, and contains the main application loop.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"- Implemented the `Edit Programme` epic feature, which allows the user to edit the details of a programme.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"- Implemented all `ProgrammeCommand` classes, which allows the user to add, delete and view programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"- Implemented the `Delete Workout Log` feature, which allows the user to delete a workout log.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"- Added/edited the following sections:","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"  - **Added documentation for water related features**: Description of the section or feature.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"  - **Section 2**: Another section contributed to, with any additional context if needed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"- **Sections Contributed**: Command component, feature documentation for `Edit Programme`","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"- **UML Diagrams**:","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"  - **Command Class** as well as all subclasses","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"  - **Edit Command** sequence diagrams, activity diagrams","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"- Participated in team meetings.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"- Assisted with planning of milestone features and adjusting issues according to time constraints.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"- **Pull Request Reviews**:","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"  - [PR #71 - HistoryTest](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/71)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"  - [PR #150 - Added MealCommandFactory and ViewMealCommand classes](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/150)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"  - [PR #23 - Update Storage Class, toJson/fromJson Methods](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/23)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"  - [PR #139 - Weeklysummary and personalbests features](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/139)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"  - [PR #159 - Fix History and Logging Issue](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/159)","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"- Mentored team members by providing code feedback and debugging assistance.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"- Reviewed code consistently such that the team adhered to good design principles and coding standards.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"- Suggested \u0026 helped plan larger refactors such as the creation of `FlagParser` or `FileManager` classes","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"### Contributions Beyond the Project Team","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"TVageesan":53}},{"path":"docs/team/bev-low.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"# Project Portfolio: Low Beverly","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"## Project: BuffBuddy","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"BuffBuddy is a fitness tracker that tracks your programmes, workouts, meals and water intake. The user interacts wtih","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"it using a CLI, and it has a GUI created with JavaFX. It is written in Java. ","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"## Summary of Contributions","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"### Code Contributed","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"- **Code Link**: [Click here to view my code on the tP Code Dashboard](https://nus-cs2113-ay2425s1.github.io/tp-dashboard/?search\u003dbev-low\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2024-09-20\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dBev-low\u0026tabRepo\u003dAY2425S1-CS2113-W10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"- **Save/Load Feature**: Designed and wrote the code to save and load files into JSON Objects using the Gson Library.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"    - **What it does**: This feature allows the application to save and load data seamlessly, storing it in JSON format to ensure data persistence between sessions. The feature uses the Gson library to serialize and deserialize data into JSON objects, enabling a structured and readable file format.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"    - **Justification**: The save/load feature is essential for users to maintain their progress and data across sessions, making the application more reliable and user-friendly. Without this feature, users would risk losing their data upon closing the application.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    - **Highlights**: This feature required careful design and implementation to integrate with the application\u0027s data model. Converting complex data into JSON format required precise management of data structures and file handling to ensure accuracy and consistency. The implementation also included error handling to manage file I/O exceptions and ensure robust file-saving capabilities.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    - **Credits**: The Gson library was used extensively to handle JSON serialization and deserialization, making it easier to manage structured data within the application.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"- **Water Intake Features**: Brief description of additional features or optimizations you contributed.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"### Contributions to the User Guide (UG)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"- Added/edited the following sections:","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"    - **Added documentation for water related features**: Description of the section or feature.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    - **Section 2**: Another section contributed to, with any additional context if needed.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"### Contributions to the Developer Guide (DG)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"- **Sections Contributed**: Storage component, Save/Load implementation, Daily Record Class","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"- **UML Diagrams**:","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    - **Storage Class**: Description of the diagram or any updates made.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"    - **FileManager Class**: Additional diagrams contributed, if any.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"    - **DailyRecord Class**: Additional diagrams contributed, if any.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    - **Save/Load Feature**: Additional diagrams contributed, if any.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"### Contributions to Team-Based Tasks","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"- Participated in team meetings.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"- Assisted with [mention any collaborative tasks, like integrating code from different features or team-based debugging sessions].","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"- **Pull Request Reviews**:","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    - [PR #178 - Add documentation and testing for edit programme](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/178)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    - [PR #165 - Add delete log functionality](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/165)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    - [PR #164 - Add calorie information to Exercise objects](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/164)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"    - [PR #162 - Refactor EditCommand](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/162)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"    - [PR #151 - Added WaterCommandFactory and ViewWaterCommand classes](https://github.com/AY2425S1-CS2113-W10-3/tp/pull/151)","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"- Mentored team members by providing code feedback and debugging assistance.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"### Contributions Beyond the Project Team","lastModifiedDate":"2024-11-01","isFullCredit":false}],"authorContributionMap":{"Bev-low":52}},{"path":"src/main/java/BuffBuddy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"import command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import storage.Storage;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import parser.Parser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import ui.Ui;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"public class BuffBuddy {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"./data/data.json\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    private final Ui ui;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    private final History history;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    private final ProgrammeList programmes;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    private final Storage storage;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    private final Parser parser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private boolean isRunning;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    public BuffBuddy(String filePath) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        programmes \u003d storage.loadProgrammeList();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"        history \u003d storage.loadHistory();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        isRunning \u003d true;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        new BuffBuddy(DEFAULT_FILE_PATH).run();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    public void run() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        while (isRunning) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"            handleCommand();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        ui.showFarewell();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        storage.saveData(programmes, history);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"    private void handleCommand() {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"            Command command \u003d parser.parse(fullCommand);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"            CommandResult result \u003d command.execute(programmes, history);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"            ui.showMessage(result);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"            if (command instanceof ExitCommand) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"                isRunning \u003d false;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"            ui.showMessage(e);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":63}},{"path":"src/main/java/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"//@@author TVageesan","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":" * Represents an abstract command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"public abstract class Command {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"     * Constructs a Command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"    public Command(){}","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"     * Executes the command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"     * @param programmes The list of programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"     * @param history The history of commands executed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    public abstract CommandResult execute(ProgrammeList programmes, History history);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"     * Checks if this Command is equal to another object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     * @return true if this Command is equal to the other object, false otherwise.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        boolean isSameObject \u003d (this \u003d\u003d other);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        boolean isSameClass \u003d (getClass() !\u003d other.getClass());","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        return (isSameObject || isSameClass);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"TVageesan":36}},{"path":"src/main/java/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"//@@author andreusxcarvalho","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.Objects;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"public class CommandResult {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"    private final String message;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"     * Constructs a CommandResult with the specified message.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param message The message to be included in the command result.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult(String message) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"     * Returns the message of the command result.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return The message of the command result.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"    public String getMessage() {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"        return message;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"     * Checks if this CommandResult is equal to another object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return true if this CommandResult is equal to the other object, false otherwise.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andreusxcarvalho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andreusxcarvalho"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"            return true;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andreusxcarvalho"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andreusxcarvalho"},"content":"            return false;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"andreusxcarvalho"},"content":"        CommandResult that \u003d (CommandResult) other;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"andreusxcarvalho"},"content":"        return message.equals(that.message);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andreusxcarvalho"},"content":"    public int hashCode() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"andreusxcarvalho"},"content":"        return Objects.hash(message);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":53}},{"path":"src/main/java/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"//@@author andreusxcarvalho","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":" * Represents the command to exit the application.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"    private final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"     * Executes the exit command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param programmes The list of programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param history The history of commands executed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"        logger.log(Level.INFO, \"ExitCommand executed.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(\"Exiting BuffBuddy...\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":28}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"//@@author andreusxcarvalho","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":" * Represents a command that is invalid.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    private final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"     * Executes the invalid command.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param programmes The list of programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param history The history of commands executed.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"        logger.log(Level.INFO, \"InvalidCommand executed successfully.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(\"Invalid command.\");","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":27}},{"path":"src/main/java/command/history/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command.history;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.Command;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":" * Represents a command to show the full history or perform history-related operations.","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList pList, History history) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"        // Ensure history is available","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"        if (history.getHistory().isEmpty()) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"            return new CommandResult(\"No history available.\");","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"        // Display the entire history","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(history.toString());","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":28}},{"path":"src/main/java/command/history/ListPersonalBestsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command.history;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.Command;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":" * Command to list personal bests for all exercises.","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"public class ListPersonalBestsCommand extends Command {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"pb\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList pList, History history) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"        // Directly retrieve the formatted personal bests message from History","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(history.getFormattedPersonalBests());","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":21}},{"path":"src/main/java/command/history/ViewPersonalBestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command.history;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.Command;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"public class ViewPersonalBestCommand extends Command {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"pb\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"    private final String exerciseName;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"    public ViewPersonalBestCommand(String exerciseName) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"        this.exerciseName \u003d exerciseName;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList pList, History history) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"        // If an exercise name is specified, get personal best for that exercise","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"        if (exerciseName !\u003d null \u0026\u0026 !exerciseName.isEmpty()) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"            String personalBest \u003d history.getPersonalBestForExercise(exerciseName);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"            return new CommandResult(personalBest);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"        // If no specific exercise is specified, display all personal bests","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"        String allPersonalBests \u003d history.getFormattedPersonalBests();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"        if (allPersonalBests.isEmpty()) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"            return new CommandResult(\"Please specify an exercise to view its personal best.\");","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(allPersonalBests);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":35}},{"path":"src/main/java/command/history/WeeklySummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package command.history;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.Command;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"public class WeeklySummaryCommand extends Command {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"wk\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList programmes, History history) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"        // Retrieve the weekly summary from the History class","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"        String weeklySummary \u003d history.getWeeklyWorkoutSummary();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(\"Your weekly workout summary: \\n\" + weeklySummary);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":19}},{"path":"src/main/java/command/meals/AddMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * Represents a command to add a meal to a specific date\u0027s daily record.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"public class AddMealCommand extends MealCommand {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(AddMealCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private final Meal mealToAdd;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * Constructs an AddMealCommand with the specified meal and date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @param meal the meal to add to the daily record","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * @param date the date on which the meal should be added","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the meal is null","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public AddMealCommand(Meal meal, LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        super(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        assert meal !\u003d null : \"Meal cannot be null\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        this.mealToAdd \u003d meal;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"AddMealCommand created with meal: {0} for date: {1}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"                new Object[]{meal, date});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"     * Executes the AddMealCommand, adding the specified meal to the daily record for the given date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"     * @param history the history containing daily records where the meal will be added","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"     * @return a CommandResult indicating the success of the operation","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the daily record for the specified date is not found","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    public CommandResult execute(History history) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        assert dailyRecord !\u003d null : \"Daily record not found\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        dailyRecord.addMealToRecord(mealToAdd);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Meal added: {0}\", mealToAdd);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        return new CommandResult(mealToAdd.toString() + \" has been added\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"     * Checks if this AddMealCommand is equal to another object.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"     * Two AddMealCommand objects are considered equal if they have the same meal and date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"     * @param o the object to compare with","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"     * @return true if the specified object is equal to this AddMealCommand, false otherwise","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        if (!(o instanceof AddMealCommand that)) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        return Objects.equals(mealToAdd, that.mealToAdd) \u0026\u0026","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"                Objects.equals(date, that.date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"     * Returns the hash code for AddMealCommand.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"     * The hash code is based on the meal and date fields.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"     * @return the hash code value for this AddMealCommand","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(mealToAdd, date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Atulteja":83}},{"path":"src/main/java/command/meals/DeleteMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * Represents a command to delete a meal from a specific date\u0027s daily record.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"public class DeleteMealCommand extends MealCommand {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteMealCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private final int indexMealToDelete;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * Constructs a DeleteMealCommand with the specified meal index and date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the meal to delete from the daily record","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * @param date  the date from which the meal should be deleted","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the index is negative","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    public DeleteMealCommand(int index, LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        super(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        assert index \u003e\u003d 0 : \"Index to delete cannot be negative\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        this.indexMealToDelete \u003d index;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"DeleteMealCommand created for index: {0} on date: {1}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"                new Object[]{index, date});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"     * Executes the DeleteMealCommand, deleting the specified meal from the daily record for the given date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"     * @param history the history containing daily records where the meal will be deleted","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"     * @return a CommandResult indicating the success of the operation","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the daily record for the specified date is not found","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    public CommandResult execute(History history) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        assert dailyRecord !\u003d null : \"Daily record not found\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        Meal deletedMeal \u003d dailyRecord.deleteMealFromRecord(indexMealToDelete);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        return new CommandResult(deletedMeal + \" has been deleted\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        if (!(o instanceof DeleteMealCommand)) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        DeleteMealCommand that \u003d (DeleteMealCommand) o;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        return indexMealToDelete \u003d\u003d that.indexMealToDelete \u0026\u0026","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"                Objects.equals(date, that.date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(indexMealToDelete, date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Atulteja":73}},{"path":"src/main/java/command/meals/MealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.Command;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * Represents an abstract command related to meals, allowing various meal-related operations.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * This class serves as a base for specific meal commands like adding or deleting a meal.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"public abstract class MealCommand extends Command {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(MealCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    protected LocalDate date;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * Constructs a MealCommand with the specified date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * @param date the date associated with this command","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the date is null","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public MealCommand(LocalDate date) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"MealCommand initialized with date: {0}\", date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"     * Executes the meal-related command using the provided history.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"     * Subclasses should implement this method to perform their specific command logic.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"     * @param history the history containing daily records where the command will be executed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     * @return a CommandResult indicating the success or outcome of the operation","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"    public abstract CommandResult execute(History history);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"     * Executes the meal-related command using both the provided programme list and history.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"     * This implementation only uses the history for meal commands.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"     * @param programmes the programme list, currently unused in this implementation","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"     * @param history the history containing daily records where the command will be executed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     * @return a CommandResult indicating the success or outcome of the operation","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"    public CommandResult execute(ProgrammeList programmes, History history) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Executing MealCommand with ProgrammeList and History.\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        return execute(history);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Atulteja":57}},{"path":"src/main/java/command/meals/ViewMealCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import common.Utils;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import meal.MealList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * Represents a command to view meals for a specific date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"public class ViewMealCommand extends MealCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(ViewMealCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * Constructs a ViewMealCommand for the specified date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @param date the date for which meals should be viewed","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    public ViewMealCommand(LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"        super(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"ViewMealCommand created for date: {0}\", date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"     * Executes the ViewMealCommand, retrieving the meals from the daily record for the specified date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"     * @param history the history containing daily records where the meal list will be retrieved","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"     * @return a CommandResult containing a string representation of the meals for the given date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the daily record for the specified date is not found","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    public CommandResult execute(History history) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Executing ViewMealCommand for date: {0}\", date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        String formattedDate \u003d Utils.formatDate(date);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        assert dailyRecord !\u003d null : \"Daily record not found\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        MealList meals \u003d dailyRecord.getMealListFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Retrieved MealList for date {0}: {1}\", new Object[]{date, meals});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        return new CommandResult(\"Meals for \" + formattedDate +  \": \\n\\n\" + meals.toString());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        if (!(o instanceof ViewMealCommand that)) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        return Objects.equals(date, that.date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Atulteja":67}},{"path":"src/main/java/command/programme/CreateProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" * Represents a command to create a new programme in ProgrammeList.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"public class CreateProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"New programme created: %n%s\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    private final String programmeName;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private final ArrayList\u003cDay\u003e programmeContents;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"     * Constructs a CreateProgrammeCommand with the specified programme name and contents.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"     * @param programmeName The name of the programme to be created.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     * @param programmeContents The list of days that make up the programme.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    public CreateProgrammeCommand(String programmeName, ArrayList\u003cDay\u003e programmeContents) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"        assert programmeName !\u003d null \u0026\u0026 !programmeName.isEmpty() : \"Programme name must not be null\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        assert programmeContents !\u003d null : \"Programme contents must not be null\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        this.programmeName \u003d programmeName;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        this.programmeContents \u003d programmeContents;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to create a new programme and adds it to the programme list.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"     * @param programmes The list of programmes to which the new programme will be added.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"     * @param history The history object to record the command execution.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"     * @return A CommandResult object containing the result of the command execution.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"Programme list must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        Programme created \u003d programmes.insertProgramme(programmeName, programmeContents);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        assert created !\u003d null : \"programme must be created\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"CreateCommand executed successfully.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, created);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-21","isFullCredit":false}],"authorContributionMap":{"TVageesan":54}},{"path":"src/main/java/command/programme/DeleteLogProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" * Command to delete a workout log for a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":" * This class encapsulates the functionality to remove a workout log identified by its","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":" * date from the history.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"public class DeleteLogProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"unlog\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Deleted:%n%s\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     * Constructs a DeleteLogProgrammeCommand with the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     * @param date the date of the workout log to be deleted","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    public DeleteLogProgrammeCommand(LocalDate date){","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        assert date !\u003d null : \"Date must not be null\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"DeleteLogCommand created with date: {0}\", date);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to delete the workout log for the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList containing the programmes (not used in this command)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     * @param history the History object containing the workout logs","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult containing a success message","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        assert history !\u003d null : \"History must not be null\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"        assert dailyRecord !\u003d null : \"DailyRecord must not be null\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"        Day deleted \u003d dailyRecord.deleteDayFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"DeleteLogCommand executed successfully.\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        String result \u003d  String.format(SUCCESS_MESSAGE_FORMAT, deleted);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false}],"authorContributionMap":{"TVageesan":58}},{"path":"src/main/java/command/programme/DeleteProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":" * Represents a command to delete a programme from the ProgrammeList.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"public class DeleteProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Deleted:%n%s\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"     * Constructs a DeleteProgrammeCommand with the specified programme index.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex The index of the programme to be deleted.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    public DeleteProgrammeCommand(int programmeIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"DeleteCommand created with programme index: {0}\", programmeIndex);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to delete a programme from the programme list.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"     * @param programmes The list of programmes from which the programme will be deleted.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"     * @param history The history object to record the command execution.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"     * @return A CommandResult object containing the result of the command execution.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"Programme list must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        Programme programme \u003d programmes.deleteProgram(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"DeleteCommand executed successfully.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, programme);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"TVageesan":46}},{"path":"src/main/java/command/programme/ListProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"public class ListProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Listing programmes: %n%s\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"    public ListProgrammeCommand() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"ListCommand created.\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"Programme list must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"ListCommand executed successfully.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, programmes);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"TVageesan":26}},{"path":"src/main/java/command/programme/LogProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"package command.programme;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.Day;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":" * Represents a command to log a specific day of a programme into the history.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"public class LogProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"log\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"     * Constructs a LogProgrammeCommand with the specified programme index, day index, and date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param programmeIndex The index of the programme.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param dayIndex The index of the day.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param date The date to log the day into the history.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"    public LogProgrammeCommand(int programmeIndex, int dayIndex, LocalDate date){","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andreusxcarvalho"},"content":"        super(programmeIndex, dayIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"        assert dayIndex \u003e\u003d 0 : \"Day index must be non-negative\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"        assert date !\u003d null : \"Date must not be null\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andreusxcarvalho"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andreusxcarvalho"},"content":"        logger.log(Level.INFO,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andreusxcarvalho"},"content":"                \"LogCommand created with progIndex: {0}, dayIndex: {1}, date: {2}\",","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andreusxcarvalho"},"content":"                new Object[]{programmeIndex, dayIndex, date}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andreusxcarvalho"},"content":"     * Executes the command to log a specific day of a programme into the history.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param programmes The list of programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param history The history object to record the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return A CommandResult object containing the result of the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"andreusxcarvalho"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"andreusxcarvalho"},"content":"        logger.log(","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andreusxcarvalho"},"content":"                Level.INFO,","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"andreusxcarvalho"},"content":"                \"Executing LogCommand with progIndex: {0}, dayIndex: {1}, date: {2}\",","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"andreusxcarvalho"},"content":"                new Object[]{programmeIndex, dayIndex, date}","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"andreusxcarvalho"},"content":"        );","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"andreusxcarvalho"},"content":"        assert programmes !\u003d null : \"ProgrammeList must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"andreusxcarvalho"},"content":"        assert history !\u003d null : \"History must not be null\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"andreusxcarvalho"},"content":"        Programme selectedProgramme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"andreusxcarvalho"},"content":"        Day completed \u003d selectedProgramme.getDay(dayIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andreusxcarvalho"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andreusxcarvalho"},"content":"        dailyRecord.logDayToRecord(completed);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andreusxcarvalho"},"content":"        history.logRecord(date, dailyRecord);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andreusxcarvalho"},"content":"        logger.log(Level.INFO, \"LogCommand executed successfully for day: {0}\", completed);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"andreusxcarvalho"},"content":"        String result \u003d  String.format(\"Congrats! You\u0027ve successfully completed:%n%s\",completed);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andreusxcarvalho"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"andreusxcarvalho"},"content":"     * Checks if this command is equal to another object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param o The other object to compare to.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return true if the other object is equal to this command, false otherwise.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andreusxcarvalho"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"andreusxcarvalho"},"content":"    public boolean equals(Object o){","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"andreusxcarvalho"},"content":"        if (this \u003d\u003d o){","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"andreusxcarvalho"},"content":"            return true;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"andreusxcarvalho"},"content":"        if (!(o instanceof LogProgrammeCommand that)){","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"andreusxcarvalho"},"content":"            return false;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"andreusxcarvalho"},"content":"        logger.log(","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"andreusxcarvalho"},"content":"                Level.INFO,\"Comparing LogCommand with this: {0}, that: {1}\",","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"andreusxcarvalho"},"content":"                new Object[]{this.programmeIndex, that.programmeIndex}","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"andreusxcarvalho"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"andreusxcarvalho"},"content":"        boolean isProgrammeIndexEqual \u003d  (programmeIndex \u003d\u003d that.programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"andreusxcarvalho"},"content":"        boolean isDayIndexEqual \u003d (dayIndex \u003d\u003d that.dayIndex);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"andreusxcarvalho"},"content":"        boolean isDateEqual \u003d Objects.equals(date, that.date);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"andreusxcarvalho"},"content":"        return (isProgrammeIndexEqual \u0026\u0026 isDayIndexEqual \u0026\u0026 isDateEqual);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":101}},{"path":"src/main/java/command/programme/ProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.Command;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import static common.Utils.NULL_INTEGER;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":" * Represents an abstract command related to programmes.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"public abstract class ProgrammeCommand extends Command {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"    protected final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    protected int programmeIndex;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    protected int dayIndex;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"     * Constructs a ProgrammeCommand with the specified programme index and day index.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex The index of the programme.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex The index of the day.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    public ProgrammeCommand(int programmeIndex, int dayIndex) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        this(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        assert dayIndex \u003e\u003d 0 : \"dayIndex must not be negative\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        this.dayIndex \u003d dayIndex;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     * Constructs a ProgrammeCommand with the specified programme index.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex The index of the programme.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    public ProgrammeCommand(int programmeIndex) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        // We accept NULL_INTEGER as a valid programmeIndex as it is an optional argument","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"        assert programmeIndex \u003d\u003d NULL_INTEGER || programmeIndex \u003e\u003d 0 : \"Program index must be valid\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        this.programmeIndex \u003d programmeIndex;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"    ","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     * Constructs a ProgrammeCommand with no specified indices.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"    public ProgrammeCommand(){}","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"     * Checks if this command is equal to another object.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"     * @param other The other object to compare to.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"     * @return true if the other object is equal to this command, false otherwise.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    public boolean equals(Object other){","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"        if (this \u003d\u003d other){","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"            return true;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"        if (!(other instanceof ProgrammeCommand that)){","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"            return false;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"        boolean isProgIndexEqual \u003d this.programmeIndex \u003d\u003d that.programmeIndex;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"        boolean isDayIndexEqual \u003d this.dayIndex \u003d\u003d that.dayIndex;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"        return isProgIndexEqual \u0026\u0026 isDayIndexEqual;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"TVageesan":65}},{"path":"src/main/java/command/programme/StartProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":" * Represents a command to start a specific programme.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"public class StartProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"start\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Started programme: %n%s\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"     * Constructs a StartProgrammeCommand with the specified programme index.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex The index of the programme to start.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    public StartProgrammeCommand(int programmeIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"StartCommand created with programme index: {0}\", programmeIndex);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to start a specific programme.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     * @param programmes The list of programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"     * @param history The history object to record the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"     * @return A CommandResult object containing the result of the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"Programme list must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        Programme started \u003d programmes.startProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        assert started !\u003d null : \"Programme must not be null\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"StartCommand executed successfully.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, started);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"TVageesan":44,"nirala-ts":2}},{"path":"src/main/java/command/programme/ViewProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":" * Represents a command to view a specific programme.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"public class ViewProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Viewing programme: %n%s\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"     * Constructs a ViewProgrammeCommand with the specified programme index.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex The index of the programme to view.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    public ViewProgrammeCommand(int programmeIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"ViewCommand created with programme index: {0}\", programmeIndex);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to view a specific programme.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"     * @param programmes The list of programmes.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"     * @param history The history object to record the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"     * @return A CommandResult object containing the result of the command execution.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"ProgrammeList must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        Programme programme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        assert programme !\u003d null : \"Programme must not be null\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"ViewCommand executed successfully.\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, programme);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-02","isFullCredit":false}],"authorContributionMap":{"TVageesan":45,"nirala-ts":2}},{"path":"src/main/java/command/programme/edit/CreateDayProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":" * Command to create a new day in a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" * This command adds a new Day object to an existing programme identified by the programme ID.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"public class CreateDayProgrammeCommand extends EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Created new day: %s%n\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    private final Day createdDay;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"     * Constructs a new CreateDayCommand.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex The ID of the programme to add the day to","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"     * @param createdDay The Day object to be added to the programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    public CreateDayProgrammeCommand(int programmeIndex, Day createdDay) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        assert createdDay !\u003d null : \"created day cannot be null\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"        this.createdDay \u003d createdDay;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"CreateDayCommand created with day: {0}\", createdDay);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to insert the created day into the specified programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"     * @author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList that contains the programmes where the day will be added","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult containing a success message indicating the created day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"programmes cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        Programme selectedProgramme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        selectedProgramme.insertDay(createdDay);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"CreateDayCommand executed successfully.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        String resultMessage \u003d String.format(SUCCESS_MESSAGE_FORMAT, createdDay);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"TVageesan":49}},{"path":"src/main/java/command/programme/edit/CreateExerciseProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" * Command to create a new exercise within a specified day of a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":" * This class is responsible for creating an exercise and adding it to a specific day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":" * within a specified programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"public class CreateExerciseProgrammeCommand extends EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Created new exercise: %n%s%n\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    private final Exercise createdExercise;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"     * Constructs a CreateExerciseCommand with the specified programme index, day ID, and exercise.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme to which the exercise will be added","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex the ID of the day within the programme where the exercise will be inserted","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     * @param createdExercise the exercise to be created and added to the day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"    public CreateExerciseProgrammeCommand(int programmeIndex, int dayIndex, Exercise createdExercise) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex,dayIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        assert createdExercise !\u003d null : \"created exercise must not be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        this.createdExercise \u003d createdExercise;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"CreateExerciseCommand created with exercise: {0}\", createdExercise);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to insert the created exercise into the specified day of the programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList that contains the programmes where the exercise will be added","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult containing a success message indicating the created exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"programmes cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        Programme selectedProgramme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        Day selectedDay \u003d selectedProgramme.getDay(dayIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        selectedDay.insertExercise(createdExercise);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"CreateExerciseCommand executed successfully.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, createdExercise);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"TVageesan":54}},{"path":"src/main/java/command/programme/edit/DeleteDayProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":" * Command to delete a specific day from a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" * This class encapsulates the functionality to remove a day from a","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":" * specified programme, identified by its index.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"public class DeleteDayProgrammeCommand extends EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Deleted day: %n%s%n\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"     * Constructs a DeleteDayCommand with the specified programme index and day ID.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme from which the day will be deleted","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex the ID of the day to be deleted from the programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    public DeleteDayProgrammeCommand(int programmeIndex, int dayIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"        logger.log(","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"                Level.INFO,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"                \"DeleteDayCommand created with programme index: {0} and day index: {1}\",","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"                new Object[]{programmeIndex, dayIndex}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to delete the specified day from the programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList containing the programmes where the day will be deleted","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult containing a success message indicating the deleted day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"programmes cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        Programme selectedProgramme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        Day deletedDay \u003d selectedProgramme.deleteDay(dayIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"DeleteDayCommand executed successfully.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, deletedDay);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-11","isFullCredit":false}],"authorContributionMap":{"TVageesan":53}},{"path":"src/main/java/command/programme/edit/DeleteExerciseProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" * Command to delete a specific exercise from a day within a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":" * This class encapsulates the functionality to remove an exercise identified by its","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":" * ID from a specified day of a programme, which is also identified by its index.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"public class DeleteExerciseProgrammeCommand extends EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Deleted exercise %d: %n%s%n\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"     * Constructs a DeleteExerciseCommand with the specified programme index, day ID, and exercise ID.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme from which the exercise will be deleted","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex the ID of the day from which the exercise will be deleted","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     * @param exerciseIndex the ID of the exercise to be deleted","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    public DeleteExerciseProgrammeCommand(int programmeIndex, int dayIndex, int exerciseIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex, exerciseIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        logger.log(","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"                Level.INFO,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"                \"DeleteExerciseCommand created with programme index: {0}, day index: {1}, and exercise index: {2}\",","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"                new Object[]{programmeIndex, dayIndex, exerciseIndex}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to delete the specified exercise from the given day of the programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList containing the programmes where the exercise will be deleted","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult containing a success message indicating the deleted exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"programmes cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        Programme selectedProgramme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"        Day selectedDay \u003d selectedProgramme.getDay(dayIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"        Exercise deletedExercise \u003d selectedDay.deleteExercise(exerciseIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"DeleteExerciseCommand executed successfully.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, exerciseIndex, deletedExercise);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"TVageesan":57}},{"path":"src/main/java/command/programme/edit/EditExerciseProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ExerciseUpdate;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":" * Command to edit a specific exercise\u0027s fields within a day of a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":" * This class encapsulates the functionality to update the details of an","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":" * existing exercise identified by its ID within a specified day of a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"public class EditExerciseProgrammeCommand extends EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    public static final String SUCCESS_MESSAGE_FORMAT \u003d \"Updated exercise: %s%n\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    private final ExerciseUpdate update;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     * Constructs an EditExerciseCommand with the specified programme index, day ID,","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     * exercise ID, and updated exercise details.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme containing the exercise to be updated","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex the ID of the day containing the exercise to be updated","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"     * @param exerciseIndex the ID of the exercise to be updated","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"     * @param update the ExerciseUpdate object containing the fields that need to be updated in the target Exercise","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    public EditExerciseProgrammeCommand(int programmeIndex, int dayIndex, int exerciseIndex, ExerciseUpdate update) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex, exerciseIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        assert update !\u003d null : \"update object must not be null\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        this.update \u003d update;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        logger.log(","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"                Level.INFO,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"                \"EditExerciseCommand created with programme index: {0}, day index: {1}, and exercise index: {2}\",","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"                new Object[]{programmeIndex, dayIndex, exerciseIndex}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"     * Executes the command to update the specified exercise in the given day of the programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList containing the programmes where the exercise will be updated","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult containing a success message indicating the updated exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        assert programmes !\u003d null : \"programmes cannot be null\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"        Programme selectedProgramme \u003d programmes.getProgramme(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"        Day selectedDay \u003d selectedProgramme.getDay(dayIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"        Exercise selectedExercise \u003d selectedDay.getExercise(exerciseIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"        selectedExercise.updateExercise(update);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"EditExerciseCommand executed successfully.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"        String result \u003d String.format(SUCCESS_MESSAGE_FORMAT, selectedExercise);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-09","isFullCredit":false}],"authorContributionMap":{"TVageesan":67}},{"path":"src/main/java/command/programme/edit/EditProgrammeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import command.programme.ProgrammeCommand;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":" * Abstract command class for all editing operations on a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":" * This class serves as a base for all editing commands that operate on","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":" * a programme, including operations to modify exercises or days within","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":" * a programme.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"public abstract class EditProgrammeCommand extends ProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    protected final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    protected int exerciseIndex;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     * Constructs an EditCommand with the specified programme index, day ID, and exercise ID.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme being edited","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex the ID of the day being edited within the programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"     * @param exerciseIndex the ID of the exercise being edited","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    public EditProgrammeCommand(int programmeIndex, int dayIndex, int exerciseIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        assert exerciseIndex \u003e\u003d 0 : \"exercise id must be non-negative\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        this.exerciseIndex \u003d exerciseIndex;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"     * Constructs an EditCommand with the specified programme index and day ID.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme being edited","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"     * @param dayIndex the ID of the day being edited within the programme","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    public EditProgrammeCommand(int programmeIndex, int dayIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"     * Constructs an EditCommand with the specified programme index.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"     * @param programmeIndex the index of the programme being edited","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    public EditProgrammeCommand(int programmeIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"     * Executes the edit command on the given ProgrammeList.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"     * This method must be implemented by subclasses to define specific","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"     * editing behavior.","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"     * @param programmes the ProgrammeList containing the programmes to edit","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"     * @return a CommandResult indicating the outcome of the edit operation","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"    public abstract CommandResult execute(ProgrammeList programmes);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes, History history) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"        return execute(programmes);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-27","isFullCredit":false}],"authorContributionMap":{"TVageesan":73}},{"path":"src/main/java/command/water/AddWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"package command.water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import history.History;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import java.util.Objects;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":" * Represents a command to add a specified amount of water to the daily record for a given date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"public class AddWaterCommand extends WaterCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"    private static final Logger logger \u003d Logger.getLogger(AddWaterCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    protected float waterToAdd;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * Constructs an AddWaterCommand with the specified amount of water to add and the date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     * @param waterToAdd The amount of water to add in liters. Must be positive.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * @param date The date for which the water is to be added. Must not be null.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if waterToAdd is not positive or date is null.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    public AddWaterCommand(float waterToAdd, LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"        super(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"        assert waterToAdd \u003e 0 : \"Water to add must be positive\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        this.waterToAdd \u003d waterToAdd;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"AddWaterCommand created to add {0} liters for date: {1}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"                new Object[]{waterToAdd, date});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * Executes the command to add water to the daily record in the specified history.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * @param history The {@code History} object that contains daily records.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code CommandResult} containing a message indicating the success of the operation.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if the daily record for the specified date is not found.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    public CommandResult execute(History history) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"        assert dailyRecord !\u003d null : \"Daily record not found\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(waterToAdd);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"{0} liters of water added for date: {1}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"                new Object[]{waterToAdd, date});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"        return new CommandResult(waterToAdd + \" liters of water has been added\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"            return true;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"        if (!(o instanceof AddWaterCommand that)) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"            return false;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        return Objects.equals(waterToAdd, that.waterToAdd) \u0026\u0026","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"                Objects.equals(date, that.date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"    public int hashCode() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"        return Objects.hash(waterToAdd, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Bev-low":72}},{"path":"src/main/java/command/water/DeleteWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"package command.water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import history.History;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import java.util.Objects;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":" * Represents a command to delete a specified entry of water intake from the daily record for a given date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"public class DeleteWaterCommand extends WaterCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteWaterCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    protected int indexWaterToDelete;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * Constructs a {@code DeleteWaterCommand} with the specified index of the water entry to delete and the date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     * @param indexOfWaterToDelete The index of the water entry to delete. Must be zero or greater.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * @param date The date for which the water entry is to be deleted. Must not be {@code null}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if {@code indexOfWaterToDelete} is negative or {@code date} is {@code null}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    public DeleteWaterCommand(int indexOfWaterToDelete, LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"        super(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"        assert indexOfWaterToDelete \u003e\u003d 0 : \"Index to delete cannot be negative\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        this.indexWaterToDelete \u003d indexOfWaterToDelete;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"DeleteWaterCommand created for index: {0} on date: {1}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"                new Object[]{indexWaterToDelete, date});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * Executes the command to delete a water entry from the daily record in the specified history.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * @param history The {@code History} object that contains daily records.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code CommandResult} containing a message indicating the success of the deletion.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if the daily record for the specified date is not found.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    public CommandResult execute(History history) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"        assert dailyRecord !\u003d null : \"Daily record not found\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        float deletedWater \u003d dailyRecord.removeWaterFromRecord(indexWaterToDelete);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"        return new CommandResult(deletedWater + \" liters of water has been deleted\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"            return true;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"        if (!(o instanceof DeleteWaterCommand)) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"            return false;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"        DeleteWaterCommand that \u003d (DeleteWaterCommand) o;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"        return indexWaterToDelete \u003d\u003d that.indexWaterToDelete \u0026\u0026","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"                Objects.equals(date, that.date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"    public int hashCode() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"        return Objects.hash(indexWaterToDelete, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-25","isFullCredit":false}],"authorContributionMap":{"Bev-low":71}},{"path":"src/main/java/command/water/ViewWaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"package command.water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import common.Utils;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import history.History;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import water.Water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.util.Objects;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":" * Represents a command to view the water intake for a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"public class ViewWaterCommand extends WaterCommand {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    private static final Logger logger \u003d Logger.getLogger(ViewWaterCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * Constructs a ViewWaterCommand for the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     * @param date The date for which the water intake is to be viewed. Must not be null.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if date is null.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"    public ViewWaterCommand(LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"        super(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"ViewWaterCommand created for date: {0}\", date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"     * Executes the command to view the water intake for the specified date in the provided history.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"     * @param history The {@code History} object that contains daily records.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code CommandResult} containing a message displaying the water intake for the date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if the daily record for the specified date is not found.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"    public CommandResult execute(History history) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"        String formattedDate \u003d Utils.formatDate(date);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"        DailyRecord dailyRecord \u003d history.getRecordByDate(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"        assert dailyRecord !\u003d null : \"Daily record not found\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"        Water water \u003d dailyRecord.getWaterFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"Retrieved Water record for date: {0}, Water: {1}\", new Object[]{date, water});","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        return new CommandResult(\"Water intake for \" + formattedDate +  \": \\n\\n\" + water.toString());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"            return true;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        if (!(o instanceof ViewWaterCommand that)) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"            return false;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"        return Objects.equals(date, that.date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"    public int hashCode() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"        return Objects.hash(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Bev-low":67}},{"path":"src/main/java/command/water/WaterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"package command.water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import history.History;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":" * Represents an abstract command related to water tracking.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":" * This class serves as a base for specific water-related commands that operate on a given date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"public abstract class WaterCommand extends Command {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"    private static final Logger logger \u003d Logger.getLogger(WaterCommand.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    protected LocalDate date;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * Constructs a water command with the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     * @param date The date associated with the command. Must not be {@code null}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if {@code date} is {@code null}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"    public WaterCommand(LocalDate date) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"        assert date !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"WaterCommand initialized with date: {0}\", date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"     * Executes the water-related command using the specified history.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"     * This method is intended to be implemented by subclasses to provide specific command behavior.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * @param history The {@code History} object containing records to operate on.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code CommandResult} with the outcome of the command execution.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"    public abstract CommandResult execute(History history);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"     * Executes the water-related command using both a {@code ProgrammeList} and {@code History}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"     * @param programmes The {@code ProgrammeList} object, representing a list of programmes.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"     * @param history The {@code History} object containing records to operate on.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code CommandResult} with the outcome of the command execution.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"    public CommandResult execute(ProgrammeList programmes, History history) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"Executing WaterCommand with ProgrammeList and History.\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"        return execute(history);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-25","isFullCredit":false}],"authorContributionMap":{"Bev-low":57}},{"path":"src/main/java/common/Utils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"package common;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"public class Utils {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final int NULL_INTEGER \u003d -1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final float NULL_FLOAT \u003d -1.0f;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    public static boolean isNull(int val) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"        return val \u003d\u003d -1;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"    public static boolean isNull(String val) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"        return val \u003d\u003d null || val.isEmpty();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"    public static String formatDate(LocalDate date){","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"        return date.format(formatter);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":28}},{"path":"src/main/java/exceptions/BuffBuddyExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"package exceptions;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":" * BuffBuddyException serves as the base exception class for BuffBuddy.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":" * All custom exceptions in BuffBuddy should inherit from this class to","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":" * allow unified handling of exceptions.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"public class BuffBuddyExceptions extends RuntimeException {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"     * Default constructor with a generic error message.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"    public BuffBuddyExceptions() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"        super(\"An error occurred in BuffBuddy.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"     * Constructor that accepts a custom error message.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param message Custom error message describing the exception.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"    public BuffBuddyExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"        super(message);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"    ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"    ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"     * Constructor that accepts a custom error message and a throwable cause.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andreusxcarvalho"},"content":"     * This is useful for wrapping other exceptions in BuffBuddy-specific exceptions.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param message Custom error message describing the exception.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param cause The cause of the exception. ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"    public BuffBuddyExceptions(String message, Throwable cause) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andreusxcarvalho"},"content":"        super(message, cause);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":40}},{"path":"src/main/java/exceptions/FlagExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to flags in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"public class FlagExceptions extends BuffBuddyExceptions {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new FlagExceptions with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    public FlagExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"     * Returns a FlagExceptions indicating that a specific flag is missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * @param flag The name of the missing flag.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code FlagExceptions} with a message indicating that the specified flag is not present.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    public static FlagExceptions missingFlag(String flag) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        return new FlagExceptions(\"Flag \" + flag + \" not present\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * Returns a FlagExceptions indicating that arguments are missing after a flag.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code FlagExceptions} with a message indicating that arguments are missing","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"     *         after the flag.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"    public static FlagExceptions missingArguments() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        return new FlagExceptions(\"Missing arugments after flag, please refer to User Guide\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":38}},{"path":"src/main/java/exceptions/HistoryExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to history operations in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"public class HistoryExceptions extends BuffBuddyExceptions {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new HistoryExceptions with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    public HistoryExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"     * Returns a HistoryExceptions indicating that a specified day does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code HistoryExceptions} with a message indicating that the specified day","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     *         cannot be deleted because it does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    public static HistoryExceptions dayNotFound() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        return new HistoryExceptions(\"Day does not exist, cannot be deleted\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * Returns a HistoryExceptions indicating that an exercise name was not provided.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code HistoryExceptions} with a message indicating that the exercise name","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"     *         is missing and prompting the user to specify it.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"    public static HistoryExceptions exerciseNameNotFound() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        return new HistoryExceptions(\"Exercise name not provided. Please specify the exercise to \" +","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"                \"view your personal best.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":40}},{"path":"src/main/java/exceptions/MealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to meal operations in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"public class MealException extends BuffBuddyExceptions {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new MealException with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    public MealException(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"     * Returns a MealException indicating that a specified meal does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code MealException} with a message indicating that the specified meal","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     *         does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    public static MealException doesNotExist() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        return new MealException(\"Meal does not exist\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":28}},{"path":"src/main/java/exceptions/ParserExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to parsing operations in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"public class ParserExceptions extends BuffBuddyExceptions {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new ParserExceptions with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    public ParserExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"     * Returns a ParserExceptions indicating that an invalid float value was provided.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * @param no The invalid float value.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ParserExceptions} with a message indicating that the provided float is invalid.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    public static ParserExceptions invalidFloat(String no) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        return new ParserExceptions(\"Invalid Float: \" + no);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * Returns a ParserExceptions indicating that an invalid integer value was provided.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     * @param no The invalid integer value.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ParserExceptions} with a message indicating that the provided integer is invalid.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"    public static ParserExceptions invalidInt(String no) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        return new ParserExceptions(\"Invalid Integer: \" + no);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * Returns a ParserExceptions indicating that an invalid date format was provided.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * @param date The invalid date.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ParserExceptions} with a message indicating that the provided date is invalid.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    public static ParserExceptions invalidDate(String date) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"        return new ParserExceptions(\"Invalid Date: \" + date + \", Date in format dd-MM-yyyy.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"     * Returns a ParserExceptions indicating that a command is missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ParserExceptions} with a message indicating that a command is missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    public static ParserExceptions missingCommand() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"        return new ParserExceptions(\"Missing Command, please refer to User Guide\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"     * Returns a ParserExceptions indicating that arguments are missing after a command.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ParserExceptions} with a message indicating that arguments are missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"    public static ParserExceptions missingArguments() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        return new ParserExceptions(\"Missing Arguments, please refer to User Guide\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"     * Returns a ParserExceptions indicating that the specified index is out of bounds.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"     * @param indexString The out-of-bounds index.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ParserExceptions} with a message indicating that the provided index is","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"     *         out of bounds.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"    public static ParserExceptions indexOutOfBounds(String indexString) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"        return new ParserExceptions(\"Index out of bounds: \" + indexString + \". Please check the list again.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":77}},{"path":"src/main/java/exceptions/ProgrammeExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to programme operations in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"public class ProgrammeExceptions extends BuffBuddyExceptions {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new ProgrammeExceptions with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    public ProgrammeExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"     * Returns a ProgrammeExceptions indicating that a programme name is missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ProgrammeExceptions} with a message indicating a missing programme name.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"    public static ProgrammeExceptions programmeMissingName() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"        return new ProgrammeExceptions(\"Programme is missing a name.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"     * Returns a ProgrammeExceptions indicating that the programme edit command","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * is missing required flags.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ProgrammeExceptions} with a message indicating missing flags.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    public static ProgrammeExceptions programmeEditMissingFlags() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        return new ProgrammeExceptions(\"Programme edit command is missing required flags. \" +","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"                \"Please refer to the user guide for details.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * Returns a ProgrammeExceptions indicating that a day name is missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ProgrammeExceptions} with a message indicating a missing day name.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"    public static ProgrammeExceptions missingDayName() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"        return new ProgrammeExceptions(\"Missing Day Name, please provide one.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"     * Returns a {@code ProgrammeExceptions} indicating that a specified object","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"     * does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"     * @param name The name of the object that does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code ProgrammeExceptions} with a message indicating that the specified","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"     *         object does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"    public static ProgrammeExceptions doesNotExist(String name) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        return new ProgrammeExceptions(name + \" does not exist.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":59}},{"path":"src/main/java/exceptions/StorageExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to storage operations in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"public class StorageExceptions extends IOException {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new {@code StorageExceptions} with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    public StorageExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * Returns a StorageExceptions indicating that the storage file could not be saved.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code StorageExceptions} with a message indicating that the storage file","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     *         could not be saved.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    public static StorageExceptions unableToSave() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"        return new StorageExceptions(\"Could not save storage file\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     * Returns a StorageExceptions}indicating that a directory could not be created.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code StorageExceptions} with a message indicating that the directory","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"     *         could not be created.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    public static StorageExceptions unableToCreateDirectory() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"        return new StorageExceptions(\"Could not create directory\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * Returns a StorageExceptions indicating that a file could not be created.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code StorageExceptions} with a message indicating that the file","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"     *         could not be created.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    public static StorageExceptions unableToCreateFile() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"        return new StorageExceptions(\"Could not create file\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":50}},{"path":"src/main/java/exceptions/WaterExceptions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package exceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":" * Represents exceptions related to water log operations in the application.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"public class WaterExceptions extends BuffBuddyExceptions {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"     * Constructs a new {@code WaterExceptions} with the specified detail message.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"    public WaterExceptions(String message) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        super(message);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"     * Returns a WaterExceptions indicating that a specified water log does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * @return A {@code WaterExceptions} with a message indicating that the specified water log","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     *         does not exist.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    public static WaterExceptions doesNotExist() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        return new WaterExceptions(\"Water log does not exist\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"Bev-low":28}},{"path":"src/main/java/history/DailyRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"package history;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.HistoryExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import exceptions.MealException;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import meal.MealList;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import programme.Day;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import water.Water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":" * Represents a daily record containing a {@link Day} for workouts, a {@link MealList} for meals,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":" * and a {@link Water} record for water intake.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":" * Each {@code DailyRecord} logs a day\u0027s activities, meals, and water intake, supporting methods","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":" * for managing these entries and calculating totals. Instances are stored in a {@code history}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":" * map that associates each record with a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"public class DailyRecord {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"    private static final Logger logger \u003d Logger.getLogger(DailyRecord.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"    private Day day;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    private final MealList mealList;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"    private final Water water;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"     * Constructs a daily record with an empty meal list and water intake record.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"    public DailyRecord() {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"        this.mealList \u003d new MealList();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"        this.water \u003d new Water();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"     * Retrieves the day object representing the day\u0027s workout or activities.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"     * @return the {@code Day} from the record, or {@code null} if no day is recorded","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"    public Day getDayFromRecord() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"        return day;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    //@@author TVageesan","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"     * Deletes the current day record from the daily record.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"     * If no day has been logged, this method throws an {@link IllegalStateException}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"     * @return the deleted {@code Day} object","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"     * @throws IllegalStateException if there is no logged workout for the day","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"    public Day deleteDayFromRecord() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        if (this.day \u003d\u003d null) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"            throw HistoryExceptions.dayNotFound();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"        Day deleted \u003d this.day;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"        this.day \u003d null;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"        return deleted;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"    //@@author","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"     * Retrieves the mealList object containing all meals recorded for the day.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"     * @return the {@code MealList} for the daily record","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"    public MealList getMealListFromRecord() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"        return mealList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"     * Retrieves the water object containing a water list.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"     * @return the {@code Water} intake record for the day","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"    public Water getWaterFromRecord() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"        return water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"     * Logs a new {@code Day} to the daily record, replacing any existing record for that day.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"     * This method updates the day\u0027s activities with the given {@code Day} object,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"     * ensuring it is non-null, and logs the update.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"     * @param newDay the {@code Day} object to log, which must not be {@code null}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"    public void logDayToRecord(Day newDay) { //this replaces any current day recorded","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"        assert newDay !\u003d null : \"day must not be null\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"        this.day \u003d newDay;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"Day updated: \" + day);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"     * Adds a meal to the daily meal record.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"     * This method appends the given meal to the {@code mealList} and logs the addition.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"     * @param meal the {@code Meal} to add to the record, which must not be {@code null}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Bev-low"},"content":"    public void addMealToRecord(Meal meal) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Bev-low"},"content":"        assert meal !\u003d null;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Bev-low"},"content":"        mealList.addMeal(meal);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"meal added: \" + meal);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Bev-low"},"content":"     * Deletes a meal from the mealList at the specified index.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Bev-low"},"content":"     * This method removes the meal at the given index from the {@code mealList}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Bev-low"},"content":"     * @param index the index of the meal to delete, which must be non-negative","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Bev-low"},"content":"     * @return the {@link Meal} that was deleted from the record","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Bev-low"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Bev-low"},"content":"    public Meal deleteMealFromRecord(int index) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"andreusxcarvalho"},"content":"        if (index \u003c 0 || index \u003e\u003d mealList.getSize()) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bev-low"},"content":"            throw MealException.doesNotExist();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"meal deleted, index: \" + index);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bev-low"},"content":"        return mealList.deleteMeal(index);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bev-low"},"content":"     * Adds a specified amount of water to the daily water intake record.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Bev-low"},"content":"     * This method appends the given amount of water to the water record, ensuring the","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Bev-low"},"content":"     * amount is non-negative.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Bev-low"},"content":"     * @param toAddWater the amount of water to add, which must be non-negative","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Bev-low"},"content":"    public void addWaterToRecord(float toAddWater) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bev-low"},"content":"        assert toAddWater \u003e\u003d 0;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Bev-low"},"content":"        water.addWater(toAddWater);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"Water added: \" + toAddWater);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"     * Removes a water entry from the water intake record at the specified index.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Bev-low"},"content":"     * This method deletes the water entry at the given index from the water intake record","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Bev-low"},"content":"     * and returns the removed water amount.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Bev-low"},"content":"     * @param index the index of the water entry to delete, which must be non-negative","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Bev-low"},"content":"     * @return the amount of water that was removed","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Bev-low"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Bev-low"},"content":"    public float removeWaterFromRecord(int index) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"water deleted, index: \" + index);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Bev-low"},"content":"        return water.deleteWater(index);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Bev-low"},"content":"     * Calculates the total calories from all meals in the {@code mealList}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"     * This method iterates over each {@link Meal} in the {@code mealList}, ensuring each meal is","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"     * non-null, and sums up the calories from each meal to get the total caloric intake from meals.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Bev-low"},"content":"     * @return the total calories gained from meals","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"    private int getCaloriesFromMeals() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"        int caloriesMeal \u003d 0;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"        for (Meal meal : mealList.getMeals()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Bev-low"},"content":"            assert meal !\u003d null : \"meal must not be null\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Bev-low"},"content":"            caloriesMeal +\u003d meal.getCalories();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Atulteja"},"content":"        logger.info(\"Calories from meals calculated: \" + caloriesMeal);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Bev-low"},"content":"        return caloriesMeal;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Bev-low"},"content":"     * Calculates the total water intake from all recorded water entries in {@code water}.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Bev-low"},"content":"     * This method iterates over each water entry in {@code water.getWaterList()}, ensuring each entry","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Bev-low"},"content":"     * is non-null, and accumulates the total amount of water consumed.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Bev-low"},"content":"     * @return the total water intake in liters","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Bev-low"},"content":"    private float getTotalWaterIntake() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Bev-low"},"content":"        float totalWater \u003d 0;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Bev-low"},"content":"        for (Float waterAmount : water.getWaterList()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bev-low"},"content":"            assert waterAmount !\u003d null : \"water must not be null\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Bev-low"},"content":"            totalWater +\u003d waterAmount;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"total water: \" + totalWater);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Bev-low"},"content":"        return totalWater;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Bev-low"},"content":"     * Provides a detailed string representation of the daily record, including the day\u0027s","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Bev-low"},"content":"     * activities, meals consumed, water intake, and caloric balance.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Bev-low"},"content":"     * This method compiles information from the {@code day}, {@code mealList}, and {@code water}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Bev-low"},"content":"     * components to create a summary of the daily record. It includes:","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Bev-low"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Bev-low"},"content":"     *     \u003cli\u003eThe day’s activities and total calories burned, if available.\u003c/li\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Bev-low"},"content":"     *     \u003cli\u003eA list of meals and the total calories gained from meals, if any meals are recorded.\u003c/li\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Bev-low"},"content":"     *     \u003cli\u003eThe total water intake, if any water entries are recorded.\u003c/li\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Bev-low"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Bev-low"},"content":"     * If any of the components (day, meals, or water) are absent, it indicates this in the output.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Bev-low"},"content":"     * Additionally, it calculates and displays the caloric balance (calories gained minus calories burned).","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Bev-low"},"content":"     * @return a formatted string representation of the daily record, detailing calories burned, calories","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Bev-low"},"content":"     *         gained from meals, water intake, and overall caloric balance.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Bev-low"},"content":"    public String toString() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Bev-low"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"TVageesan"},"content":"        int caloriesBurnt \u003d 0;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Bev-low"},"content":"        int caloriesGained \u003d getCaloriesFromMeals();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Bev-low"},"content":"        result.append(\"Day: \\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"TVageesan"},"content":"        if (day !\u003d null) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"TVageesan"},"content":"            caloriesBurnt \u003d day.getTotalCaloriesBurnt();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Bev-low"},"content":"            result.append(day.toString()).append(\"\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"TVageesan"},"content":"            result.append(\"Total Calories burnt: \").append(caloriesBurnt).append(\" kcal\\n\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Bev-low"},"content":"        } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Bev-low"},"content":"            result.append(\"No Day.\\n\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Bev-low"},"content":"        result.append(\"Meals: \\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Bev-low"},"content":"        if (!mealList.getMeals().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Bev-low"},"content":"            result.append(mealList).append(\"\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"TVageesan"},"content":"            result.append(\"Total Calories from Meals: \").append(caloriesGained).append(\" kcal\\n\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Bev-low"},"content":"        } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Bev-low"},"content":"            result.append(\"No Meals.\\n\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Bev-low"},"content":"        result.append(\"Water Intake: \\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Bev-low"},"content":"        if (!water.getWaterList().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Bev-low"},"content":"            result.append(water).append(\"\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Bev-low"},"content":"            result.append(\"Total Water Intake: \").append(getTotalWaterIntake()).append(\" liters \\n\\n\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Bev-low"},"content":"        } else {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Bev-low"},"content":"            result.append(\"No Water.\\n\\n\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"TVageesan"},"content":"        result.append(\"Caloric Balance: \").append(caloriesGained - caloriesBurnt).append(\" kcal\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Bev-low"},"content":"        return result.toString();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"TVageesan":28,"Atulteja":2,"Bev-low":225,"andreusxcarvalho":2}},{"path":"src/main/java/history/History.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package history;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.Map;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"public class History {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final Logger logger \u003d Logger.getLogger(History.class.getName());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"    private final LinkedHashMap\u003cLocalDate, DailyRecord\u003e history;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    public History() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"        history \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    //@@author Bev-Low","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"     * Retrieves the daily record for a specific date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"     * This method checks if a record exists in the {@code history} map for the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     * If a record is found, it is returned. If no record exists, a new {@link DailyRecord} is","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * created, added to the {@code history} map, and then returned.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"     * @param date the {@link LocalDate} of the record to retrieve","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * @return the {@link DailyRecord} for the specified date","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    public DailyRecord getRecordByDate(LocalDate date) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"        DailyRecord record \u003d history.get(date);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        if (record \u003d\u003d null) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"            record \u003d new DailyRecord();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"            logRecord(date, record);","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"        return record;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"    // @@author","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andreusxcarvalho"},"content":"    public LinkedHashMap\u003cLocalDate, DailyRecord\u003e getHistory() {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andreusxcarvalho"},"content":"        return history;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    public String getWeeklyWorkoutSummary() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andreusxcarvalho"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andreusxcarvalho"},"content":"            return \"No workout history available.\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"andreusxcarvalho"},"content":"        StringBuilder weeklySummary \u003d new StringBuilder();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andreusxcarvalho"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        LocalDate oneWeekAgo \u003d today.minusDays(7);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"andreusxcarvalho"},"content":"        int totalExercises \u003d 0;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        for (Map.Entry\u003cLocalDate, DailyRecord\u003e entry : history.entrySet()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"andreusxcarvalho"},"content":"            LocalDate date \u003d entry.getKey();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"            DailyRecord dailyRecord \u003d entry.getValue();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"andreusxcarvalho"},"content":"            if (!date.isBefore(oneWeekAgo) \u0026\u0026 !date.isAfter(today)) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"                weeklySummary.append(dailyRecord.getDayFromRecord().toString());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"andreusxcarvalho"},"content":"                weeklySummary.append(String.format(\"Completed On: %s%n%n\", date.format(formatter)));","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"                totalExercises +\u003d dailyRecord.getDayFromRecord().getExercisesCount();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andreusxcarvalho"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andreusxcarvalho"},"content":"        if (totalExercises \u003d\u003d 0) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"andreusxcarvalho"},"content":"            return \"No workout history available for the past week.\";","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"andreusxcarvalho"},"content":"        return weeklySummary.toString();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"andreusxcarvalho"},"content":"    public void logRecord(LocalDate date, DailyRecord record) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"andreusxcarvalho"},"content":"        history.put(date, record);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"    // @@author TVageesan","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TVageesan"},"content":"     * Deletes the daily record for a specified date.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TVageesan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"     * Checks if a record exists in the {@code history} map for the given date.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"     * If present, removes the record and returns it. If not present, returns {@code null}.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"     * @param date the date of the record to delete","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"     * @return the deleted {@code DailyRecord} if it existed, or {@code null} if no record exists for the specified date","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"    public DailyRecord deleteRecord(LocalDate date) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"        assert date !\u003d null : \"Date must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TVageesan"},"content":"        if (!history.containsKey(date)) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TVageesan"},"content":"            return null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TVageesan"},"content":"        return history.remove(date);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TVageesan"},"content":"    // @@author","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"andreusxcarvalho"},"content":"    public int getHistorySize() {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andreusxcarvalho"},"content":"        return history.size();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"andreusxcarvalho"},"content":"    // Returns a preformatted string of personal bests for all exercises","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"andreusxcarvalho"},"content":"    public String getFormattedPersonalBests() {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"andreusxcarvalho"},"content":"        Map\u003cString, Exercise\u003e personalBests \u003d getPersonalBestsMap();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"andreusxcarvalho"},"content":"        if (personalBests.isEmpty()) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"andreusxcarvalho"},"content":"            return \"No personal bests found.\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"andreusxcarvalho"},"content":"        StringBuilder bestsMessage \u003d new StringBuilder(\"Personal bests for all exercises:\\n\");","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"andreusxcarvalho"},"content":"        for (Map.Entry\u003cString, Exercise\u003e entry : personalBests.entrySet()) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"andreusxcarvalho"},"content":"            bestsMessage.append(entry.getKey())","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"andreusxcarvalho"},"content":"                    .append(\": \")","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"andreusxcarvalho"},"content":"                    .append(entry.getValue().toString())","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"andreusxcarvalho"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"andreusxcarvalho"},"content":"        return bestsMessage.toString();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"andreusxcarvalho"},"content":"    // Helper method to generate a map of personal bests for each exercise","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"andreusxcarvalho"},"content":"    private Map\u003cString, Exercise\u003e getPersonalBestsMap() {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"        Map\u003cString, Exercise\u003e personalBests \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Bev-low"},"content":"        for (DailyRecord dailyRecord : history.values()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bev-low"},"content":"            int exercisesCount \u003d dailyRecord.getDayFromRecord().getExercisesCount();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"andreusxcarvalho"},"content":"            for (int i \u003d 0; i \u003c exercisesCount; i++) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bev-low"},"content":"                Exercise exercise \u003d dailyRecord.getDayFromRecord().getExercise(i);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"andreusxcarvalho"},"content":"                String exerciseName \u003d exercise.getName();","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"andreusxcarvalho"},"content":"                if (!personalBests.containsKey(exerciseName) || isBetter(exercise, personalBests.get(exerciseName))) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"andreusxcarvalho"},"content":"                    personalBests.put(exerciseName, exercise);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"andreusxcarvalho"},"content":"                }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"andreusxcarvalho"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"andreusxcarvalho"},"content":"        return personalBests;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"andreusxcarvalho"},"content":"    private boolean isBetter(Exercise current, Exercise best) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"andreusxcarvalho"},"content":"        return current.getWeight() \u003e best.getWeight();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"andreusxcarvalho"},"content":"    // Returns a formatted string for the personal best of a specified exercise","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"andreusxcarvalho"},"content":"    public String getPersonalBestForExercise(String exerciseName) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"andreusxcarvalho"},"content":"        Exercise personalBest \u003d null;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Bev-low"},"content":"        for (DailyRecord dailyRecord : history.values()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"            int exercisesCount \u003d dailyRecord.getDayFromRecord().getExercisesCount();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"andreusxcarvalho"},"content":"            for (int i \u003d 0; i \u003c exercisesCount; i++) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Bev-low"},"content":"                Exercise exercise \u003d dailyRecord.getDayFromRecord().getExercise(i);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"andreusxcarvalho"},"content":"                if (exercise.getName().equalsIgnoreCase(exerciseName)) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"andreusxcarvalho"},"content":"                    if (personalBest \u003d\u003d null || isBetter(exercise, personalBest)) {","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"andreusxcarvalho"},"content":"                        personalBest \u003d exercise;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"andreusxcarvalho"},"content":"                    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"andreusxcarvalho"},"content":"                }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"andreusxcarvalho"},"content":"            }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"andreusxcarvalho"},"content":"        return personalBest !\u003d null","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"andreusxcarvalho"},"content":"                ? \"Personal best for \" + exerciseName + \": \" + personalBest","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"andreusxcarvalho"},"content":"                : \"No personal best found for \" + exerciseName;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"    //@@author Bev-Low","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Bev-low"},"content":"     * Converts the {@code history} map, which stores {@link DailyRecord} objects associated with their","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"     * completion dates, into a formatted string representation for printing.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Bev-low"},"content":"     * This method iterates over each entry in the {@code history} map and formats each","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"     * {@code LocalDate} key and corresponding {@code DailyRecord} value into a readable string.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"     * Each record is separated by a line of equals signs to improve readability.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Bev-low"},"content":"     * If the history is empty, this method returns a message indicating that no history is available.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Bev-low"},"content":"     * @return a formatted string representation of the history, displaying each {@code DailyRecord}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Bev-low"},"content":"     *         with its completion date. If the history is empty, returns \"No history available.\"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Bev-low"},"content":"    public String toString() {","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Bev-low"},"content":"        StringBuilder historyString \u003d new StringBuilder();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Bev-low"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Bev-low"},"content":"        int size \u003d history.size();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Bev-low"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Bev-low"},"content":"            return \"No history available.\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Bev-low"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Bev-low"},"content":"        for (LocalDate date : history.keySet()) {","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Bev-low"},"content":"            historyString.append(\"\\n\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bev-low"},"content":"            historyString.append(String.format(\"Completed On: %s%n%n\", date.format(formatter)));","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Bev-low"},"content":"            DailyRecord dailyRecord \u003d history.get(date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Bev-low"},"content":"            historyString.append(dailyRecord.toString());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Bev-low"},"content":"            count++;","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Bev-low"},"content":"            if (count \u003c size) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Bev-low"},"content":"                historyString.append(\"\\n\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Bev-low"},"content":"            }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Bev-low"},"content":"        return historyString.toString();","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Bev-low"},"content":"    //@@author","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false}],"authorContributionMap":{"TVageesan":21,"Bev-low":76,"andreusxcarvalho":112}},{"path":"src/main/java/meal/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"package meal;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" * Represents a meal with a name and calorie count.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"public class Meal {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(Meal.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    private int calories;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private  String name;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"     * Constructs a Meal with the specified name and calorie count.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"     * @param name     the name of the meal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * @param calories the calorie count of the meal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the name is null, empty, or if the calories are negative","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    public Meal(String name, int calories) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"        assert name !\u003d null \u0026\u0026 !name.isEmpty() : \"Meal name cannot be null or empty\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"        assert calories \u003e\u003d 0 : \"Calories cannot be negative\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Meal created: {0} with {1} kcal\", new Object[]{name, calories});","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    public int getCalories() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        return calories;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"    public String getName() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        return name;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(calories, name);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        Meal meal \u003d (Meal) o;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        return calories \u003d\u003d meal.calories \u0026\u0026","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"                Objects.equals(name, meal.name);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"     * Overridden to return a string representation of the meal, including its name and calorie count.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"     * @return a string representation of the meal","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        return name + \" | \" + calories + \"kcal\";","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Atulteja":71}},{"path":"src/main/java/meal/MealList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"package meal;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import exceptions.MealException;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * Represents a list of meals, providing functionality to add, delete, and retrieve meals.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"public class MealList {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(MealList.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    private ArrayList\u003cMeal\u003e meals;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    public MealList() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"        meals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"MealList created with an empty list.\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"        return meals.isEmpty();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public int getSize() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        return meals.size();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"     * Adds a meal to the list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"     * @param meal the meal to add to the list","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the meal is null","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    public void addMeal(Meal meal) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        assert meal !\u003d null : \"Meal cannot be null\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        meals.add(meal);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Added meal: {0}. Current list: {1}\", new Object[]{meal, meals});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"     * Deletes a meal from the list at the specified index.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the meal to delete","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     * @return the meal that was deleted","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    public Meal deleteMeal(int index) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d meals.size()) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index for deletion: {0}\", index);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"            throw MealException.doesNotExist();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        Meal mealToBeDeleted \u003d meals.get(index);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        meals.remove(index);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Deleted meal: {0} at index {1}. Current list: {2}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"                new Object[]{mealToBeDeleted, index, meals});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        return mealToBeDeleted;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    public ArrayList\u003cMeal\u003e getMeals() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Retrieved meal list: {0}\", meals);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        return meals;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"     * Overrides the toString to returns a string representation of the meal list.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"     * Each meal is represented by its index and details on a new line.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"     * @return a string representation of the meal list","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"        for (Meal meal : meals) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"            output.append(count).append(\": \").append(meal).append(\"\\n\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"            count++;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"        return output.toString().trim(); // Trim to remove trailing newline","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(meals);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"        MealList meallist \u003d (MealList) o;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"        return meals \u003d\u003d meallist.meals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Atulteja":107}},{"path":"src/main/java/parser/FlagDefinitions.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"//@@author nirala-ts","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"public class FlagDefinitions {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"    public static final String DATE_FLAG \u003d \"/t\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"    public static final String PROGRAMME_FLAG \u003d \"/p\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"    public static final String DAY_FLAG \u003d \"/d\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"    public static final String EXERCISE_FLAG \u003d \"/e\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"    public static final String NAME_FLAG \u003d \"/n\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"    public static final String SETS_FLAG \u003d \"/s\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"    public static final String REPS_FLAG \u003d \"/r\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"    public static final String WEIGHT_FLAG \u003d \"/w\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"    public static final String CALORIES_FLAG \u003d \"/c\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"  ","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"    public static final String REMOVE_EXERCISE_FLAG \u003d \"/x\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"    public static final String ADD_EXERCISE_FLAG \u003d \"/a\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    public static final String UPDATE_EXERCISE_FLAG \u003d \"/u\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    public static final String ADD_DAY_FLAG \u003d \"/ad\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    public static final String REMOVE_DAY_FLAG \u003d \"/xd\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    public static final String MEAL_INDEX \u003d \"/m\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    public static final String WATER_INDEX \u003d \"/w\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    public static final String VOLUME_FLAG \u003d \"/v\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-27","isFullCredit":false}],"authorContributionMap":{"nirala-ts":27}},{"path":"src/main/java/parser/FlagParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"//@@author nirala-ts","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.FlagExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import java.util.Map;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static common.Utils.isNull;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.MEAL_INDEX;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.WATER_INDEX;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.VOLUME_FLAG;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.parseInteger;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.parseIndex;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.parseFloat;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.parseDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.splitArguments;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":" * The {@code FlagParser} class simplifies the parsing of flagged argument strings. The values can be retrieved in","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":" * various formats, such as Integer, Date, String, or Index.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":" * This class also supports aliasing for easy retrieval of data in different formats.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":" *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":" * @author nirala-ts","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":" */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"public class FlagParser {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"    private static final String DEFAULT_SPLIT_BY \u003d \"(?\u003d/)\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    private static final String SPLIT_BY_START \u003d \"(?\u003d/(?!(\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"    private static final String SPLIT_BY_DELIMITER \u003d \"|\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    private static final String SPLIT_BY_END \u003d \")\\\\b))\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"    private final Logger logger \u003d Logger.getLogger(FlagParser.class.getName());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    private final Map\u003cString, String\u003e parsedFlags \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    private final Map\u003cString, String\u003e aliasMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"     * Constructs a {@code FlagParser} with the given argument string, setting up aliases and ignored flags.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"     * This parser is essential for processing commands with multiple flags.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The argument string to parse.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"     * @param ignoredFlags   Flags that are optional for this instance.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"     * @throws FlagExceptions if {@code argumentString} is null.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    public FlagParser(String argumentString, String... ignoredFlags) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        if (isNull(argumentString)){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"            throw FlagExceptions.missingArguments();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        initializeAliasMap();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        parse(argumentString, generateSplitBy(ignoredFlags));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"     * Generates a regex for splitting the argument string by specified flags and aliases.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"     * @param ignoredFlags Flags to ignore while generating the regex split pattern.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"     * @return A regex string to split the argument string by flags.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"    private String generateSplitBy(String... ignoredFlags){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"        if (ignoredFlags.length \u003d\u003d 0){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"            return DEFAULT_SPLIT_BY;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"        // Starts building the regex pattern, initializing with specific syntax for ignored flags","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"        StringBuilder splitBy \u003d new StringBuilder(SPLIT_BY_START);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"        for (String ignoredFlag: ignoredFlags) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"            splitBy.append(ignoredFlag.substring(1)).append(SPLIT_BY_DELIMITER);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"            // Checks for aliases and adds them to the pattern if they map to the ignored flag","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"            for (Map.Entry\u003cString, String\u003e entry: aliasMap.entrySet()){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"                String canonicalFlag \u003d entry.getValue();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"                String aliasFlag \u003d entry.getKey();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"                if (canonicalFlag.equals(ignoredFlag)){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"                    splitBy.append(aliasFlag.substring(1)).append(SPLIT_BY_DELIMITER);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"                }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"            }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"        // Removes the trailing delimiter added after the last flag to prevent invalid regex syntax","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"        splitBy.setLength(splitBy.length() - 1);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"        return splitBy.append(SPLIT_BY_END).toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"     * Sets up flag aliases to allow flexible parsing by recognizing alternative names for flags.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"    private void initializeAliasMap() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/p\", \"/p\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/programme\", \"/p\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/day\", \"/d\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/date\", \"/t\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/name\", \"/n\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/exercise\", \"/e\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/set\", \"/s\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/rep\", \"/r\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/weight\", WATER_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/calories\", \"/c\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/createEx\", \"/a\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/updateEx\", \"/u\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/removeEx\", \"/x\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/createDay\", \"/ad\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/removeDay\", \"/xd\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/meal\", MEAL_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/volume\", VOLUME_FLAG);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"        aliasMap.put(\"/water\", WATER_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"     * Parses the argument string by splitting it based on the given regex and populates","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"     * the {@code parsedFlags} map with flag-value pairs.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string to parse.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"     * @param splitBy The regex used to split the argument string by flags.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"    private void parse(String argumentString, String splitBy) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"        String[] args \u003d argumentString.split(splitBy);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"        for (String arg : args) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"            String[] argParts \u003d splitArguments(arg);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"            String flag \u003d argParts[0].trim();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"            String value \u003d argParts[1].trim();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nirala-ts"},"content":"            flag \u003d resolveAlias(flag);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Successfully parsed flag: {0} with value: {1}\", new Object[]{flag, value});","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nirala-ts"},"content":"            parsedFlags.put(flag, value);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nirala-ts"},"content":"     * Resolves the alias for a given flag, returning the canonical flag if an alias is found.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag or alias to resolve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nirala-ts"},"content":"     * @return The canonical flag, or the original flag if no alias is found.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nirala-ts"},"content":"    private String resolveAlias(String flag) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nirala-ts"},"content":"        if (aliasMap.containsKey(flag)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nirala-ts"},"content":"            return aliasMap.get(flag);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nirala-ts"},"content":"        return flag;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nirala-ts"},"content":"     * Checks if a flag is present in the parsed flags.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag to check.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nirala-ts"},"content":"     * @return {@code true} if the flag is present, {@code false} otherwise.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nirala-ts"},"content":"    public boolean hasFlag(String flag) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nirala-ts"},"content":"        assert flag !\u003d null \u0026\u0026 !flag.isEmpty() : \"Flag must not be null or empty\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nirala-ts"},"content":"        flag \u003d resolveAlias(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nirala-ts"},"content":"        boolean hasFlag \u003d parsedFlags.containsKey(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Flag {0} presence: {1}\", new Object[]{flag, hasFlag});","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nirala-ts"},"content":"        return hasFlag;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nirala-ts"},"content":"     * Validates that all required flags are present in the parsed flags and contains a non-null value.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nirala-ts"},"content":"     * @param requiredFlags The required flags to validate.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nirala-ts"},"content":"     * @throws FlagExceptions if any required flag is missing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nirala-ts"},"content":"    public void validateRequiredFlags(String... requiredFlags) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nirala-ts"},"content":"        assert requiredFlags !\u003d null : \"Required flags string must not be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nirala-ts"},"content":"        for (String flag : requiredFlags) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nirala-ts"},"content":"            flag \u003d resolveAlias(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nirala-ts"},"content":"            if (!hasFlag(flag)) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nirala-ts"},"content":"                logger.log(Level.WARNING, \"Missing required flag: {0}\", flag);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nirala-ts"},"content":"                throw FlagExceptions.missingFlag(flag);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nirala-ts"},"content":"            }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nirala-ts"},"content":"            String value \u003d getStringByFlag(flag);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nirala-ts"},"content":"            if (isNull(value)) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nirala-ts"},"content":"                logger.log(Level.WARNING, \"Required flag has null value: {0}\", flag);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nirala-ts"},"content":"                throw FlagExceptions.missingFlag(flag);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nirala-ts"},"content":"            }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nirala-ts"},"content":"     * Retrieves the string value associated with a flag.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag whose value to retrieve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"nirala-ts"},"content":"     * @return The value associated with the flag, or {@code null} if the flag is absent.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"nirala-ts"},"content":"    public String getStringByFlag(String flag) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"nirala-ts"},"content":"        assert flag !\u003d null \u0026\u0026 !flag.isEmpty() : \"Flag must not be null or empty\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"nirala-ts"},"content":"        flag \u003d resolveAlias(flag);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"nirala-ts"},"content":"        if (!parsedFlags.containsKey(flag)) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Flag {0} not found; returning null\", flag);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"nirala-ts"},"content":"            return null;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"nirala-ts"},"content":"        String value \u003d parsedFlags.get(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully retrieved value for flag {0}: {1}\", new Object[]{flag, value});","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"nirala-ts"},"content":"        return value.trim();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"nirala-ts"},"content":"     * Retrieves the zero-based index associated with a flag.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag whose index to retrieve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"nirala-ts"},"content":"     * @return The zero-based index parsed from the flag\u0027s value.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"nirala-ts"},"content":"    public int getIndexByFlag(String flag) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"nirala-ts"},"content":"        String indexString \u003d getStringByFlag(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"nirala-ts"},"content":"        return parseIndex(indexString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"nirala-ts"},"content":"     * Retrieves the integer value associated with a flag.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag whose integer value to retrieve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"nirala-ts"},"content":"     * @return The integer parsed from the flag\u0027s value.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"nirala-ts"},"content":"    public int getIntegerByFlag(String flag){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"nirala-ts"},"content":"        String intString \u003d getStringByFlag(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"nirala-ts"},"content":"        return parseInteger(intString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"nirala-ts"},"content":"     * Retrieves the float value associated with a flag.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag whose float value to retrieve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"nirala-ts"},"content":"     * @return The float parsed from the flag\u0027s value.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"nirala-ts"},"content":"    public float getFloatByFlag(String flag) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"nirala-ts"},"content":"        String floatString \u003d getStringByFlag(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"nirala-ts"},"content":"        return parseFloat(floatString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"nirala-ts"},"content":"     * Retrieves the date value associated with a flag.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"nirala-ts"},"content":"     * @param flag The flag whose date value to retrieve.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"nirala-ts"},"content":"     * @return The {@code LocalDate} parsed from the flag\u0027s value.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"nirala-ts"},"content":"    public LocalDate getDateByFlag(String flag){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"nirala-ts"},"content":"        String dateString \u003d getStringByFlag(flag);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"nirala-ts"},"content":"        return parseDate(dateString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"nirala-ts":265}},{"path":"src/main/java/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"//@@author nirala-ts","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import parser.command.factory.CommandFactory;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.splitArguments;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":" * The {@code Parser} class serves as an intermediary between user input and command execution","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":" * within the BuffBuddy application. It interprets user-provided strings and generates appropriate","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":" * {@code Command} objects for execution.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":" *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":" */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"public class Parser {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    private final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private final CommandFactory commandFactory;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"     * Constructs a new {@code Parser} instance, initializing its associated {@code CommandFactory}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"    public Parser() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        this.commandFactory \u003d new CommandFactory();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"     * Constructs a new {@code Parser} instance, using the provided {@code CommandFactory}.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"     * This constructor is primarily for testing purposes.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    public Parser(CommandFactory commandFactory) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        this.commandFactory \u003d commandFactory;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"     * Parses the given command string and returns the corresponding {@code Command} object.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"     * @param fullCommand The complete user input, containing the command and any arguments.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@code Command} object that represents the parsed command.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"     * @throws IllegalArgumentException if the input is null or empty.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        if (fullCommand \u003d\u003d null || fullCommand.trim().isEmpty()) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Command is empty\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"            throw ParserExceptions.missingCommand();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        /*","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"         * Splits the full command input into the primary command and its associated arguments,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"         * enabling identification of the command category.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"         */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        String[] inputArguments \u003d splitArguments(fullCommand);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d inputArguments[0];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d inputArguments[1];","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully parsed command: {0}, with arguments: {1}\",","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"                new Object[]{commandString, argumentString});","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        return commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"nirala-ts":65}},{"path":"src/main/java/parser/ParserUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static common.Utils.DATE_FORMAT;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static common.Utils.NULL_INTEGER;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static common.Utils.NULL_FLOAT;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":" * The {@code ParserUtils} class is a utility class containing common methods used across all parsing functions.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":" * These methods handle tasks such as splitting arguments, parsing integers and floats, validating indices,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":" * and formatting dates.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":" */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"public class ParserUtils {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private static final Logger logger \u003d Logger.getLogger(ParserUtils.class.getName());","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"     * Splits the argument string into the primary command and its arguments.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The full argument string provided by the user.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"     * @return A string array containing the command as the first element and the remaining arguments as the second.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"     * @throws AssertionError if {@code argumentString} is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    public static String[] splitArguments(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        String[] inputArguments \u003d argumentString.split(\" \", 2);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        String command \u003d inputArguments[0].trim();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        String args \u003d (inputArguments.length \u003e 1) ? inputArguments[1].trim() : \"\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully split arguments. Command: {0}, Arguments: {1}\",","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"                new Object[]{command, args});","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        return new String[]{command, args};","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"     * Trims the input string to remove leading and trailing whitespace.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string to trim.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"     * @return The trimmed version of {@code argumentString}.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"     * @throws IllegalArgumentException if {@code argumentString} is empty after trimming.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    static String trimInput(String argumentString) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        String trimmedString \u003d argumentString.trim();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"        if (trimmedString.isEmpty()){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Trimmed input is empty\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"            throw ParserExceptions.missingArguments();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully trimmed input: {0}\", trimmedString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        return trimmedString;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"     * Parses a string as an integer, returning a default value if the string is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"     * @param intString The string to parse as an integer.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"     * @return The parsed integer, or {@code NULL_INTEGER} if {@code intString} is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"     * @throws ParserExceptions if {@code intString} cannot be parsed as an integer.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"    public static int parseInteger(String intString){","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"        if (intString \u003d\u003d null) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Integer string is null. Returning default value: {0}\", NULL_INTEGER);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"            return NULL_INTEGER;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"        String trimmedIntString \u003d trimInput(intString);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"        try{","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"            int result \u003d Integer.parseInt(trimmedIntString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Successfully parsed integer: {0}\", result);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"            return result;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Failed to parse integer from string: {0}\", intString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"            throw ParserExceptions.invalidInt(trimmedIntString);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"     * Parses a string as a float, returning a default value if the string is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"     * @param floatString The string to parse as a float.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"     * @return The parsed float, or {@code NULL_FLOAT} if {@code floatString} is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"     * @throws ParserExceptions if {@code floatString} cannot be parsed as a float.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"    public static float parseFloat(String floatString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"        if (floatString \u003d\u003d null) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Float string is null. Returning default value: {0}\", NULL_FLOAT);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"            return NULL_FLOAT;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"        String trimmedFloatString \u003d trimInput(floatString);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"            float result \u003d Float.parseFloat(trimmedFloatString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Successfully parsed float: {0}\", result);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"            return result;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Failed to parse float from string: {0}\", floatString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"            throw ParserExceptions.invalidFloat(trimmedFloatString);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"     * Parses a string as an index, adjusting it to zero-based and returning a default if null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"     * @param indexString The string to parse as an index.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"     * @return The zero-based index, or {@code NULL_INTEGER} if {@code indexString} is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"     * @throws ParserExceptions if the index is less than zero.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"    public static int parseIndex(String indexString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"        if (indexString \u003d\u003d null) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Index string is null. Returning default value: {0}\", NULL_INTEGER);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"            return NULL_INTEGER;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"        int index \u003d parseInteger(indexString) - 1;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"        if (index \u003c 0){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Invalid index: {0}. Index must be non-negative.\", indexString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"            throw ParserExceptions.indexOutOfBounds(indexString);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully parsed index: {0}\", index);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"        return index;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nirala-ts"},"content":"     * Parses a string as a date using the specified date format. If null, returns the current date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nirala-ts"},"content":"     * @param dateString The string to parse as a date.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nirala-ts"},"content":"     * @return The parsed {@code LocalDate} object, or today\u0027s date if {@code dateString} is null.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nirala-ts"},"content":"     * @throws IllegalArgumentException if the date format is invalid.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nirala-ts"},"content":"    public static LocalDate parseDate(String dateString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nirala-ts"},"content":"        if (dateString \u003d\u003d null || dateString.trim().isEmpty()) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nirala-ts"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Date string is null/empty. Returning current date: {0}\", today);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nirala-ts"},"content":"            return today;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nirala-ts"},"content":"        String trimmedDateString \u003d trimInput(dateString);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nirala-ts"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nirala-ts"},"content":"        try {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nirala-ts"},"content":"            LocalDate date \u003d LocalDate.parse(trimmedDateString, formatter);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nirala-ts"},"content":"            ","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nirala-ts"},"content":"            String[] parts \u003d trimmedDateString.split(\"-\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nirala-ts"},"content":"            int inputDay \u003d Integer.parseInt(parts[0]);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nirala-ts"},"content":"            int inputMonth \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nirala-ts"},"content":"            // Check if the parsed date matches the input values as LocalDate.parse","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nirala-ts"},"content":"            // automatically adjusts invalid dates to the nearest valid one","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nirala-ts"},"content":"            if (date.getDayOfMonth() !\u003d inputDay || date.getMonthValue() !\u003d inputMonth) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nirala-ts"},"content":"                throw new DateTimeParseException(\"Invalid date: \" + dateString, dateString, 0);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nirala-ts"},"content":"            }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.INFO, \"Successfully parsed date: {0}\", date);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nirala-ts"},"content":"            return date;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nirala-ts"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Invalid date format: {0}. Expected format: {1}\",","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nirala-ts"},"content":"                    new Object[]{dateString, DATE_FORMAT});","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nirala-ts"},"content":"            throw ParserExceptions.invalidDate(trimmedDateString);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"nirala-ts":177}},{"path":"src/main/java/parser/command/factory/CommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":" * The {@code CommandFactory} class is responsible for creating instances of various {@code Command} objects","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":" * based on the specified command string. It serves as a central factory that distributes command creation","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":" * requests to specific factories for subcommands like \"prog,\" \"history,\" and others.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":" * For unsupported commands, it returns an {@code InvalidCommand} to handle erroneous input.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":" *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":" * \u003cp\u003eSupported Commands:\u003c/p\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eProgram Commands - handled by {@code ProgCommandFactory}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eMeal Commands - handled by {@code MealCommandFactory}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eWater Commands - handled by {@code WaterCommandFactory}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eHistory Commands - handled by {@code HistoryCommandFactory}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eExit Command - creates an {@code ExitCommand} directly\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eInvalid Command - returns an {@code InvalidCommand} for unknown inputs\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":" *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":" * @author nirala-ts","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":" */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"public class CommandFactory {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"    private final ProgCommandFactory progFactory;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"    private final MealCommandFactory mealFactory;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"    private final WaterCommandFactory waterFactory;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    private final HistoryCommandFactory historyFactory;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"     * Constructs a {@code CommandFactory} and initializes subcommand factories for handling","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"     * specific types of commands.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    public CommandFactory() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        this.progFactory \u003d new ProgCommandFactory();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"        this.mealFactory \u003d new MealCommandFactory();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        this.waterFactory \u003d new WaterCommandFactory();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        this.historyFactory \u003d new HistoryCommandFactory();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"     * Constructor for dependency injection, allowing custom instances of subcommand factories","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"     * for testing with mock objects.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"     * @param progFactory the {@code ProgCommandFactory} instance to handle \"prog\" commands","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"     * @param mealFactory the {@code MealCommandFactory} instance to handle \"meal\" commands","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"     * @param waterFactory the {@code WaterCommandFactory} instance to handle \"water\" commands","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"     * @param historyFactory the {@code HistoryCommandFactory} instance to handle \"history\" commands","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"    public CommandFactory(ProgCommandFactory progFactory, MealCommandFactory mealFactory,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"                          WaterCommandFactory waterFactory, HistoryCommandFactory historyFactory) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"        this.progFactory \u003d progFactory;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        this.mealFactory \u003d mealFactory;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        this.waterFactory \u003d waterFactory;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        this.historyFactory \u003d historyFactory;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"     * Creates and returns the appropriate {@code Command} object based on the provided command string.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"     * Delegates command parsing to the relevant subcommand factory when available. Returns an","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"     * {@code ExitCommand} for exit requests and an {@code InvalidCommand} for unsupported commands.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"     * @param commandString The main command word indicating the type of command.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The arguments provided for the command, if any.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@code Command} object corresponding to the parsed command.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    public Command createCommand(String commandString, String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"        assert commandString !\u003d null;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"        return switch (commandString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"        case ProgCommandFactory.COMMAND_WORD -\u003e progFactory.parse(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"        case MealCommandFactory.COMMAND_WORD -\u003e mealFactory.parse(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        case WaterCommandFactory.COMMAND_WORD -\u003e waterFactory.parse(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"        case HistoryCommandFactory.COMMAND_WORD -\u003e historyFactory.parse(argumentString);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"        case ExitCommand.COMMAND_WORD -\u003e new ExitCommand();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"        };","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"nirala-ts":82}},{"path":"src/main/java/parser/command/factory/HistoryCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.Command;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"import command.history.HistoryCommand;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import command.history.ViewPersonalBestCommand;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import command.history.ListPersonalBestsCommand;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"import command.history.WeeklySummaryCommand;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"import exceptions.HistoryExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":"//import parser.FlagParser;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"import static parser.ParserUtils.splitArguments;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"public class HistoryCommandFactory {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"    public Command parse(String argumentString) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"        String parsedArgument \u003d argumentString.isEmpty() ? HistoryCommand.COMMAND_WORD : argumentString;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"        String[] inputArguments \u003d splitArguments(parsedArgument);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"        String subCommandString \u003d inputArguments[0];","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"        String arguments \u003d inputArguments.length \u003e 1 ? inputArguments[1] : \"\";","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"        return switch (subCommandString) {","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"        case HistoryCommand.COMMAND_WORD -\u003e new HistoryCommand();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"        case ListPersonalBestsCommand.COMMAND_WORD -\u003e arguments.isEmpty() ?","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"            new ListPersonalBestsCommand() : new ViewPersonalBestCommand(arguments);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andreusxcarvalho"},"content":"        case WeeklySummaryCommand.COMMAND_WORD -\u003e new WeeklySummaryCommand();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"        };","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andreusxcarvalho"},"content":"    private Command preparePersonalBestCommand(String argumentString) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andreusxcarvalho"},"content":"        if (argumentString \u003d\u003d null || argumentString.isEmpty()) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andreusxcarvalho"},"content":"            throw HistoryExceptions.exerciseNameNotFound();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andreusxcarvalho"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"        return new ViewPersonalBestCommand(argumentString);  // Pass exercise name to ViewPersonalBestCommand","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":43}},{"path":"src/main/java/parser/command/factory/MealCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import command.meals.AddMealCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import command.meals.DeleteMealCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import command.meals.ViewMealCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import parser.FlagParser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static parser.FlagDefinitions.MEAL_INDEX;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static parser.ParserUtils.parseDate;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static parser.ParserUtils.splitArguments;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":" * Factory class for parsing meal-related commands.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":" * This class processes command strings and creates appropriate meal command instances.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"public class MealCommandFactory {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    public static final String COMMAND_WORD \u003d \"meal\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * Parses the argument string and returns the appropriate meal command based on the subcommand.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     * @param argumentString the argument string containing the subcommand and flags","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     * @return the corresponding Command object based on the subcommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"     *          InvalidCommand if the subcommand is unrecognized","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the argument string is null","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    public Command parse(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        String[] inputArguments \u003d splitArguments(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        String subCommandString \u003d inputArguments[0];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        String arguments \u003d inputArguments[1];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        return switch (subCommandString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        case AddMealCommand.COMMAND_WORD -\u003e prepareAddCommand(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        case DeleteMealCommand.COMMAND_WORD -\u003e prepareDeleteCommand(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        case ViewMealCommand.COMMAND_WORD -\u003e prepareViewCommand(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        };","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     * Prepares an AddMealCommand by parsing the argument string for the meal name, calories, and date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"     * @param argumentString the argument string containing flags for name, calories, and date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"     * @return an AddMealCommand containing the parsed meal details","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if required flags are missing or invalid","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    public Command prepareAddCommand(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        flagParser.validateRequiredFlags(\"/n\", \"/c\");","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        String mealName \u003d flagParser.getStringByFlag(\"/n\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        int mealCalories \u003d flagParser.getIntegerByFlag(\"/c\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        LocalDate date \u003d flagParser.getDateByFlag(\"/t\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        Meal mealToAdd \u003d new Meal(mealName, mealCalories);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        return new AddMealCommand(mealToAdd, date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"     * Prepares a DeleteMealCommand by parsing the argument string for the meal index and date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"     * @param argumentString the argument string containing flags for meal index and date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"     * @return a DeleteMealCommand containing the parsed meal index and date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the required flag is missing or invalid","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    public Command prepareDeleteCommand(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"        flagParser.validateRequiredFlags(MEAL_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"        int mealIndexToDelete \u003d flagParser.getIndexByFlag(MEAL_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"        LocalDate date \u003d flagParser.getDateByFlag(\"/t\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"        return new DeleteMealCommand(mealIndexToDelete, date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"     * Prepares a ViewMealCommand by parsing the argument string for the date.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"     * @param argumentString the argument string containing the date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"     * @return a ViewMealCommand containing the parsed date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"    public Command prepareViewCommand(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"        LocalDate date \u003d parseDate(argumentString);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"        return new ViewMealCommand(date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Atulteja":97}},{"path":"src/main/java/parser/command/factory/ProgCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.Command;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import command.programme.CreateProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import command.programme.DeleteProgrammeCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import command.programme.ViewProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import command.programme.ListProgrammeCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import command.programme.StartProgrammeCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import command.programme.LogProgrammeCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import command.programme.DeleteLogProgrammeCommand;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import command.programme.edit.EditProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import command.programme.edit.EditExerciseProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import command.programme.edit.CreateExerciseProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import command.programme.edit.DeleteExerciseProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import command.programme.edit.CreateDayProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"import command.programme.edit.DeleteDayProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"import parser.FlagParser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"import programme.ExerciseUpdate;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.DAY_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.DATE_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.EXERCISE_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.NAME_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.CALORIES_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.REPS_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.SETS_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.WEIGHT_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.PROGRAMME_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.UPDATE_EXERCISE_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.ADD_DAY_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.ADD_EXERCISE_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.REMOVE_DAY_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.REMOVE_EXERCISE_FLAG;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.parseIndex;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.splitArguments;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"import static parser.ParserUtils.parseDate;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"/**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":" * The {@code ProgCommandFactory} class is a factory responsible for creating all program-related commands.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":" * This class includes helper methods such as {@code parseDay} and {@code parseExercise} to handle","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":" * common parsing tasks across program-related commands, centralizing command creation and","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":" * simplifying command handling.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":" *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":" * \u003cp\u003eSupported Commands:\u003c/p\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eCreate program command - handled by {@link #prepareCreateCommand}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eView program command - handled by {@link #prepareViewCommand}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eEdit program and exercises command - handled by {@link #prepareEditCommand}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eStart program command - handled by {@link #prepareStartCommand}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eDelete program command - handled by {@link #prepareDeleteCommand}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":" *     \u003cli\u003eLog program activity command - handled by {@link #prepareLogCommand}\u003c/li\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":" *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":" */","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"public class ProgCommandFactory {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    public static final String COMMAND_WORD \u003d \"prog\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"    private final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"     * Parses the provided argument string to identify and create the appropriate command.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The command\u0027s argument string, which contains the subcommand and arguments.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"     * @return The created {@code Command} object based on the subcommand specified in the argument string.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"    public Command parse(String argumentString) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"        /*","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"         * Splits the full command input into the primary command and its associated arguments,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"         * enabling identification of the command category.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"         */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"        String[] inputArguments \u003d splitArguments(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"        String subCommandString \u003d inputArguments[0];","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"        String arguments \u003d inputArguments[1];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully parsed sub-command: {0}, with arguments: {1}\",","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"                new Object[]{subCommandString, arguments});","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"        return switch (subCommandString) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"        case CreateProgrammeCommand.COMMAND_WORD -\u003e prepareCreateCommand(arguments);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"        case ViewProgrammeCommand.COMMAND_WORD -\u003e prepareViewCommand(arguments);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"        case ListProgrammeCommand.COMMAND_WORD -\u003e new ListProgrammeCommand();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"        case EditProgrammeCommand.COMMAND_WORD -\u003e prepareEditCommand(arguments);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"        case StartProgrammeCommand.COMMAND_WORD -\u003e prepareStartCommand(arguments);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"        case DeleteProgrammeCommand.COMMAND_WORD -\u003e  prepareDeleteCommand(arguments);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"        case LogProgrammeCommand.COMMAND_WORD -\u003e prepareLogCommand(arguments);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"        case DeleteLogProgrammeCommand.COMMAND_WORD -\u003e prepareDeleteLogCommand(arguments);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"        };","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"     * Prepares and returns a {@link CreateProgrammeCommand} to create a new program with a specified name and days.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The argument string containing program details, including days and exercises.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@link CreateProgrammeCommand} object that represents the request to create a new program.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"     * @throws ProgrammeExceptions when programme is missing name.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"    private Command prepareCreateCommand(String argumentString) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"        // Splits the argument by DAY_FLAG to separate each day.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"        // The first element represents the program name.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"        String[] progParts \u003d argumentString.split(DAY_FLAG);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"        String progName \u003d progParts[0].trim();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"        if (progName.isEmpty()) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"            logger.log(Level.WARNING, \"Programme name is empty\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"            throw ProgrammeExceptions.programmeMissingName();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"        for (int i \u003d 1; i \u003c progParts.length; i++) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"            String dayString \u003d progParts[i].trim();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"            Day day \u003d parseDay(dayString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"            days.add(day);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully prepared CreateCommand with programme: {0}\", progName);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"        return new CreateProgrammeCommand(progName, days);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nirala-ts"},"content":"     * Prepares and returns a {@link ViewProgrammeCommand} to view a specific program by its index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string containing the program index to view.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@link ViewProgrammeCommand} initialized with the specified program index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nirala-ts"},"content":"    private Command prepareViewCommand(String argumentString) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nirala-ts"},"content":"        if (argumentString.isEmpty()) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nirala-ts"},"content":"            argumentString \u003d null;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nirala-ts"},"content":"        int progIndex \u003d parseIndex(argumentString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully prepared ViewCommand\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nirala-ts"},"content":"        return new ViewProgrammeCommand(progIndex);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nirala-ts"},"content":"     * Prepares and returns a {@link StartProgrammeCommand} to activate a specific program by its index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string containing the program index to start.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@link StartProgrammeCommand} initialized with the specified program index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nirala-ts"},"content":"    private Command prepareStartCommand(String argumentString) {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nirala-ts"},"content":"        int progIndex \u003d parseIndex(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully prepared StartCommand\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nirala-ts"},"content":"        return new StartProgrammeCommand(progIndex);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nirala-ts"},"content":"     * Prepares and returns a {@link DeleteProgrammeCommand} to remove a specific program by its index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string containing the program index to delete.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@link DeleteProgrammeCommand} initialized with the specified program index.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nirala-ts"},"content":"    private Command prepareDeleteCommand(String argumentString){","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nirala-ts"},"content":"        if (argumentString.isEmpty()) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nirala-ts"},"content":"            argumentString \u003d null;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nirala-ts"},"content":"        int progIndex \u003d parseIndex(argumentString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully prepared DeleteCommand\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nirala-ts"},"content":"        return new DeleteProgrammeCommand(progIndex);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nirala-ts"},"content":"     * Prepares and returns a {@link LogProgrammeCommand} to log activity in a specific program on a particular date.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string containing flags for the date, program index, and day index.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nirala-ts"},"content":"     * @return A {@link LogProgrammeCommand} initialized with the specified date and indices.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nirala-ts"},"content":"     * @throws IllegalArgumentException If required flags are missing.","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nirala-ts"},"content":"    public Command prepareLogCommand(String argumentString) {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nirala-ts"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nirala-ts"},"content":"        flagParser.validateRequiredFlags(DAY_FLAG);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nirala-ts"},"content":"        LocalDate date \u003d flagParser.getDateByFlag(DATE_FLAG);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nirala-ts"},"content":"        int progIndex \u003d flagParser.getIndexByFlag(PROGRAMME_FLAG);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nirala-ts"},"content":"        int dayIndex \u003d flagParser.getIndexByFlag(DAY_FLAG);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully prepared LogCommand with Date: {0}, \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nirala-ts"},"content":"                        \"Programme index: {1}, Day index: {2}\", new Object[]{progIndex, dayIndex, date});","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"nirala-ts"},"content":"        return new LogProgrammeCommand(progIndex, dayIndex, date);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"TVageesan"},"content":"    // @@author TVageesan","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"TVageesan"},"content":"     * Prepares a command to delete a log entry based on the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"TVageesan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"TVageesan"},"content":"     * This method parses the given argument string to obtain a date, which is then used","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"TVageesan"},"content":"     * to create a {@code DeleteLogProgrammeCommand} with the specified date.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"TVageesan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"TVageesan"},"content":"     * @param argumentString the string representing the date to be parsed and deleted","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"TVageesan"},"content":"     * @return a {@code DeleteLogProgrammeCommand} configured with the parsed date","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"TVageesan"},"content":"     * @throws IllegalArgumentException if the date format in {@code argumentString} is invalid","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"TVageesan"},"content":"    private Command prepareDeleteLogCommand(String argumentString){","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"TVageesan"},"content":"        LocalDate date \u003d parseDate(argumentString);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"TVageesan"},"content":"        return new DeleteLogProgrammeCommand(date);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"TVageesan"},"content":"     * Prepares and returns an appropriate {@link EditProgrammeCommand} based on the flags parsed","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"TVageesan"},"content":"     * from the provided argument string.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"TVageesan"},"content":"     * @param argumentString A {@link String} containing arguments to parse.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"TVageesan"},"content":"     * @return The specific {@link EditProgrammeCommand} object that corresponds to the flag detected.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"TVageesan"},"content":"     * @throws ProgrammeExceptions If no recognized edit command flag is present in the argument string.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"TVageesan"},"content":"    private EditProgrammeCommand prepareEditCommand(String argumentString) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"TVageesan"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"TVageesan"},"content":"        /*","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"TVageesan"},"content":"         * Parse by flags except for all exercise related flags,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"TVageesan"},"content":"         * preserving exercise arguments in one string for later parsing if needed","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"TVageesan"},"content":"         */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"TVageesan"},"content":"        FlagParser flagParser \u003d new FlagParser (","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"TVageesan"},"content":"                argumentString,","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"TVageesan"},"content":"                NAME_FLAG, REPS_FLAG,SETS_FLAG,WEIGHT_FLAG,EXERCISE_FLAG,CALORIES_FLAG","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"TVageesan"},"content":"        if (flagParser.hasFlag(UPDATE_EXERCISE_FLAG)) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"TVageesan"},"content":"            return prepareEditExerciseCommand(flagParser);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"TVageesan"},"content":"        if (flagParser.hasFlag(ADD_EXERCISE_FLAG)) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"TVageesan"},"content":"            return prepareCreateExerciseCommand(flagParser);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"TVageesan"},"content":"        if (flagParser.hasFlag(REMOVE_EXERCISE_FLAG)) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"TVageesan"},"content":"            return prepareDeleteExerciseCommand(flagParser);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"TVageesan"},"content":"        if (flagParser.hasFlag(ADD_DAY_FLAG)) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"TVageesan"},"content":"            return prepareCreateDayCommand(flagParser);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"TVageesan"},"content":"        if (flagParser.hasFlag(REMOVE_DAY_FLAG)) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"TVageesan"},"content":"            return prepareDeleteDayCommand(flagParser);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"TVageesan"},"content":"        throw ProgrammeExceptions.programmeEditMissingFlags();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"TVageesan"},"content":"     * Creates and returns an {@link EditExerciseProgrammeCommand} for updating an exercise in a program.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"TVageesan"},"content":"     * @author TVageesan","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"TVageesan"},"content":"     * @param flagParser A {@link FlagParser} containing parsed flags and arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"TVageesan"},"content":"     * @return An {@link EditExerciseProgrammeCommand} object to edit an existing exercise.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"TVageesan"},"content":"     * @throws IllegalArgumentException If required flags are missing.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"TVageesan"},"content":"    private EditExerciseProgrammeCommand prepareEditExerciseCommand(FlagParser flagParser) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"TVageesan"},"content":"        assert flagParser !\u003d null: \"flagParser must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"TVageesan"},"content":"        flagParser.validateRequiredFlags(DAY_FLAG);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"TVageesan"},"content":"        String editString \u003d flagParser.getStringByFlag(UPDATE_EXERCISE_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"TVageesan"},"content":"        String[] editParts \u003d splitArguments(editString);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"TVageesan"},"content":"        int exerciseIndex \u003d parseIndex(editParts[0]);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"TVageesan"},"content":"        String exerciseString \u003d editParts[1];","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"TVageesan"},"content":"        return new EditExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"TVageesan"},"content":"            flagParser.getIndexByFlag(PROGRAMME_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"TVageesan"},"content":"            flagParser.getIndexByFlag(DAY_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"TVageesan"},"content":"            exerciseIndex,","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"TVageesan"},"content":"            parseExerciseUpdate(exerciseString)","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"TVageesan"},"content":"     * Creates and returns a {@link CreateExerciseProgrammeCommand} for adding a new exercise to a day in a program.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"TVageesan"},"content":"     * @param flagParser A {@link FlagParser} containing parsed flags and arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"TVageesan"},"content":"     * @return A {@link CreateExerciseProgrammeCommand} object to create a new exercise.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"TVageesan"},"content":"     * @throws IllegalArgumentException If required flags are missing.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"TVageesan"},"content":"    private CreateExerciseProgrammeCommand prepareCreateExerciseCommand(FlagParser flagParser) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"TVageesan"},"content":"        assert flagParser !\u003d null: \"flagParser must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"TVageesan"},"content":"        flagParser.validateRequiredFlags(DAY_FLAG);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"TVageesan"},"content":"        String exerciseString \u003d flagParser.getStringByFlag(ADD_EXERCISE_FLAG);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"TVageesan"},"content":"        return new CreateExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"TVageesan"},"content":"            flagParser.getIndexByFlag(PROGRAMME_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"TVageesan"},"content":"            flagParser.getIndexByFlag(DAY_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"TVageesan"},"content":"            parseExercise(exerciseString)","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"TVageesan"},"content":"     * Creates and returns a {@link DeleteExerciseProgrammeCommand} for removing an exercise from a day in a program.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"TVageesan"},"content":"     * @param flagParser A {@link FlagParser} containing parsed flags and arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"TVageesan"},"content":"     * @return A {@link DeleteExerciseProgrammeCommand} object to delete an existing exercise.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"TVageesan"},"content":"     * @throws IllegalArgumentException If required flags are missing.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"TVageesan"},"content":"    private DeleteExerciseProgrammeCommand prepareDeleteExerciseCommand(FlagParser flagParser) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"TVageesan"},"content":"        assert flagParser !\u003d null: \"flagParser must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"TVageesan"},"content":"        flagParser.validateRequiredFlags(DAY_FLAG, REMOVE_EXERCISE_FLAG);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"TVageesan"},"content":"        return new DeleteExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIndexByFlag(PROGRAMME_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIndexByFlag(DAY_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIndexByFlag(REMOVE_EXERCISE_FLAG)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"TVageesan"},"content":"     * Creates and returns a {@link CreateDayProgrammeCommand} for adding a new day to a program.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"TVageesan"},"content":"     * @param flagParser A {@link FlagParser} containing parsed flags and arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"TVageesan"},"content":"     * @return A {@link CreateDayProgrammeCommand} object to create a new day.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"TVageesan"},"content":"    private CreateDayProgrammeCommand prepareCreateDayCommand(FlagParser flagParser) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"TVageesan"},"content":"        assert flagParser !\u003d null: \"flagParser must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"TVageesan"},"content":"        String dayString \u003d flagParser.getStringByFlag(ADD_DAY_FLAG);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"TVageesan"},"content":"        return new CreateDayProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIndexByFlag(PROGRAMME_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"TVageesan"},"content":"                parseDay(dayString)","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"TVageesan"},"content":"     * Creates and returns a {@link DeleteDayProgrammeCommand} for removing a day from a program.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"TVageesan"},"content":"     * @param flagParser A {@link FlagParser} containing parsed flags and arguments.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"TVageesan"},"content":"     * @return A {@link DeleteDayProgrammeCommand} object to delete an existing day.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"TVageesan"},"content":"     * @throws IllegalArgumentException If required flags are missing.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"TVageesan"},"content":"    private DeleteDayProgrammeCommand prepareDeleteDayCommand(FlagParser flagParser) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"TVageesan"},"content":"        assert flagParser !\u003d null: \"flagParser must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"TVageesan"},"content":"        flagParser.validateRequiredFlags(REMOVE_DAY_FLAG);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"TVageesan"},"content":"        return new DeleteDayProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIndexByFlag(PROGRAMME_FLAG),","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIndexByFlag(REMOVE_DAY_FLAG)","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"TVageesan"},"content":"    private ExerciseUpdate parseExerciseUpdate(String argumentString){","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"TVageesan"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"TVageesan"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"TVageesan"},"content":"        return new ExerciseUpdate(","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIntegerByFlag(SETS_FLAG),","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIntegerByFlag(REPS_FLAG),","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIntegerByFlag(WEIGHT_FLAG),","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"TVageesan"},"content":"                flagParser.getIntegerByFlag(CALORIES_FLAG),","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"TVageesan"},"content":"                flagParser.getStringByFlag(NAME_FLAG)","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"nirala-ts"},"content":"    // @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"nirala-ts"},"content":"     * Parses a string of day related arguments and returns a Day object.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"nirala-ts"},"content":"     * @param dayString the input string representing a day and its exercises, not null.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"nirala-ts"},"content":"     * @return a Day object representing the parsed day and its exercises.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"nirala-ts"},"content":"     * @throws IllegalArgumentException if there are missing arguments to create a day.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"nirala-ts"},"content":"     */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"nirala-ts"},"content":"    private Day parseDay(String dayString) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"nirala-ts"},"content":"        assert dayString !\u003d null : \"Day string must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"nirala-ts"},"content":"        String[] dayParts  \u003d dayString.split(EXERCISE_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"nirala-ts"},"content":"        String dayName \u003d dayParts[0].trim();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"nirala-ts"},"content":"        if (dayName.isEmpty()) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"nirala-ts"},"content":"            throw ProgrammeExceptions.missingDayName();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"nirala-ts"},"content":"        Day day \u003d new Day(dayName);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"nirala-ts"},"content":"        for (int j \u003d 1; j \u003c dayParts.length; j++) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"nirala-ts"},"content":"            String exerciseString \u003d dayParts[j].trim();","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"nirala-ts"},"content":"            Exercise exercise \u003d parseExercise(exerciseString);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"nirala-ts"},"content":"            day.insertExercise(exercise);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"nirala-ts"},"content":"        }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Parsed day successfully: {0}\", dayName);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"nirala-ts"},"content":"        return day;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"nirala-ts"},"content":"    // @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"nirala-ts"},"content":"    /**","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"nirala-ts"},"content":"     * Parses an exercise string to create an {@link Exercise} object with required attributes.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"nirala-ts"},"content":"     *","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"nirala-ts"},"content":"     * @param argumentString The string containing exercise details and flags.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"nirala-ts"},"content":"     * @return An {@link Exercise} object initialized with the specified attributes.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"nirala-ts"},"content":"     * @throws IllegalArgumentException If required flags are missing.","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"nirala-ts"},"content":"     * */","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"nirala-ts"},"content":"    private Exercise parseExercise(String argumentString) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"nirala-ts"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"nirala-ts"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"nirala-ts"},"content":"        // Ensures the exercise contains all necessary information before creating a new Exercise","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"nirala-ts"},"content":"        flagParser.validateRequiredFlags(SETS_FLAG, REPS_FLAG, WEIGHT_FLAG, CALORIES_FLAG, NAME_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"nirala-ts"},"content":"        int sets \u003d flagParser.getIntegerByFlag(SETS_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"nirala-ts"},"content":"        int reps \u003d flagParser.getIntegerByFlag(REPS_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"nirala-ts"},"content":"        int weight \u003d flagParser.getIntegerByFlag(WEIGHT_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"nirala-ts"},"content":"        int calories \u003d flagParser.getIntegerByFlag(CALORIES_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"nirala-ts"},"content":"        String name \u003d flagParser.getStringByFlag(NAME_FLAG);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"nirala-ts"},"content":"        logger.log(Level.INFO, \"Successfully parsed exercise details - Name: {0}, Sets: {1}, Reps: {2}, \" +","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"nirala-ts"},"content":"                \"Weight: {3}, Calories: {4}\", new Object[]{name, sets, reps, weight, calories});","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"nirala-ts"},"content":"        return new Exercise(sets, reps, weight, calories, name);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"nirala-ts":267,"TVageesan":171}},{"path":"src/main/java/parser/command/factory/WaterCommandFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import command.Command;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import command.water.AddWaterCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import command.water.DeleteWaterCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import command.water.ViewWaterCommand;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import parser.FlagParser;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import static parser.FlagDefinitions.VOLUME_FLAG;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"import static parser.FlagDefinitions.WATER_INDEX;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"import static parser.ParserUtils.parseDate;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"import static parser.ParserUtils.splitArguments;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":" * A factory class to create and return specific water-related commands based on input arguments.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"public class WaterCommandFactory {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    public static final String COMMAND_WORD \u003d \"water\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"     * Parses the argument string to determine which water-related command to create.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * The first word of the argument string is used to identify the specific command (e.g., add, delete, view).","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"     * @param argumentString the input arguments provided by the user","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"     * @return a {@code Command} object representing the water command to be executed","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * @throws AssertionError if {@code argumentString} is null","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    public Command parse(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"        assert argumentString !\u003d null : \"Argument string must not be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        String[] inputArguments \u003d splitArguments(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        String subCommandString \u003d inputArguments[0];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"        String arguments \u003d inputArguments[1];","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"        return switch (subCommandString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"        case AddWaterCommand.COMMAND_WORD -\u003e prepareAddCommand(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"        case DeleteWaterCommand.COMMAND_WORD -\u003e prepareDeleteCommand(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"        case ViewWaterCommand.COMMAND_WORD -\u003e prepareViewCommand(arguments);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"        default -\u003e new InvalidCommand();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"        };","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"     * Prepares the AddWaterCommand by parsing the volume of water to be added and date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"     * @param argumentString the argument string containing the flags and values","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"     * @return an {@code AddWaterCommand} with the parsed water volume and date","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"     * @throws IllegalArgumentException if required flags are missing","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    public Command prepareAddCommand(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        flagParser.validateRequiredFlags(VOLUME_FLAG);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"        float water \u003d flagParser.getFloatByFlag(VOLUME_FLAG);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"        LocalDate date \u003d flagParser.getDateByFlag(\"/t\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"        return new AddWaterCommand(water, date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"     * Prepares the DeleteWaterCommand by parsing the index of water to be deleted and the date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"     * @param argumentString the argument string containing the flags and values","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"     * @return a {@code DeleteWaterCommand} with the parsed index and date","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"     * @throws IllegalArgumentException if required flags are missing","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"    public Command prepareDeleteCommand(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"        FlagParser flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"        flagParser.validateRequiredFlags(WATER_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"        int waterIndexToDelete \u003d flagParser.getIndexByFlag(WATER_INDEX);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"        LocalDate date \u003d flagParser.getDateByFlag(\"/t\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"        return new DeleteWaterCommand(waterIndexToDelete, date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"     * Prepares the ViewWaterCommand to view water logs for a specific date.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"     * @param argumentString the argument string containing the date","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"     * @return a {@code ViewWaterCommand} with the parsed date","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"    public Command prepareViewCommand(String argumentString) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"        LocalDate date \u003d parseDate(argumentString);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"        return new ViewWaterCommand(date);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Bev-low":93}},{"path":"src/main/java/programme/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package programme;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":" * Represents a day in a workout programme, containing a list of exercises.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * Provides methods to add, delete, and retrieve exercises, as well as calculate the total calories burnt.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"public class Day {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(Day.class.getName());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private final String name;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private final ArrayList\u003cExercise\u003e exercises;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * Constructs a Day with a specified name and an empty list of exercises.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @param name the name of the day","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the name is null or empty","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    public Day(String name){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        assert name !\u003d null \u0026\u0026 !name.isEmpty() : \"Name cannot be null or empty\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        this.exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Day created with empty exercise list: {0}\", this);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"     * Constructs a Day with a specified name and a list of exercises.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     * @param name      the name of the day","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"     * @param exercises the list of exercises for the day","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the name is null or empty, or if exercises is null","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    public Day(String name, ArrayList\u003cExercise\u003e exercises) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        assert name !\u003d null \u0026\u0026 !name.isEmpty() : \"Name cannot be null or empty\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        assert exercises !\u003d null : \"Exercises list cannot be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        this.exercises \u003d exercises;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Day created: {0}\", this);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    public String getName() {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        return name;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"    public int getExercisesCount() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Number of exercises: {0}\", exercises.size());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        return exercises.size();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"     * Returns the exercise at the specified index.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the exercise to retrieve","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"     * @return the exercise at the specified index","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"     * @throws ProgrammeExceptions if the index is out of bounds","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    public Exercise getExercise(int index){","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d exercises.size()) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"exercise\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Retrieving exercise at index {0}: {1}\", new Object[]{index, exercises.get(index)});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"        return exercises.get(index);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"     * Inserts an exercise into the day\u0027s exercise list.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"     * @param exercise the exercise to insert","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the exercise is null","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"    public void insertExercise(Exercise exercise) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"        assert exercise !\u003d null : \"Exercise to insert cannot be null\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"        exercises.add(exercise);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Inserted exercise {0}\", exercise);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"     * Deletes the exercise at the specified index.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the exercise to delete","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"     * @return the deleted exercise","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"     * @throws ProgrammeExceptions if the index is out of bounds","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"    public Exercise deleteExercise(int index) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d exercises.size()) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"exercise\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"        Exercise toBeDeleted \u003d exercises.get(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"        exercises.remove(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Deleted exercise at index {0}: {1}\", new Object[]{index, toBeDeleted});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"        return toBeDeleted;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"     * Calculates the total calories burnt from all exercises in the day.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"     * @return the total calories burnt","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"    public int getTotalCaloriesBurnt(){","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Atulteja"},"content":"        int totalCalories \u003d 0;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Atulteja"},"content":"        for (Exercise exercise : exercises) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Atulteja"},"content":"            totalCalories +\u003d exercise.getCalories();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Atulteja"},"content":"        return totalCalories;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Atulteja"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Atulteja"},"content":"        result.append(name).append(\"\\n\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Atulteja"},"content":"        for (int i \u003d 0; i \u003c      exercises.size(); i++) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"            Exercise exercise \u003d exercises.get(i);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"            result.append(String.format(\"%d. %s%n\", i + 1, exercise));","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Atulteja"},"content":"        return result.toString();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(name, exercises);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Atulteja"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Atulteja"},"content":"        Day day \u003d (Day) o;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Atulteja"},"content":"        return Objects.equals(name, day.name) \u0026\u0026","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Atulteja"},"content":"                Objects.equals(exercises, day.exercises);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"Atulteja":152}},{"path":"src/main/java/programme/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package programme;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import java.util.Objects;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import static common.Utils.isNull;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" * Represents an exercise with sets, reps, weight, calories burned, and a name.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":" * Provides methods to update individual fields and retrieve key details.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"public class Exercise {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(Exercise.class.getName());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private int sets;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    private int reps;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private int weight;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private int calories;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private String name;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * Constructs an Exercise with the specified details.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * @param sets     the number of sets for the exercise","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     * @param reps     the number of reps for each set","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     * @param weight   the weight used for the exercise","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     * @param calories the calories burned by the exercise","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"     * @param name     the name of the exercise","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    public Exercise(int sets, int reps, int weight, int calories, String name) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Exercise created: {0}\", this);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"    // @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"     * Updates the current Exercise\u0027s fields based on the non-null values in the provided ExerciseUpdate object.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"     * For each non-null field in the UpdateExercise object, the corresponding field in this Exercise is updated.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"     * @param update the ExerciseUpdate containing fields to be updated in this Exercise.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    public void updateExercise(ExerciseUpdate update) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        assert update !\u003d null : \"ExerciseUpdate object must be provided\";","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        updateSets(update.sets);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"        updateReps(update.reps);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"        updateWeight(update.weight);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"        updateName(update.name);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"        updateCalories(update.calories);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"     * Updates the number of sets for this exercise.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"     * @param newSets the new number of sets; if null, the sets are not updated","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    private void updateSets(Integer newSets) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"        if (newSets \u003d\u003d null) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"            return;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"Updating sets from {0} to {1}\", new Object[]{sets, newSets});","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"        sets \u003d newSets;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TVageesan"},"content":"     * Updates the number of reps for this exercise.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"     * @param newReps the new number of reps; if null, the reps are not updated","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TVageesan"},"content":"    private void updateReps(Integer newReps) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TVageesan"},"content":"        if (newReps \u003d\u003d null) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"            return;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"Updating reps from {0} to {1}\", new Object[]{reps, newReps});","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TVageesan"},"content":"        reps \u003d newReps;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"     * Updates the weight for this exercise.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TVageesan"},"content":"     * @param newWeight the new weight; if null, the weight is not updated","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"    private void updateWeight(Integer newWeight) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TVageesan"},"content":"        if (newWeight \u003d\u003d null) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TVageesan"},"content":"            return;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"Updating weight from {0} to {1}\", new Object[]{weight, newWeight});","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TVageesan"},"content":"        weight \u003d newWeight;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TVageesan"},"content":"     * Updates the name of this exercise.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TVageesan"},"content":"     * @param newName the new name; if null, the name is not updated","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TVageesan"},"content":"    private void updateName(String newName) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TVageesan"},"content":"        if (isNull(newName)) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TVageesan"},"content":"            return;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"Updating name from {0} to {1}\", new Object[]{name, newName});","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TVageesan"},"content":"        name \u003d newName;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TVageesan"},"content":"     * Updates the calories burned for this exercise.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TVageesan"},"content":"     * @param newCalories the new calorie count for the exercise; if null, the calories are not updated","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TVageesan"},"content":"    private void updateCalories(Integer newCalories) {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TVageesan"},"content":"        if (newCalories \u003d\u003d null) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TVageesan"},"content":"            return;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TVageesan"},"content":"        logger.log(Level.INFO, \"Updating calories from {0} to {1}\", new Object[]{calories, newCalories});","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TVageesan"},"content":"        calories \u003d newCalories;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"    // @@author Atulteja","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Atulteja"},"content":"    public int getCalories() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Atulteja"},"content":"        return calories;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Atulteja"},"content":"    public int getWeight() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Atulteja"},"content":"        return weight;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Atulteja"},"content":"    public String getName() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Atulteja"},"content":"        return name;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Atulteja"},"content":"     * Returns a string representation of the exercise, including name, sets, reps, weight, and calories burned.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Atulteja"},"content":"     * @return a string representation of the exercise","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Atulteja"},"content":"        return String.format(\"%s: %d sets of %d at %dkg | Burnt %d cals\", name, sets, reps, weight, calories);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Atulteja"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Atulteja"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Atulteja"},"content":"            return true;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Atulteja"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Atulteja"},"content":"            return false;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Atulteja"},"content":"        Exercise exercise \u003d (Exercise) o;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Atulteja"},"content":"        return sets \u003d\u003d exercise.sets \u0026\u0026","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Atulteja"},"content":"                reps \u003d\u003d exercise.reps \u0026\u0026","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Atulteja"},"content":"                weight \u003d\u003d exercise.weight \u0026\u0026","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Atulteja"},"content":"                calories \u003d\u003d exercise.calories \u0026\u0026","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Atulteja"},"content":"                Objects.equals(name, exercise.name);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Atulteja"},"content":"    public int hashCode() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Atulteja"},"content":"        return Objects.hash(sets, reps, weight, calories, name);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-20","isFullCredit":false}],"authorContributionMap":{"TVageesan":85,"Atulteja":88}},{"path":"src/main/java/programme/ExerciseUpdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@author TVageesan","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"package programme;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"/**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":" * Represents an immutable set of updates for an Exercise object.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":" * This class encapsulates the data fields to update specific attributes of an Exercise.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":" * Any field with a non-null value indicates a field to be updated in the target Exercise.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":" */","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"public class ExerciseUpdate {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    protected final Integer sets;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    protected final Integer reps;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    protected final Integer weight;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    protected final Integer calories;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    protected final String name;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    /**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"     * Constructs an ExerciseUpdate with specified fields. Each non-null parameter","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"     * represents a field intended to be updated in the target Exercise.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"     *","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"     * @param sets     the updated number of sets, or null if not updating","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"     * @param reps     the updated number of reps, or null if not updating","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"     * @param weight   the updated weight, or null if not updating","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"     * @param calories the updated calorie count, or null if not updating","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"     * @param name     the updated name, or null if not updating","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"     */","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"    public ExerciseUpdate(Integer sets, Integer reps, Integer weight, Integer calories, String name) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        this.sets \u003d sets;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        this.reps \u003d reps;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-30","isFullCredit":false}],"authorContributionMap":{"TVageesan":37}},{"path":"src/main/java/programme/Programme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"package programme;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":" * Represents a Programme consisting of multiple days, each containing exercises.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":" * Provides functionality to add, retrieve, and delete days, as well as access programme information.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"public class Programme {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(Programme.class.getName());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private final String programmeName;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private final ArrayList\u003cDay\u003e dayList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"     * Constructs a Programme with the specified name and a list of days.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"     * @param programmeName the name of the programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * @param dayList       the list of days in the programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the programme name is null/empty or dayList is null","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public Programme(String programmeName, ArrayList\u003cDay\u003e dayList) {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        assert programmeName !\u003d null \u0026\u0026 !programmeName.isEmpty() : \"Programme name cannot be null or empty\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        assert dayList !\u003d null : \"Day list cannot be null\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        this.programmeName \u003d programmeName;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        this.dayList \u003d dayList;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Programme created: {0}\", this);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    public String getProgrammeName() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        return programmeName;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"     * Retrieves the day at the specified index.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the day to retrieve","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"     * @return the Day at the specified index","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"     * @throws ProgrammeExceptions if the index is out of bounds for the day list","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    public Day getDay(int index){","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d dayList.size()) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index: {0} for getDay()\", index);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"day\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Retrieving day at index {0}: {1}\", new Object[]{index, dayList.get(index)});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        return dayList.get(index);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"     * Inserts a new day into the programme.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"     * @param day the day to insert","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the day is null","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    public void insertDay(Day day) {","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        assert day !\u003d null : \"Day to insert cannot be null\";","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Inserting day: {0}\", day);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        dayList.add(day);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    public int getDayCount() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Getting day count: {0}\", dayList.size());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        return dayList.size();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"     * Deletes the day at the specified index.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the day to delete","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"     * @return the Day that was deleted","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"     * @throws ProgrammeExceptions if the index is out of bounds for the day list","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"    public Day deleteDay(int index){","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d dayList.size()) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index: {0} for deleteDay()\", index);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"day\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"        Day toBeDeleted \u003d dayList.get(index);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"        dayList.remove(index);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Deleted day at index {0}: {1}\", new Object[]{index, toBeDeleted});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"        return toBeDeleted;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"     * Returns a string representation of the programme, including its name and all days.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"     * @return a string representation of the programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"        str.append(programmeName).append(\"\\n\\n\");","lastModifiedDate":"2024-10-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"        for (int i \u003d 0; i \u003c dayList.size(); i++) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"            str.append(\"Day \").append(i+1).append(\": \").append(dayList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"        return str.toString();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-07","isFullCredit":false}],"authorContributionMap":{"Atulteja":113}},{"path":"src/main/java/programme/ProgrammeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"package programme;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import static common.Utils.NULL_INTEGER;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":" * Represents a list of Programmes, providing functionality to add, retrieve, delete, and start a Programme.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":" * Maintains the current active Programme and supports basic Programme management operations.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"public class ProgrammeList {","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(ProgrammeList.class.getName());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    int currentActiveProgramme;","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private final ArrayList\u003cProgramme\u003e programmeList;","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * Constructs an empty ProgrammeList.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    public ProgrammeList() {","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        programmeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"ProgrammeList created with an empty list.\");","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    public ArrayList\u003cProgramme\u003e getProgrammeList() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        return programmeList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    public int getProgrammeListSize(){","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Getting programme list size: {0}\", programmeList.size());","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        return programmeList.size();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"     * Inserts a new Programme into the Programme list with the specified name and days.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"     * @param programmeName the name of the Programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"     * @param days          the list of days associated with the Programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"     * @return the Programme that was added","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    public Programme insertProgramme(String programmeName, ArrayList\u003cDay\u003e days) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        Programme programmeToAdd \u003d new Programme(programmeName, days);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        programmeList.add(programmeToAdd);","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        return programmeToAdd;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"     * Deletes a Programme at the specified index or at the current active Programme if index is NULL_INTEGER.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the Programme to delete, or NULL_INTEGER to delete the active Programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"     * @return the Programme that was deleted","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds for the Programme list","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    public Programme deleteProgram(int index){","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        if (index \u003d\u003d NULL_INTEGER){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"            index \u003d currentActiveProgramme;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d programmeList.size()) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index: {0} for deleteProgram()\", index);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"programme\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        Programme programmeToDelete \u003d programmeList.get(index);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        programmeList.remove(index);","lastModifiedDate":"2024-10-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Deleted programme at index {0}: {1}\", new Object[]{index, programmeToDelete});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"        return programmeToDelete;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"     * Retrieves a Programme at the specified index or at the current active Programme if index is NULL_INTEGER.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the Programme to retrieve, or NULL_INTEGER to retrieve the active Programme","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"     * @return the Programme at the specified index","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds for the Programme list","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"    public Programme getProgramme(int index){","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"        if (index \u003d\u003d NULL_INTEGER){","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"            index \u003d currentActiveProgramme;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d programmeList.size()) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index: {0} for getProgramme()\", index);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"programme\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Retrieving programme at index {0}: {1}\", new Object[]{index, programmeList.get(index)});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"        return programmeList.get(index);","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"     * Sets a Programme at the specified index as the current active Programme.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Atulteja"},"content":"     * @param startIndex the index of the Programme to start","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"     * @return the Programme that was started","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"     * @throws IndexOutOfBoundsException if the startIndex is out of bounds for the Programme list","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"    public Programme startProgramme(int startIndex) {","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"        if (startIndex \u003c 0 || startIndex \u003e\u003d programmeList.size()) {","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index: {0} for startProgramme()\", startIndex);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"            throw ProgrammeExceptions.doesNotExist(\"programme\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"        currentActiveProgramme \u003d startIndex;","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"        Programme activeProgramme \u003d programmeList.get(currentActiveProgramme);","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Started programme at index {0}: {1}\", new Object[]{startIndex, activeProgramme});","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Atulteja"},"content":"        return activeProgramme;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Atulteja"},"content":"     * Returns a string representation of the Programme list, indicating the active Programme.","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Atulteja"},"content":"     * @return a string representation of the Programme list","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Atulteja"},"content":"        if (programmeList.isEmpty()){","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Atulteja"},"content":"            return \"No programmes found.\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Atulteja"},"content":"        for (int i \u003d 0; i \u003c programmeList.size(); i++) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Atulteja"},"content":"            Programme programme \u003d programmeList.get(i);","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Atulteja"},"content":"            str.append(i + 1).append(\". \").append(programme.getProgrammeName());","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Atulteja"},"content":"            if (i \u003d\u003d currentActiveProgramme) {","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Atulteja"},"content":"                str.append(\" -- Active\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Atulteja"},"content":"            }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Atulteja"},"content":"            str.append(\"\\n\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Atulteja"},"content":"        return str.toString();","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-03","isFullCredit":false}],"authorContributionMap":{"Atulteja":141}},{"path":"src/main/java/storage/DateSerializer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package storage;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":" * A custom serializer and deserializer for {@link LocalDate} objects, formatting dates as","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":" * {@code dd-MM-yyyy} for JSON serialization and deserialization.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":" * This class implements {@link JsonSerializer} and {@link JsonDeserializer} to convert","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":" * {@code LocalDate} objects to and from JSON strings in a specific date format.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"public class DateSerializer implements JsonSerializer\u003cLocalDate\u003e, JsonDeserializer\u003cLocalDate\u003e {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"     * Serializes a {@code LocalDate} object into a JSON string using the {@code dd-MM-yyyy} format.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"     * @param src the {@code LocalDate} to serialize, must not be {@code null}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"     * @param typeOfSrc the type of the source object","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * @param context the serialization context","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     * @return a {@link JsonElement} containing the formatted date string","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    public JsonElement serialize(LocalDate src, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        assert src !\u003d null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        return new JsonPrimitive(src.format(formatter));  ","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * Deserializes a JSON string into a {@code LocalDate} object using the {@code dd-MM-yyyy} format.","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * @param json the JSON element containing the date string","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     * @param typeOfT the type of the object to deserialize","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     * @param context the deserialization context","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"     * @return a {@code LocalDate} parsed from the JSON string","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    @Override","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"    public LocalDate deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        return LocalDate.parse(json.getAsString(), formatter);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-15","isFullCredit":false}],"authorContributionMap":{"Bev-low":51}},{"path":"src/main/java/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package storage;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonParser;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import exceptions.StorageExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"import java.io.File;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"/**","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":" * Represents the FileManager system for saving and loading tasks.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":" * The \u003ccode\u003eFileManager\u003c/code\u003e class handles reading from and writing to the file specified by the user.","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":" */","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"public class FileManager {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    private final String path;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"    private final Logger logger \u003d Logger.getLogger(this.getClass().getName());","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"     * Constructs a FileManager with a specified file path.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     * @param path the path to the file for storing data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"    public FileManager(String path) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"     * Loads the JSON object containing the programme list from the data loaded by the {@link #load()} method.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * This method retrieves the \"programmeList\" section from the JSON data. If the \"programmeList\" section","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     * is not found, returns an empty JSON object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     * @return the JSON object containing the programme list if available, or an empty JSON object if not found","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    public JsonObject loadProgrammeList() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"        try {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"            JsonObject jsonObject \u003d load();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"            if (jsonObject \u003d\u003d null || !jsonObject.has(\"programmeList\")) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"                logger.log(Level.INFO, \"No programme list found.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"                return new JsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.INFO, \"Programme list Loaded\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"            return jsonObject.getAsJsonObject(\"programmeList\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.WARNING, \"Failed to load programme list: \" + e.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"            return new JsonObject();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"     * Loads the JSON object containing the history from the data loaded by the {@link #load()} method.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"     * This method retrieves the \"history\" section from the JSON data. If the \"history\" section","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"     * is not found, returns an empty JSON object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"     * @return the JSON object containing the history if available, or an empty JSON object if not found","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"    public JsonObject loadHistory() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"        try {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"            JsonObject jsonObject \u003d load();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"            if (jsonObject \u003d\u003d null || !jsonObject.has(\"history\")) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"                logger.log(Level.INFO, \"No history found.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"                return new JsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.INFO, \"History Loaded\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"            return jsonObject.getAsJsonObject(\"history\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.WARNING, \"Failed to load history: \" + e.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"            return new JsonObject();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"     * Loads data from the file specified by the path and converts it to a JSON object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"     * This method attempts to read the file at the specified path and parse its contents as a JSON object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"     * If the file is empty or contains no data, an empty JSON object is returned. Any I/O errors encountered","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"     * during file reading will result in a {@link StorageExceptions}.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"     * @return a JSON object containing the data loaded from the file, or an empty JSON object if the file is empty","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"     * @throws StorageExceptions if an I/O error occurs during loading","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"    private JsonObject load() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"Attempting to load data from file: \" + path);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"        try (FileReader reader \u003d new FileReader(path)){","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"            JsonElement element \u003d JsonParser.parseReader(reader);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"            if(element \u003d\u003d null || element.isJsonNull()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"                logger.info(\"No data found\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"                return new JsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"            }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"Data successfully loaded from file\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"            return element.getAsJsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"        } catch(Exception e){","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.WARNING, \"Failed to load data from file: \" + path, e);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bev-low"},"content":"            return new JsonObject();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Bev-low"},"content":"     * Saves the specified JSON object to the file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Bev-low"},"content":"     * This method writes the contents of the provided JSON object to the file specified by the path.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Bev-low"},"content":"     * If the directory or file does not exist, it attempts to create them before writing. The data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Bev-low"},"content":"     * is saved in a pretty-printed JSON format for readability.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Bev-low"},"content":"     * @param data the JSON object containing the data to be saved","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Bev-low"},"content":"     * @throws IOException if an I/O error occurs during saving","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Bev-low"},"content":"    public void save(JsonObject data) throws IOException {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Bev-low"},"content":"        Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Bev-low"},"content":"        createDirIfNotExist();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Bev-low"},"content":"        createFileIfNotExist();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Bev-low"},"content":"        try (FileWriter writer \u003d new FileWriter(path)) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Bev-low"},"content":"            gson.toJson(data, writer);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"Data successfully saved to file.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Bev-low"},"content":"        } catch (StorageExceptions e) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.WARNING, \"Failed to save data to file: \" + path, e);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bev-low"},"content":"            throw StorageExceptions.unableToSave();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Bev-low"},"content":"     * Creates the directory for the file if it does not exist.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Bev-low"},"content":"     * @throws IOException if the directory creation fails","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Bev-low"},"content":"    private void createDirIfNotExist() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Bev-low"},"content":"        File dir \u003d new File(path).getParentFile();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Bev-low"},"content":"        if (dir \u003d\u003d null || dir.exists()){","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.INFO, \"Directory exists\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Bev-low"},"content":"            return;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Bev-low"},"content":"        boolean isSuccess \u003d dir.mkdirs();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Bev-low"},"content":"        if (!isSuccess){","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.WARNING, \"Failed to create directory.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Bev-low"},"content":"            throw StorageExceptions.unableToCreateDirectory();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"Directory created\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Bev-low"},"content":"     * Creates the file if it does not exist.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Bev-low"},"content":"     * @throws IOException if the file creation fails","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Bev-low"},"content":"    private void createFileIfNotExist() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Bev-low"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Bev-low"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.INFO, \"File exists\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Bev-low"},"content":"            return;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"        boolean isSuccess \u003d file.createNewFile();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Bev-low"},"content":"        if (!isSuccess) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"            logger.log(Level.WARNING, \"Failed to create file.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Bev-low"},"content":"            throw StorageExceptions.unableToCreateFile();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"File created\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-23","isFullCredit":false}],"authorContributionMap":{"Bev-low":176}},{"path":"src/main/java/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package storage;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import history.History;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"import java.util.Map;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"/*","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"    Storage acts as an adapter layer between the FileManager and BuffBuddy classes,","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    translating between JSON and programmeList or History objects","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"*/","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"public class Storage {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"     * Constructs a Storage object with a specified file path.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"     * @param path the path to the file used for storing data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        this.fileManager \u003d new FileManager(path);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"     * Loads the programme list from the JSON object obtained via the FileManager.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"     * This method retrieves the JSON data containing the programme list from the FileManager. If no","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"     * programme list data is found, it initializes an empty ProgrammeList.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"     * @return the ProgrammeList object containing programme data, or an empty ProgrammeList if not found","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    public ProgrammeList loadProgrammeList() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"        try {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"            JsonObject programmeListJson \u003d fileManager.loadProgrammeList();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"            if (programmeListJson \u003d\u003d null) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"                return new ProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"            }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"Loading programmeList\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"            return programmeListFromJson(programmeListJson);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"        } catch (Exception e ) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"No programme list found, empty list initialised\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"            return new ProgrammeList();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"     * Converts json Object containing history to  from the JSON object obtained via the FileManager.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"     * This method retrieves the JSON data containing the history from the FileManager. If no","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"     * history data is found, it initializes an empty History.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"     * @return the history object containing programme data, or an empty history if not found","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"    public History loadHistory() {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"        try {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"            JsonObject historyJson \u003d fileManager.loadHistory();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"            if (historyJson \u003d\u003d null) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"                return new History();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"            }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"Loading history\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"            return historyFromJson(historyJson);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"No history found, empty history initialised\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"            return new History();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"     * Saves the programme list and history data to the file.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"     * @param programmeList the ProgrammeList object to be saved","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"     * @param history       the History object to be saved","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"    public void saveData(ProgrammeList programmeList, History history) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"        assert programmeList !\u003d null : \"programmeList must not be null\";","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"        assert history !\u003d null : \"history must not be null\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d createJSON(programmeList, history);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"JsonObject containing programme list and history created.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"        try{","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"            fileManager.save(jsonObject);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"            logger.info(\"Failed to save data\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"     * Creates a JSON object containing the programme list and history data.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bev-low"},"content":"     * @param programmeList the ProgrammeList object to be added to JSON","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"     * @param history       the History object to be added to JSON","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Bev-low"},"content":"     * @return a JSON object containing the programme list and history data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Bev-low"},"content":"    private JsonObject createJSON(ProgrammeList programmeList, History history) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d new JsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Bev-low"},"content":"        assert programmeList !\u003d null : \"programmeList must not be null\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Bev-low"},"content":"        assert history !\u003d null : \"history must not be null\";","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Bev-low"},"content":"        jsonObject.add(\"programmeList\", programmeListToJson(programmeList));","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"Programme list converted to JsonObject.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Bev-low"},"content":"        jsonObject.add(\"history\", historyToJson(history));","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Bev-low"},"content":"        logger.info(\"History converted to JsonObject.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Bev-low"},"content":"        return jsonObject;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Bev-low"},"content":"     * Converts a ProgrammeList object to a JSON object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Bev-low"},"content":"     * @param programmeList the ProgrammeList object to convert","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Bev-low"},"content":"     * @return a JSON object representing the programme list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Bev-low"},"content":"    private JsonObject programmeListToJson(ProgrammeList programmeList) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bev-low"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"Programme list converted to Json for saving.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Bev-low"},"content":"        return gson.toJsonTree(programmeList).getAsJsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Bev-low"},"content":"     * Converts a JSON object to a ProgrammeList object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Bev-low"},"content":"     * @param jsonObject the JSON object representing the programme list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Bev-low"},"content":"     * @return the ProgrammeList object created from the JSON data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Bev-low"},"content":"    private ProgrammeList programmeListFromJson(JsonObject jsonObject) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Bev-low"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"Programme list converted from Json for loading.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bev-low"},"content":"        return gson.fromJson(jsonObject, ProgrammeList.class);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Bev-low"},"content":"     * Converts a History object to a JSON object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Bev-low"},"content":"     * @param history the History object to convert","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"     * @return a JSON object representing the history","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Bev-low"},"content":"    private JsonObject historyToJson(History history) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Bev-low"},"content":"        Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Bev-low"},"content":"                .registerTypeAdapter(LocalDate.class, new DateSerializer())  // Custom serializer for LocalDate","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Bev-low"},"content":"                .setPrettyPrinting()","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Bev-low"},"content":"                .create();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Bev-low"},"content":"        JsonObject historyJson \u003d new JsonObject();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Bev-low"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Bev-low"},"content":"        LinkedHashMap\u003cLocalDate, DailyRecord\u003e historyMap \u003d history.getHistory(); //To access the Hashmap","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Bev-low"},"content":"        for (LocalDate date : historyMap.keySet()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Bev-low"},"content":"            DailyRecord dailyRecord \u003d historyMap.get(date);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Bev-low"},"content":"            historyJson.add(date.format(formatter), gson.toJsonTree(dailyRecord));","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"History converted to Json for saving.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Bev-low"},"content":"        return historyJson;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"     * Converts a JSON object to a History object.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Bev-low"},"content":"     * @param jsonObject the JSON object representing the history","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"     * @return the History object created from the JSON data","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"    private History historyFromJson(JsonObject jsonObject) {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Bev-low"},"content":"        Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Bev-low"},"content":"                .registerTypeAdapter(LocalDate.class, new DateSerializer())  // Custom deserializer for LocalDate","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Bev-low"},"content":"                .create();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Bev-low"},"content":"        History history \u003d new History();","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Bev-low"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Bev-low"},"content":"        LinkedHashMap\u003cLocalDate, DailyRecord\u003e historyMap \u003d history.getHistory(); //To access the Hashmap","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Bev-low"},"content":"        for (Map.Entry\u003cString, JsonElement\u003e entry : jsonObject.entrySet()) {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Bev-low"},"content":"            LocalDate date \u003d LocalDate.parse(entry.getKey(), formatter);","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Bev-low"},"content":"            DailyRecord dailyRecord \u003d gson.fromJson(entry.getValue(), DailyRecord.class);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Bev-low"},"content":"            historyMap.put(date, dailyRecord);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Bev-low"},"content":"        logger.log(Level.INFO, \"historyJson converted from Json for loading.\");","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Bev-low"},"content":"        return history;","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Bev-low"},"content":"    /**","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Bev-low"},"content":"     * Sets the FileManager instance for testing purposes.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bev-low"},"content":"     *","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Bev-low"},"content":"     * @param mockFileManager the mocked FileManager to be used for testing.","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Bev-low"},"content":"     */","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Bev-low"},"content":"    public void setFileManager(FileManager mockFileManager) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Bev-low"},"content":"        this.fileManager \u003d mockFileManager;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-17","isFullCredit":false}],"authorContributionMap":{"Bev-low":202}},{"path":"src/main/java/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andreusxcarvalho"},"content":"// @@author andreusxcarvalho","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"package ui;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"/**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":" * Represents the user interface for the task management system.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":" * This class handles user input and output, providing methods to read commands,","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andreusxcarvalho"},"content":" * display messages, and show welcome or farewell messages.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":" */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"public class Ui {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final String ERROR_HEADER \u003d \"Error: \";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final String LINE_CHAR \u003d \"\u003d\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final int LINE_LENGTH \u003d 50;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m...\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final String LOGO \u003d \"\"\"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"             ____         __  __ ____            _     _      \\s","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"            |  _ \\\\       / _|/ _|  _ \\\\          | |   | |     \\s","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"            | |_) |_   _| |_| |_| |_) |_   _  __| | __| |_   _\\s","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andreusxcarvalho"},"content":"            |  _ \u003c| | | |  _|  _|  _ \u003c| | | |/ _` |/ _` | | | |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andreusxcarvalho"},"content":"            | |_) | |_| | | | | | |_) | |_| | (_| | (_| | |_| |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"            |____/ \\\\__,_|_| |_| |____/ \\\\__,_|\\\\__,_|\\\\__,_|\\\\__, |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"                                                          __/ |","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"                                                         |___/\\s","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"            \"\"\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final String PROMPT \u003d \"What can I do for you?\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"    private static final String FAREWELL \u003d\"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andreusxcarvalho"},"content":"    private final Scanner in;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andreusxcarvalho"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andreusxcarvalho"},"content":"     * Constructs an Ui object, initializing the input and output streams.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andreusxcarvalho"},"content":"    public Ui() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andreusxcarvalho"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"andreusxcarvalho"},"content":"        out \u003d new PrintStream(System.out);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andreusxcarvalho"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"andreusxcarvalho"},"content":"     * @return the input command as a string","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"andreusxcarvalho"},"content":"    public String readCommand() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"andreusxcarvalho"},"content":"        return in.nextLine();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andreusxcarvalho"},"content":"     * Displays a line for visual separation in the output.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"andreusxcarvalho"},"content":"    public void showLine() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"andreusxcarvalho"},"content":"        out.println(LINE_CHAR.repeat(LINE_LENGTH));","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"andreusxcarvalho"},"content":"     * Displays a message to the user.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param msg the message to be displayed","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"andreusxcarvalho"},"content":"        showLine();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"andreusxcarvalho"},"content":"        String strippedMsg \u003d msg.trim();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"andreusxcarvalho"},"content":"        String formattedMsg \u003d strippedMsg.replace(\"_\", \" \");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andreusxcarvalho"},"content":"        out.println(formattedMsg);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"andreusxcarvalho"},"content":"        showLine();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"andreusxcarvalho"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param e the exception to be displayed","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"andreusxcarvalho"},"content":"    public void showMessage(Exception e) {","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"andreusxcarvalho"},"content":"        showMessage(ERROR_HEADER + e.getMessage());","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"andreusxcarvalho"},"content":"     * Displays the success/failure message of a Command to the user.","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"andreusxcarvalho"},"content":"     *","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"andreusxcarvalho"},"content":"     * @param result the CommandResult to be displayed","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"andreusxcarvalho"},"content":"    public void showMessage(CommandResult result){","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"andreusxcarvalho"},"content":"        showMessage(result.getMessage());","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"andreusxcarvalho"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"andreusxcarvalho"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"andreusxcarvalho"},"content":"        out.println(GREETING);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"andreusxcarvalho"},"content":"        out.println(LOGO);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"andreusxcarvalho"},"content":"        out.println(PROMPT);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"andreusxcarvalho"},"content":"    /**","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"andreusxcarvalho"},"content":"     * Displays a farewell message to the user.","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"andreusxcarvalho"},"content":"     */","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"andreusxcarvalho"},"content":"    public void showFarewell() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"andreusxcarvalho"},"content":"        out.println(FAREWELL);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"andreusxcarvalho"},"content":"}","lastModifiedDate":"2024-10-20","isFullCredit":false}],"authorContributionMap":{"andreusxcarvalho":119}},{"path":"src/main/java/water/Water.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"// @@author Atulteja","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"package water;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import exceptions.WaterExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"/**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":" * Represents a list of water intake records, allowing addition, deletion, and retrieval of records.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":" */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"public class Water {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"    private static final Logger logger \u003d Logger.getLogger(Water.class.getName());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    private final ArrayList\u003cFloat\u003e waterList;","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"     * Constructs a new Water instance with an empty list of water entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    public Water() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"        waterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Water instance created with an empty list.\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"     * Adds a specified amount of water to the list.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"     * @param water the amount of water in liters to add; must be positive","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"     * @throws AssertionError if the amount of water is not positive","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    public void addWater(float water) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        assert water \u003e 0 : \"Water amount must be positive\";","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        waterList.add(water);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"{0} liters of water added. Current list: {1}\", new Object[]{water, waterList});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"     * Checks if the water list is empty.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"     * @return true if the water list contains no entries; false otherwise","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        return waterList.isEmpty();","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"     * Deletes a water entry at the specified index.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"     * @param index the index of the water entry to delete","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"     * @return the amount of water deleted","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"     * @throws IndexOutOfBoundsException if the index is out of bounds for the water list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    public float deleteWater(int index) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        if (index \u003c 0 || index \u003e\u003d waterList.size()) {","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"            logger.log(Level.WARNING, \"Invalid index for deletion: {0}\", index);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"            throw WaterExceptions.doesNotExist();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        float waterToBeDeleted \u003d waterList.get(index);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        waterList.remove(index);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Deleted {0} liters of water at index {1}. Current list: {2}\",","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"                new Object[]{waterToBeDeleted, index, waterList});","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        return waterToBeDeleted;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"     * Retrieves the list of water entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"     * @return an ArrayList containing all water entries in liters","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    public ArrayList\u003cFloat\u003e getWaterList() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        logger.log(Level.INFO, \"Retrieved water list: {0}\", waterList);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        return waterList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    /**","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"     * Returns a string representation of the water entries.","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"     *","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"     * @return a string listing all water entries or \"No record\" if the list is empty","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"     */","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    @Override","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"    public String toString() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"        if(waterList.isEmpty()) {","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"            return \"No record.\";","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"        for (int i \u003d 0; i \u003c waterList.size(); i++) {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"            output.append(i + 1).append(\": \").append(waterList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"        return output.toString().trim();","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false}],"authorContributionMap":{"Atulteja":96}},{"path":"src/test/java/BuffBuddyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"public class BuffBuddyTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"TVageesan":2,"-":7}},{"path":"src/test/java/command/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"public class CommandResultTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    public void testCommandResult_initialization() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"        String message \u003d \"Operation successful\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"        CommandResult commandResult \u003d new CommandResult(message);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(commandResult, \"CommandResult should be initialized\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"        assertEquals(message, commandResult.getMessage(), \"The message should match the initialized value\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    public void testCommandResult_emptyMessage() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"        CommandResult commandResult \u003d new CommandResult(\"\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(commandResult, \"CommandResult should be initialized\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"        assertEquals(\"\", commandResult.getMessage(), \"The message should be an empty string\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    public void testCommandResult_nullMessage() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        CommandResult commandResult \u003d new CommandResult(null);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(commandResult, \"CommandResult should be initialized\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        assertEquals(null, commandResult.getMessage(), \"The message should be null\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"TVageesan":33}},{"path":"src/test/java/command/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"public class CommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"    private static class TestCommand extends Command {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"        @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"        public CommandResult execute(ProgrammeList programmes, History history) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"            return new CommandResult(\"Test executed\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    public void testExecute_returnsCommandResult() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockProgrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"        History mockHistory \u003d mock(History.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        TestCommand testCommand \u003d new TestCommand();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        CommandResult result \u003d testCommand.execute(mockProgrammes, mockHistory);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(result, \"The execute method should return a non-null CommandResult\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"TVageesan":29}},{"path":"src/test/java/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"    public void testExecute_doesNotThrowException() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockProgrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"        History mockHistory \u003d mock(History.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e exitCommand.execute(mockProgrammes, mockHistory));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    public void testExecute_withNullProgrammeList() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"        History mockHistory \u003d mock(History.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e exitCommand.execute(null, mockHistory));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    public void testExecute_withNullHistory() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockProgrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow( () -\u003e exitCommand.execute(mockProgrammes, null));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"TVageesan":24,"Bev-low":10,"-":5}},{"path":"src/test/java/command/InvalidCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"public class InvalidCommandTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"    public void testExecute_showsInvalidCommandMessage() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockprogrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"        History mockHistory \u003d mock(History.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"        InvalidCommand invalidCommand \u003d new InvalidCommand();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"        CommandResult result \u003d invalidCommand.execute(mockprogrammes, mockHistory);","lastModifiedDate":"2024-10-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"TVageesan":9,"Bev-low":8,"-":5}},{"path":"src/test/java/command/meals/AddMealCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"public class AddMealCommandTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private AddMealCommand addMealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    private Meal sampleMeal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    private DailyRecord mockDailyRecord;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        // Initialize the mocks","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        sampleMeal \u003d new Meal(\"Sample Meal\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return a DailyRecord for the specified date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        addMealCommand \u003d new AddMealCommand(sampleMeal, date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        // Arrange","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        CommandResult expectedResult \u003d new CommandResult(sampleMeal.toString() + \" has been added\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        // Act","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d addMealCommand.execute(mockHistory);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        // Assert","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        verify(mockDailyRecord).addMealToRecord(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedResult, result, \"Execution should \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"                \"return a CommandResult with the correct success message.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullDailyRecord() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return null for the DailyRecord","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(null);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andreusxcarvalho"},"content":"        // If assertions are enabled, an AssertionError is expected; otherwise,","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andreusxcarvalho"},"content":"        // replace with a custom exception if defined","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e addMealCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"                \"AddMealCommand without a valid DailyRecord should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullMeal() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        // Attempting to create a command with a null meal should throw an AssertionError","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"        // If a specific custom exception is defined for null meal, replace AssertionError with it","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddMealCommand(null, date), \"Creating \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"                \"AddMealCommand with null Meal should throw AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"Atulteja":74,"andreusxcarvalho":5}},{"path":"src/test/java/command/meals/DeleteMealCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"public class DeleteMealCommandTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private DeleteMealCommand deleteMealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    private Meal sampleMeal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    private DailyRecord mockDailyRecord;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        // Initialize the mocks","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        sampleMeal \u003d new Meal(\"Sample Meal\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return a DailyRecord for the specified date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        // Set up DailyRecord mock to return the sample meal when deleting by index","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        when(mockDailyRecord.deleteMealFromRecord(0)).thenReturn(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        deleteMealCommand \u003d new DeleteMealCommand(0, date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        // Arrange","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        CommandResult expectedResult \u003d new CommandResult(sampleMeal + \" has been deleted\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        // Act","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d deleteMealCommand.execute(mockHistory);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        // Assert","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        verify(mockDailyRecord).deleteMealFromRecord(0);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedResult, result, \"Execution should \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"                \"return a CommandResult with the correct success message.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullDailyRecord() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return null for the DailyRecord","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(null);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e deleteMealCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"                \"DeleteMealCommand without a valid DailyRecord should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseInvalidIndex() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        // Set up DailyRecord mock to throw IndexOutOfBoundsException when an invalid index is used","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        when(mockDailyRecord.deleteMealFromRecord(5)).thenThrow(new IndexOutOfBoundsException(\"Invalid index\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"        DeleteMealCommand invalidIndexCommand \u003d new DeleteMealCommand(5, date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e invalidIndexCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"                \"DeleteMealCommand with an invalid index should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNegativeIndex() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"        // Attempting to create a command with a negative index should throw an AssertionError","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new DeleteMealCommand(-1, date), \"Creating \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"                \"DeleteMealCommand with negative index should throw AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":88}},{"path":"src/test/java/command/meals/MealCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"public class MealCommandTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private MealCommand mealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    private ProgrammeList mockProgrammeList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        //initializes the @Mock annotated fields in the test class","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        mealCommand \u003d new TestMealCommand(date);  // Using a concrete subclass for testing","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        assertEquals(date, mealCommand.date, \"Date should be \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"                \"initialized correctly in MealCommand.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNullDate() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestMealCommand(null), \"Creating \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"                \"MealCommand with null date should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteWithProgrammeListAndHistoryHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        CommandResult expected \u003d new CommandResult(\"Executed with history\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d mealCommand.execute(mockProgrammeList, mockHistory);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expected, result, \"execute should return a \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"                \"CommandResult with the correct message.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        // Assuming some method interaction with mockHistory in the subclass","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        verify(mockHistory).getRecordByDate(date);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    // Concrete subclass of MealCommand for testing purposes","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"    private static class TestMealCommand extends MealCommand {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        public TestMealCommand(LocalDate date) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"            super(date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        @Override","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        public CommandResult execute(History history) {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"            // Ensure getRecordByDate is called as part of the execution","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"            history.getRecordByDate(date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"            return new CommandResult(\"Executed with history\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":73}},{"path":"src/test/java/command/meals/ViewMealCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.meals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import meal.MealList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"public class ViewMealCommandTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    private ViewMealCommand viewMealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    private DailyRecord mockDailyRecord;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    private MealList mockMealList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return a DailyRecord for the specified date","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        // Set up DailyRecord mock to return a MealList","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"        when(mockDailyRecord.getMealListFromRecord()).thenReturn(mockMealList);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        viewMealCommand \u003d new ViewMealCommand(date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        // Arrange","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        when(mockMealList.toString()).thenReturn(\"Sample Meal List\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"        String formattedDate \u003d date.format(formatter);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"        CommandResult expectedResult \u003d new CommandResult(\"Meals for \" + formattedDate + \": \\n\\nSample Meal List\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        // Act","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d viewMealCommand.execute(mockHistory);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        // Assert","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        verify(mockHistory).getRecordByDate(date);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"        verify(mockDailyRecord).getMealListFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedResult, result, \"Execution should return a \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"                \"CommandResult with the correct meal list output.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullDailyRecord() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        // Arrange","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(null);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e viewMealCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"                \"ViewMealCommand with a null DailyRecord should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNullDate() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new ViewMealCommand(null), \"Creating \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"                \"ViewMealCommand with a null date should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":76,"Bev-low":7}},{"path":"src/test/java/command/programme/CreateProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package command.programme;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import history.History;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import programme.Programme;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"public class CreateProgrammeCommandTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    private static final String VALID_PROGRAMME_NAME \u003d \"New Programme\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private static final String EMPTY_PROGRAMME_NAME \u003d \"\";","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private static final ArrayList\u003cDay\u003e VALID_PROGRAMME_CONTENTS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    private static final ArrayList\u003cDay\u003e NULL_PROGRAMME_CONTENTS \u003d null;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    private History history;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"        history \u003d new History();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    void constructor_initializesWithValidParameters(){","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        assertDoesNotThrow(() -\u003e new CreateProgrammeCommand(VALID_PROGRAMME_NAME, VALID_PROGRAMME_CONTENTS));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    void constructor_throwsAssertionErrorIfProgrammesIsNull() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e new CreateProgrammeCommand(","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"                VALID_PROGRAMME_NAME, NULL_PROGRAMME_CONTENTS)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"    void constructor_createsProgrammeWithEmptyName() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e new CreateProgrammeCommand(","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"                EMPTY_PROGRAMME_NAME, VALID_PROGRAMME_CONTENTS)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    void execute_createsProgrammeSuccessfully_returnsSuccessMessage() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"        CreateProgrammeCommand command \u003d new CreateProgrammeCommand(VALID_PROGRAMME_NAME, VALID_PROGRAMME_CONTENTS);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        String expectedMessage \u003d String.format(CreateProgrammeCommand.SUCCESS_MESSAGE_FORMAT,","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"                new Programme(VALID_PROGRAMME_NAME, VALID_PROGRAMME_CONTENTS)","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        );","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        CommandResult actualResult \u003d command.execute(programmeList, history);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"nirala-ts":65}},{"path":"src/test/java/command/programme/DeleteLogProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.HistoryExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"class DeleteLogProgrammeCommandTest {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    private History history;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    private ProgrammeList programmes;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    private LocalDate testDate;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    private Day testDay;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    private DailyRecord dailyRecord;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    void setUp() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"        history \u003d new History();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        programmes \u003d new ProgrammeList();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        testDate \u003d LocalDate.of(2023, 10, 1);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        testDay \u003d new Day(\"Test Day\");","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.logDayToRecord(testDay);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        history.logRecord(testDate, dailyRecord);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    // Test for constructor with valid inputs","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithValidParameters() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new DeleteLogProgrammeCommand(testDate));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: invalid programme ID","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithInvalidParameters() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new DeleteLogProgrammeCommand(null));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"    void execute_happyPath_logDeletedSuccessfully() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"        DeleteLogProgrammeCommand command \u003d new DeleteLogProgrammeCommand(testDate);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"        CommandResult result \u003d command.execute(programmes, history);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        assertNull(history.getRecordByDate(testDate).getDayFromRecord());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"    void execute_edgeCase_noLogExists() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"        LocalDate nonExistentDate \u003d LocalDate.of(2023, 10, 2);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"        DeleteLogProgrammeCommand command \u003d new DeleteLogProgrammeCommand(nonExistentDate);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"        assertThrows(HistoryExceptions.class, () -\u003e command.execute(programmes, history),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andreusxcarvalho"},"content":"                \"Expected BuffBuddyException for non-existent log.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    void execute_edgeCase_nullHistory() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"        DeleteLogProgrammeCommand command \u003d new DeleteLogProgrammeCommand(testDate);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(programmes, null));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"TVageesan":68,"Bev-low":3,"andreusxcarvalho":2}},{"path":"src/test/java/command/programme/DeleteProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package command.programme;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import programme.Programme;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import history.History;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"class DeleteProgrammeCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    private static final int OUT_OF_RANGE_PROGRAMME_ID \u003d 999;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"    private Programme expectedProgramme;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"    private DeleteProgrammeCommand command;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"    private History history;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"    ","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        history \u003d new History();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        Day day \u003d new Day(\"Day 1\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        days.add(day);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Mock Programme\", days);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        expectedProgramme \u003d new Programme(\"Mock Programme\", days);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new DeleteProgrammeCommand(VALID_PROGRAMME_ID);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"    void constructor_initializesWithValidParameters() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"        assertDoesNotThrow(() -\u003e new DeleteProgrammeCommand(VALID_PROGRAMME_ID));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"    void constructor_throwsAssertionErrorIfProgrammeIdIsNegative() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e new DeleteProgrammeCommand(INVALID_PROGRAMME_ID));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    void execute_deletesDayFromProgramme_returnsSuccessMessage() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        String expectedMessage \u003d String.format(DeleteProgrammeCommand.SUCCESS_MESSAGE_FORMAT, expectedProgramme);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        CommandResult actualResult \u003d command.execute(programmeList, history);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    void execute_throwsIndexOutOfBoundsIfProgrammeIdDoesNotExist() {","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"        DeleteProgrammeCommand invalidCommand \u003d new DeleteProgrammeCommand(OUT_OF_RANGE_PROGRAMME_ID);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList, history),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"                \"Expected IndexOutOfBoundsBuffBuddyException for an out-of-range programme ID\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-22","isFullCredit":false}],"authorContributionMap":{"nirala-ts":69}},{"path":"src/test/java/command/programme/ListProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package command.programme;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"public class ListProgrammeCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    private History history;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private ListProgrammeCommand command;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        history \u003d new History();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new ListProgrammeCommand();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"        // Add some programmes to the list for testing","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        days1.add(new Day(\"Day 1\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Programme 1\", days1);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        days2.add(new Day(\"Day 2\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Programme 2\", days2);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    void execute_returnsListOfProgrammes() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        CommandResult result \u003d command.execute(programmeList, history);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"            ListProgrammeCommand.SUCCESS_MESSAGE_FORMAT, ","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"            programmeList","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        );","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedMessage, result.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    void execute_returnsEmptyListWhenNoProgrammes() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList(); // Reset to empty list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"        CommandResult result \u003d command.execute(programmeList, history);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"            ListProgrammeCommand.SUCCESS_MESSAGE_FORMAT,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"            \"No programmes found.\"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        );","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedMessage, result.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    void execute_handlesNullProgrammeList() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null, history));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"nirala-ts":67}},{"path":"src/test/java/command/programme/LogProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"// @@ author andreusxcarvalho","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"package command.programme;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"import programme.Programme;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"public class LogProgrammeCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    public void testExecute_logsDayIntoHistory() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockProgrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"        History mockHistory \u003d mock(History.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        Day mockDay \u003d mock(Day.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"        DailyRecord mockDailyRecord \u003d mock(DailyRecord.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        Programme mockProgramme \u003d mock(Programme.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        int progIndex \u003d 0;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        int dayIndex \u003d 0;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        LocalDate date \u003d LocalDate.of(2024, 12, 12);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"        // Mock ProgrammeList behavior to return the mock Programme when getProgramme() is called","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        when(mockProgrammes.getProgramme(progIndex)).thenReturn(mockProgramme);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        when(mockProgramme.getDay(dayIndex)).thenReturn(mockDay);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        LogProgrammeCommand logCommand \u003d new LogProgrammeCommand(progIndex, dayIndex, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        CommandResult result \u003d logCommand.execute(mockProgrammes, mockHistory);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        verify(mockProgrammes).getProgramme(progIndex);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        verify(mockProgramme).getDay(dayIndex);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        verify(mockDailyRecord).logDayToRecord(mockDay);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    public void testExecute_edgeCase_invalidProgrammeIndex() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockProgrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        History mockHistory \u003d mock(History.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        int invalidProgIndex \u003d -1;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        int dayIndex \u003d 0;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"        LocalDate date \u003d LocalDate.of(2024, 12, 12);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"        LogProgrammeCommand logCommand \u003d new LogProgrammeCommand(invalidProgIndex, dayIndex, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"        assertThrows(NullPointerException.class, () -\u003e logCommand.execute(mockProgrammes, mockHistory));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"    public void testExecute_edgeCase_nullHistory() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"        ProgrammeList mockProgrammes \u003d mock(ProgrammeList.class);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"        int progIndex \u003d 0;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"        int dayIndex \u003d 0;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"        LocalDate date \u003d LocalDate.of(2024, 12, 12);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"        LogProgrammeCommand logCommand \u003d new LogProgrammeCommand(progIndex, dayIndex, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e logCommand.execute(mockProgrammes, null));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"TVageesan":75}},{"path":"src/test/java/command/programme/StartProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package command.programme;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import programme.Programme;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"public class StartProgrammeCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private History history;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    private StartProgrammeCommand command;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        history \u003d new History();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        days1.add(new Day(\"Day 1\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Programme 1\", days1);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        days2.add(new Day(\"Day 2\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Programme 2\", days2);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    void execute_startsProgrammeSuccessfully() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new StartProgrammeCommand(0);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        CommandResult result \u003d command.execute(programmeList, history);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"        Programme startedProgramme \u003d programmeList.getProgramme(0);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"        String expectedMessage \u003d String.format(StartProgrammeCommand.SUCCESS_MESSAGE_FORMAT, startedProgramme);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedMessage, result.getMessage());","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    void execute_invalidProgrammeIndex_throwsException() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new StartProgrammeCommand(5);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e command.execute(programmeList, history));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"    void execute_nullProgrammeList_throwsException() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new StartProgrammeCommand(0);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null, history));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"nirala-ts":62}},{"path":"src/test/java/command/programme/ViewProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package command.programme;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import history.History;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import programme.Programme;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"public class ViewProgrammeCommandTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private History history;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    private ViewProgrammeCommand command;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        history \u003d new History();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        days1.add(new Day(\"Day 1\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Programme 1\", days1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        days2.add(new Day(\"Day 2\", new ArrayList\u003c\u003e()));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Programme 2\", days2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    void execute_viewsProgrammeSuccessfully() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new ViewProgrammeCommand(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        CommandResult result \u003d command.execute(programmeList, history);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"        Programme viewedProgramme \u003d programmeList.getProgramme(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        String expectedMessage \u003d String.format(ViewProgrammeCommand.SUCCESS_MESSAGE_FORMAT, viewedProgramme);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedMessage, result.getMessage());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    void execute_invalidProgrammeIndex_throwsException() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new ViewProgrammeCommand(5); // Invalid index","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e command.execute(programmeList, history));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"    void execute_nullProgrammeList_throwsException() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        command \u003d new ViewProgrammeCommand(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null, history));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"nirala-ts":62}},{"path":"src/test/java/command/programme/edit/CreateDayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"class CreateDayCommandTest {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_PROGRAMME_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    private ProgrammeList programme;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    private Day day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    private CreateDayProgrammeCommand command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"    void setUp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"        // Creates a programmeList with one programme with no days","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        programme \u003d new ProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"        programme.insertProgramme(\"Mock programme\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        day \u003d new Day(\"Day 1\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        command \u003d new CreateDayProgrammeCommand(VALID_PROGRAMME_ID, day);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    // Test for the constructor with a happy path case","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithValidProgrammeIdAndDay() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new CreateDayProgrammeCommand(VALID_PROGRAMME_ID, day));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the constructor: Negative programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsExceptionIfProgrammeIdIsNegative() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new CreateDayProgrammeCommand(INVALID_PROGRAMME_ID, day));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the constructor: Day is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsExceptionIfDayIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new CreateDayProgrammeCommand(VALID_PROGRAMME_ID, null));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    // Test for the \"execute\" method with a happy path case","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"    void execute_addsDayToProgrammeList_returnsSuccessMessage() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        String expectedMessage \u003d String.format(CreateDayProgrammeCommand.SUCCESS_MESSAGE_FORMAT, day);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"        CommandResult actualResult \u003d command.execute(programme);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the \"execute\" method: Programmes list is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsAssertionErrorIfProgrammesIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the \"execute\" method: Programme list does not contain programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"    void execute_handlesNonexistentProgrammeIdGracefully() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"        CreateDayProgrammeCommand invalidCommand \u003d new CreateDayProgrammeCommand(OUT_OF_RANGE_PROGRAMME_ID, day);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programme));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"TVageesan":72,"Bev-low":2,"andreusxcarvalho":1}},{"path":"src/test/java/command/programme/edit/CreateExerciseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"class CreateExerciseCommandTest {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_DAY_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_DAY_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_PROGRAMME_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_DAY_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    private Exercise exercise;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    private CreateExerciseProgrammeCommand command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    void setUp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        // Creates a ProgrammeList with a single programme and one day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"        Day day \u003d new Day(\"Day 1\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        days.add(day);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        programmeList.insertProgramme(\"Mock Programme\", days);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        // Initialize the Exercise and CreateExerciseCommand with valid IDs","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        exercise \u003d new Exercise(3, 10, 100, 200, \"Deadlift\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        command \u003d new CreateExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, exercise);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    // Test for the constructor with valid programme and day IDs and exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithValidParameters() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new CreateExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, exercise));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the constructor: Negative programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfProgrammeIdIsInvalid() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"                new CreateExerciseProgrammeCommand(INVALID_PROGRAMME_ID, VALID_DAY_ID, exercise)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the constructor: Negative day ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfdayIndexIsNegative() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"                new CreateExerciseProgrammeCommand(VALID_PROGRAMME_ID, INVALID_DAY_ID, exercise)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the constructor: Exercise is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfExerciseIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"                new CreateExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, null)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"    // Test for the execute method with a valid programme and day ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TVageesan"},"content":"    void execute_addsExerciseToDay_returnsSuccessMessage() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TVageesan"},"content":"        String expectedMessage \u003d String.format(CreateExerciseProgrammeCommand.SUCCESS_MESSAGE_FORMAT, exercise);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TVageesan"},"content":"        CommandResult actualResult \u003d command.execute(programmeList);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TVageesan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the execute method: Programme list is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsAssertionErrorIfProgrammesIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the execute method: Nonexistent programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfProgrammeIdDoesNotExist() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"        CreateExerciseProgrammeCommand invalidCommand \u003d new CreateExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TVageesan"},"content":"                OUT_OF_RANGE_PROGRAMME_ID, VALID_DAY_ID, exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TVageesan"},"content":"    // Edge case for the execute method: Nonexistent day ID within an existing programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfdayIndexDoesNotExist() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TVageesan"},"content":"        CreateExerciseProgrammeCommand invalidCommand \u003d new CreateExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, OUT_OF_RANGE_DAY_ID, exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"TVageesan":105,"Bev-low":3,"andreusxcarvalho":1}},{"path":"src/test/java/command/programme/edit/DeleteDayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"class DeleteDayCommandTest {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_DAY_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_DAY_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_PROGRAMME_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_DAY_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"    private Day day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    private DeleteDayProgrammeCommand command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"    void setUp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        // Set up a ProgrammeList with one programme and one day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"        day \u003d new Day(\"Day 1\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        days.add(day);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"        programmeList.insertProgramme(\"Mock Programme\", days);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        // Initialize DeleteDayCommand with valid IDs","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        command \u003d new DeleteDayProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"    // Test for constructor with valid inputs","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithValidParameters() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new DeleteDayProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfProgrammeIdIsNegative() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new DeleteDayProgrammeCommand(INVALID_PROGRAMME_ID, VALID_DAY_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative day ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfdayIndexIsNegative() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new DeleteDayProgrammeCommand(VALID_PROGRAMME_ID, INVALID_DAY_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"    // Test for execute method: successfully deletes day and returns success message","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"    void execute_deletesDayFromProgramme_returnsSuccessMessage() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"        String expectedMessage \u003d String.format(DeleteDayProgrammeCommand.SUCCESS_MESSAGE_FORMAT, day);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"        CommandResult actualResult \u003d command.execute(programmeList);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Programme list is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsAssertionErrorIfProgrammesIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfProgrammeIdDoesNotExist() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"        DeleteDayProgrammeCommand invalidCommand \u003d new DeleteDayProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andreusxcarvalho"},"content":"                OUT_OF_RANGE_PROGRAMME_ID, VALID_DAY_ID","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"andreusxcarvalho"},"content":"        );","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent day ID within existing programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfdayIndexDoesNotExist() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"        DeleteDayProgrammeCommand invalidCommand \u003d new DeleteDayProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, OUT_OF_RANGE_DAY_ID","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"TVageesan":88,"Bev-low":3,"andreusxcarvalho":3}},{"path":"src/test/java/command/programme/edit/DeleteExerciseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"class DeleteExerciseCommandTest {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_DAY_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_EXERCISE_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_DAY_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_EXERCISE_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_PROGRAMME_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_DAY_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_EXERCISE_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"    private Exercise exercise;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    private DeleteExerciseProgrammeCommand command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    void setUp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"        // Set up a ProgrammeList with one programme, one day, and one exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"        exercise \u003d new Exercise(3, 10, 100, 200, \"Deadlift\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"        ArrayList\u003cExercise\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"        exercises.add(exercise);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        Day day \u003d new Day(\"Day 1\", exercises);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        days.add(day);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        programmeList.insertProgramme(\"Mock Programme\", days);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        // Initialize DeleteExerciseCommand with valid IDs","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        command \u003d new DeleteExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"    // Test for constructor with valid inputs","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithValidParameters() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new DeleteExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfProgrammeIdIsNegative() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"                new DeleteExerciseProgrammeCommand(INVALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative day ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfdayIndexIsNegative() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"                new DeleteExerciseProgrammeCommand(VALID_PROGRAMME_ID, INVALID_DAY_ID, VALID_EXERCISE_ID)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative exercise ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfexerciseIndexIsNegative() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TVageesan"},"content":"                new DeleteExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, INVALID_EXERCISE_ID)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TVageesan"},"content":"    // Test for execute method: successfully deletes exercise and returns success message","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"    void execute_deletesExerciseFromDay_returnsSuccessMessage() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TVageesan"},"content":"                DeleteExerciseProgrammeCommand.SUCCESS_MESSAGE_FORMAT, VALID_EXERCISE_ID, exercise","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"        CommandResult actualResult \u003d command.execute(programmeList);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Programme list is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsAssertionErrorIfProgrammesIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfProgrammeIdDoesNotExist() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TVageesan"},"content":"        DeleteExerciseProgrammeCommand invalidCommand \u003d new DeleteExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TVageesan"},"content":"                OUT_OF_RANGE_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent day ID within existing programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfdayIndexDoesNotExist() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TVageesan"},"content":"        DeleteExerciseProgrammeCommand invalidCommand \u003d new DeleteExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, OUT_OF_RANGE_DAY_ID, VALID_EXERCISE_ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent exercise ID within existing day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TVageesan"},"content":"    void execute_handlesNonexistentexerciseIndexGracefully() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TVageesan"},"content":"        DeleteExerciseProgrammeCommand invalidCommand \u003d new DeleteExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, VALID_DAY_ID, OUT_OF_RANGE_EXERCISE_ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":122,"Bev-low":4}},{"path":"src/test/java/command/programme/edit/EditExerciseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"import programme.Day;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"import programme.ExerciseUpdate;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"class EditExerciseCommandTest {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_DAY_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_EXERCISE_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    //Since programme_id is optional, -1 (NULL_INTEGER) is a valid input.","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_DAY_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_EXERCISE_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_PROGRAMME_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_DAY_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    private static final int OUT_OF_RANGE_EXERCISE_ID \u003d 999;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"    private ExerciseUpdate update;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    private Exercise expectedExercise;","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"    private EditExerciseProgrammeCommand command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"    void setUp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        // Set up a ProgrammeList with one programme, one day, and one exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"        Exercise originalExercise \u003d new Exercise(3, 10, 100, 200, \"Deadlift\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"        update \u003d new ExerciseUpdate(3, 12, 105, 205, \"Deadlift Updated\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"        expectedExercise \u003d new Exercise(3, 12, 105, 205, \"Deadlift Updated\");","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        ArrayList\u003cExercise\u003e exercises \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"        exercises.add(originalExercise);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"        Day day \u003d new Day(\"Day 1\", exercises);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"        days.add(day);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"        programmeList.insertProgramme(\"Mock Programme\", days);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"        // Initialize EditExerciseCommand with valid IDs and the updated exercise","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"TVageesan"},"content":"        command \u003d new EditExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID, update);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"TVageesan"},"content":"    // Test for constructor with valid inputs","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"TVageesan"},"content":"    void constructor_initializesWithValidParameters() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"TVageesan"},"content":"                new EditExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID, update)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfProgrammeIdIsNegative() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"TVageesan"},"content":"                new EditExerciseProgrammeCommand(INVALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID, update)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative day ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfdayIndexIsNegative() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"TVageesan"},"content":"                new EditExerciseProgrammeCommand(VALID_PROGRAMME_ID, INVALID_DAY_ID, VALID_EXERCISE_ID, update)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Negative exercise ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfexerciseIndexIsNegative() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"TVageesan"},"content":"                new EditExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, INVALID_EXERCISE_ID, update)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor: Updated exercise is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"TVageesan"},"content":"    void constructor_throwsAssertionErrorIfUpdatedExerciseIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"TVageesan"},"content":"                new EditExerciseProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID, null)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"TVageesan"},"content":"    // Test for execute method: successfully updates exercise and returns success message","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"TVageesan"},"content":"    void execute_updatesExerciseInDay_returnsSuccessMessage() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"TVageesan"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"TVageesan"},"content":"                EditExerciseProgrammeCommand.SUCCESS_MESSAGE_FORMAT, expectedExercise","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"TVageesan"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"TVageesan"},"content":"        CommandResult actualResult \u003d command.execute(programmeList);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"TVageesan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Programme list is null","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsAssertionErrorIfProgrammesIsNull() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e command.execute(null));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent programme ID","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfProgrammeIdDoesNotExist() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"TVageesan"},"content":"        EditExerciseProgrammeCommand invalidCommand \u003d new EditExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"TVageesan"},"content":"                OUT_OF_RANGE_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID, update","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent day ID within existing programme","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"TVageesan"},"content":"    void execute_throwsIndexOutOfBoundsIfdayIndexDoesNotExist() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"TVageesan"},"content":"        EditExerciseProgrammeCommand invalidCommand \u003d new EditExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, OUT_OF_RANGE_DAY_ID, VALID_EXERCISE_ID, update","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"TVageesan"},"content":"    // Edge case for execute: Nonexistent exercise ID within existing day","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"TVageesan"},"content":"    void execute_handlesNonexistentexerciseIndexGracefully() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"TVageesan"},"content":"        EditExerciseProgrammeCommand invalidCommand \u003d new EditExerciseProgrammeCommand(","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"TVageesan"},"content":"                VALID_PROGRAMME_ID, VALID_DAY_ID, OUT_OF_RANGE_EXERCISE_ID, update","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e invalidCommand.execute(programmeList));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":139,"Bev-low":4}},{"path":"src/test/java/command/programme/edit/EditProgrammeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"class EditProgrammeCommandTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_PROGRAMME_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_PROGRAMME_ID \u003d -2;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_DAY_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"    private static final int VALID_EXERCISE_ID \u003d 0;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_EXERCISE_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"    private static final int INVALID_DAY_ID \u003d -1;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"    // Test for the constructor with valid parameters","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"    void constructor_withValidParameters_initializesCorrectly() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new TestEditProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, VALID_EXERCISE_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor with exerciseIndex: Negative exercise ID","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"    void constructor_withNegativeexerciseIndex_throwsAssertionError() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"TVageesan"},"content":"                new TestEditProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID, INVALID_EXERCISE_ID)","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"TVageesan"},"content":"        );","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"    // Happy path for constructor without exerciseIndex","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"TVageesan"},"content":"    void constructor_withoutexerciseIndex_initializesCorrectly() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new TestEditProgrammeCommand(VALID_PROGRAMME_ID, VALID_DAY_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor without exerciseIndex: Invalid day ID","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"TVageesan"},"content":"    void constructor_withNegativedayIndex_throwsAssertionError() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestEditProgrammeCommand(VALID_PROGRAMME_ID, INVALID_DAY_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"TVageesan"},"content":"    // Happy path for constructor with only programme index","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"TVageesan"},"content":"    void constructor_withProgrammeIndex_initializesCorrectly() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"TVageesan"},"content":"        assertDoesNotThrow(() -\u003e new TestEditProgrammeCommand(VALID_PROGRAMME_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"TVageesan"},"content":"    // Edge case for constructor with programme index: Negative programme index","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"TVageesan"},"content":"    void constructor_withNegativeProgrammeIndex_throwsAssertionError() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"TVageesan"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestEditProgrammeCommand(INVALID_PROGRAMME_ID));","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":54}},{"path":"src/test/java/command/programme/edit/TestEditProgrammeCommand.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package command.programme.edit;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"TVageesan"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"TVageesan"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"TVageesan"},"content":"// A concrete subclass of EditCommand to help testing abstract EditCommand class","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"TVageesan"},"content":"class TestEditProgrammeCommand extends EditProgrammeCommand {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"TVageesan"},"content":"    public TestEditProgrammeCommand(int programmeIndex, int dayIndex, int exerciseIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex, exerciseIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"    public TestEditProgrammeCommand(int programmeIndex, int dayIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex, dayIndex);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"TVageesan"},"content":"    public TestEditProgrammeCommand(int programmeIndex) {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"TVageesan"},"content":"        super(programmeIndex);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"TVageesan"},"content":"    @Override","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"    public CommandResult execute(ProgrammeList programmes) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"        return new CommandResult(\"Executed\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"TVageesan"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"TVageesan":24}},{"path":"src/test/java/command/water/AddWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"public class AddWaterCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private AddWaterCommand addWaterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private float waterAmount;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    private DailyRecord mockDailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        // Initialize the mocks","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        waterAmount \u003d 1.5f;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        addWaterCommand \u003d new AddWaterCommand(waterAmount, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        CommandResult expectedResult \u003d new CommandResult(waterAmount + \" liters of water has been added\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d addWaterCommand.execute(mockHistory);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        verify(mockDailyRecord).addWaterToRecord(waterAmount);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedResult, result,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"                \"Execution should return a CommandResult with the correct success message.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullDailyRecord() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return null for the DailyRecord","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(null);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e addWaterCommand.execute(mockHistory),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"                \"Executing AddWaterCommand without a valid DailyRecord should throw an AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNegativeWaterAmount() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new AddWaterCommand(-1.0f, date),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"                \"Creating AddWaterCommand with a negative water amount should throw AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"Atulteja":68}},{"path":"src/test/java/command/water/DeleteWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"public class DeleteWaterCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private DeleteWaterCommand deleteWaterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    private float sampleWaterAmount;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    private DailyRecord mockDailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        // Initialize the mocks","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        sampleWaterAmount \u003d 1.5f;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        when(mockDailyRecord.removeWaterFromRecord(0)).thenReturn(sampleWaterAmount);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        deleteWaterCommand \u003d new DeleteWaterCommand(0, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        CommandResult expectedResult \u003d new CommandResult(sampleWaterAmount +","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"                \" liters of water has been deleted\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d deleteWaterCommand.execute(mockHistory);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        verify(mockDailyRecord).removeWaterFromRecord(0);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedResult, result,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"                \"Execution should return a CommandResult with the correct success message.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullDailyRecord() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(null);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e deleteWaterCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"                \"DeleteWaterCommand without a valid DailyRecord should throw an AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseInvalidIndex() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        // Set up DailyRecord mock to throw IndexOutOfBoundsException when an invalid index is used","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        when(mockDailyRecord.removeWaterFromRecord(5)).thenThrow(new IndexOutOfBoundsException(\"Invalid index\"));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"        DeleteWaterCommand invalidIndexCommand \u003d new DeleteWaterCommand(5, date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e invalidIndexCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"                \"DeleteWaterCommand with an invalid index should throw IndexOutOfBoundsException.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNegativeIndex() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new DeleteWaterCommand(-1, date), \"Creating \" +","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"                \"DeleteWaterCommand with negative index should throw AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"Atulteja":81}},{"path":"src/test/java/command/water/ViewWaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.DailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import water.Water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"public class ViewWaterCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    private ViewWaterCommand viewWaterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    private DailyRecord mockDailyRecord;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"    private Water mockWater;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        // Set up History mock to return a DailyRecord for the specified date","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(mockDailyRecord);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        // Set up DailyRecord mock to return a Water object","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        when(mockDailyRecord.getWaterFromRecord()).thenReturn(mockWater);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        when(mockWater.toString()).thenReturn(\"Sample Water Record\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        viewWaterCommand \u003d new ViewWaterCommand(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        String expectedWaterMessage \u003d \"Water intake for \" + date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"                + \": \\n\\n\" + \"Sample Water Record\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        CommandResult expectedResult \u003d new CommandResult(expectedWaterMessage);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d viewWaterCommand.execute(mockHistory);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        verify(mockHistory).getRecordByDate(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        verify(mockDailyRecord).getWaterFromRecord();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedResult, result,","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"                \"Execution should return a CommandResult with the correct water record output.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteEdgeCaseNullDailyRecord() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        when(mockHistory.getRecordByDate(date)).thenReturn(null);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e viewWaterCommand.execute(mockHistory), \"Executing \" +","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"                \"ViewWaterCommand with a null DailyRecord should throw an AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNullDate() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new ViewWaterCommand(null), \"Creating \" +","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"                \"ViewWaterCommand with a null date should throw an AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"Atulteja":80}},{"path":"src/test/java/command/water/WaterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package command.water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.CommandResult;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import history.History;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import org.mockito.Mock;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"public class WaterCommandTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private WaterCommand waterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private LocalDate date;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    private History mockHistory;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    @Mock","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    private ProgrammeList mockProgrammeList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        MockitoAnnotations.openMocks(this);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        date \u003d LocalDate.now();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        waterCommand \u003d new TestWaterCommand(date);  // Using a concrete subclass for testing","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"        assertEquals(date, waterCommand.date, \"Date should be initialized correctly in WaterCommand.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNullDate() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestWaterCommand(null),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"                \"Creating WaterCommand with null date should throw an AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    public void testExecuteWithProgrammeListAndHistoryHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        CommandResult expected \u003d new CommandResult(\"Executed with history\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        CommandResult result \u003d waterCommand.execute(mockProgrammeList, mockHistory);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expected, result, \"Execute should return a CommandResult with the correct message.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        verify(mockHistory).getRecordByDate(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    // Concrete subclass of WaterCommand for testing purposes","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    private static class TestWaterCommand extends WaterCommand {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        public TestWaterCommand(LocalDate date) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"            super(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"        @Override","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"        public CommandResult execute(History history) {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"            history.getRecordByDate(date);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"            return new CommandResult(\"Executed with history\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"Atulteja":68}},{"path":"src/test/java/history/DailyRecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package history;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import exceptions.MealException;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import exceptions.WaterExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import meal.MealList;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"import programme.Day;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"import water.Water;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.spy;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.doReturn;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"public class DailyRecordTest {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"    private DailyRecord dailyRecord;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    private Day validDay;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"    private Meal meal1;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"    private Meal meal2;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"        validDay \u003d new Day(\"validDay\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"        validDay.insertExercise(new Exercise(3, 12, 50, 120, \"Bench_Press\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"        validDay.insertExercise(new Exercise(3, 12, 80, 200, \"Squat\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"        meal1 \u003d new Meal(\"potato\", 100);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"        meal2 \u003d new Meal(\"pasta\", 900);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    @AfterEach","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    public void tearDown() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        validDay \u003d null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"        meal1 \u003d null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"        meal2 \u003d null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"    public void testConstructor_default() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(dailyRecord.getWaterFromRecord());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(dailyRecord.getMealListFromRecord());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"    public void logDay_validDay() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.logDayToRecord(validDay);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"        assertEquals(validDay, dailyRecord.getDayFromRecord());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"    public void logDay_emptyDay() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"        Day emptyDay \u003d new Day(\"Empty Day\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.logDayToRecord(emptyDay);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"        assertEquals(emptyDay, dailyRecord.getDayFromRecord());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"    public void addMealToRecord_validMeals() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal2);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"        assertFalse(dailyRecord.getMealListFromRecord().isEmpty());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"        assertEquals(2, dailyRecord.getMealListFromRecord().getSize());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"pasta\", dailyRecord.getMealListFromRecord().getMeals().get(1).getName());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"    public void addMealToRecord_negativeCaloriesMeal() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"        assertThrows(AssertionError.class, () -\u003e dailyRecord.addMealToRecord(new Meal(\"potato\", -100)));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Bev-low"},"content":"    public void addMealToRecord_nullMeal() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"        assertThrows(AssertionError.class, () -\u003e dailyRecord.addMealToRecord(null));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"    public void deleteMealFromRecord_validIndex() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal2);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.deleteMealFromRecord(0);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bev-low"},"content":"        assertEquals(1, dailyRecord.getMealListFromRecord().getSize());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"pasta\", dailyRecord.getMealListFromRecord().getMeals().get(0).getName());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Bev-low"},"content":"    public void deleteMealFromRecord_negativeIndex() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Bev-low"},"content":"        assertThrows(MealException.class, () -\u003e dailyRecord.deleteMealFromRecord(-1),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Bev-low"},"content":"                \"Expected MealException for negative index in meal list.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Bev-low"},"content":"    public void deleteMealFromRecord_outOfBoundsIndex() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Bev-low"},"content":"        assertThrows(MealException.class, () -\u003e dailyRecord.deleteMealFromRecord(10),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Bev-low"},"content":"                \"Expected MealException for out-of-bounds index in meal list.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Bev-low"},"content":"    public void addWaterToRecord_validWater() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(400.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bev-low"},"content":"        assertFalse(dailyRecord.getWaterFromRecord().isEmpty());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Bev-low"},"content":"        assertEquals(2, dailyRecord.getWaterFromRecord().getWaterList().size());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Bev-low"},"content":"        assertEquals(100.0f, dailyRecord.getWaterFromRecord().getWaterList().get(0));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Bev-low"},"content":"    public void addWaterToRecord_negativeWater() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Bev-low"},"content":"        assertThrows(AssertionError.class, () -\u003e dailyRecord.addWaterToRecord(-500.0f));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Bev-low"},"content":"    public void removeWaterFromRecord_validIndex() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(400.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.removeWaterFromRecord(0);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Bev-low"},"content":"        assertEquals(1, dailyRecord.getWaterFromRecord().getWaterList().size());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Bev-low"},"content":"        assertEquals(400.0f, dailyRecord.getWaterFromRecord().getWaterList().get(0));","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Bev-low"},"content":"    public void removeWaterFromRecord_negativeIndex() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Bev-low"},"content":"        assertThrows(WaterExceptions.class, () -\u003e dailyRecord.removeWaterFromRecord(-1),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Bev-low"},"content":"                \"Expected WaterExceptions for negative index in water list.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Bev-low"},"content":"    public void removeWaterFromRecord_outOfBoundsIndex() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Bev-low"},"content":"        assertThrows(WaterExceptions.class, () -\u003e dailyRecord.removeWaterFromRecord(10),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Bev-low"},"content":"                \"Expected WaterExceptions for out-of-bounds index in water list.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Bev-low"},"content":"    public void getDayFromRecord_initialDay() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Bev-low"},"content":"        assertNull(dailyRecord.getDayFromRecord());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Bev-low"},"content":"    public void getDayFromRecord_afterLogDay() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.logDayToRecord(validDay);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"validDay\", dailyRecord.getDayFromRecord().getName());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Bev-low"},"content":"    public void getMealList_initialMealList() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Bev-low"},"content":"        MealList mealList \u003d dailyRecord.getMealListFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(mealList);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Bev-low"},"content":"        assertTrue(mealList.getMeals().isEmpty());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Bev-low"},"content":"    public void getMealList_afterAddMeal() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal2);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Bev-low"},"content":"        MealList mealList \u003d dailyRecord.getMealListFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"potato\", mealList.getMeals().get(0).getName());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"pasta\", mealList.getMeals().get(1).getName());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Bev-low"},"content":"    public void getMealList_afterDeleteMeal() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal2);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.deleteMealFromRecord(0);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Bev-low"},"content":"        assertEquals(1, dailyRecord.getMealListFromRecord().getSize());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Bev-low"},"content":"    public void getWater_initialWater() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Bev-low"},"content":"        Water water \u003d dailyRecord.getWaterFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(water);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Bev-low"},"content":"        assertTrue(water.getWaterList().isEmpty());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Bev-low"},"content":"    public void getWater_afterAddWater() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(400.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Bev-low"},"content":"        Water water \u003d dailyRecord.getWaterFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Bev-low"},"content":"        assertEquals(100.0f, water.getWaterList().get(0));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Bev-low"},"content":"        assertEquals(400.0f, water.getWaterList().get(1));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Bev-low"},"content":"    public void getWater_afterRemoveWater() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(400.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.removeWaterFromRecord(0);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Bev-low"},"content":"        assertEquals(1, dailyRecord.getWaterFromRecord().getWaterList().size());","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Bev-low"},"content":"    public void toString_emptyRecord() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Bev-low"},"content":"        MealList mockMealList \u003d mock(MealList.class);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Bev-low"},"content":"        Water mockWater \u003d mock(Water.class);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Bev-low"},"content":"        Day mockDay \u003d mock(Day.class);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d spy(new DailyRecord());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Bev-low"},"content":"        when(mockMealList.getMeals()).thenReturn(new ArrayList\u003cMeal\u003e());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Bev-low"},"content":"        when(mockWater.getWaterList()).thenReturn(new ArrayList\u003cFloat\u003e());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Bev-low"},"content":"        when(mockDay.getExercisesCount()).thenReturn(0);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Bev-low"},"content":"        doReturn(mockMealList).when(dailyRecord).getMealListFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Bev-low"},"content":"        doReturn(mockDay).when(dailyRecord).getDayFromRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Bev-low"},"content":"        doReturn(mockWater).when(dailyRecord).getWaterFromRecord();","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Bev-low"},"content":"        String result \u003d dailyRecord.toString();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.contains(\"No Day\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.contains(\"No Water\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.contains(\"No Meals\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Bev-low"},"content":"    public void toString_callsGetCaloriesFromMeal() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal1);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addMealToRecord(meal2);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Bev-low"},"content":"        String result \u003d dailyRecord.toString();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.contains(\"Total Calories from Meals:\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Bev-low"},"content":"    public void toString_callsGetTotalWater() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(100.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.addWaterToRecord(400.0f);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Bev-low"},"content":"        String result \u003d dailyRecord.toString();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.contains(\"Total Water Intake:\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Bev-low"},"content":"    public void toString_testDayToString() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Bev-low"},"content":"        dailyRecord \u003d new DailyRecord();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Bev-low"},"content":"        dailyRecord.logDayToRecord(validDay);","lastModifiedDate":"2024-11-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Bev-low"},"content":"        String result \u003d dailyRecord.toString();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Bev-low"},"content":"        assertFalse(result.contains(\"No Day\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"Bev-low":283}},{"path":"src/test/java/history/HistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package history;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"//","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andreusxcarvalho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.Day;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andreusxcarvalho"},"content":"import programme.Exercise;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andreusxcarvalho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andreusxcarvalho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"TVageesan"},"content":"public class HistoryTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andreusxcarvalho"},"content":"    private History history;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andreusxcarvalho"},"content":"    private Day day1;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andreusxcarvalho"},"content":"    private Day day2;","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andreusxcarvalho"},"content":"    private LocalDate date1;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andreusxcarvalho"},"content":"    private LocalDate date2;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andreusxcarvalho"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andreusxcarvalho"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andreusxcarvalho"},"content":"        history \u003d new History();","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andreusxcarvalho"},"content":"        // Create exercises for Day 1","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andreusxcarvalho"},"content":"        ArrayList\u003cExercise\u003e exercisesDay1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"TVageesan"},"content":"        exercisesDay1.add(new Exercise(3, 12, 50, 160,\"Bench_Press\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"TVageesan"},"content":"        exercisesDay1.add(new Exercise(3, 12, 80, 200,\"Squat\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andreusxcarvalho"},"content":"        // Create exercises for Day 2","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andreusxcarvalho"},"content":"        ArrayList\u003cExercise\u003e exercisesDay2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"TVageesan"},"content":"        exercisesDay2.add(new Exercise(3, 10, 100, 200,\"Deadlift\"));","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"TVageesan"},"content":"        exercisesDay2.add(new Exercise(4, 8, 0, 100,\"Pull_Up\"));  // No weight for Pull_Up","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andreusxcarvalho"},"content":"        // Create Day objects","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"        day1 \u003d new Day(\"Day 1\", exercisesDay1);","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andreusxcarvalho"},"content":"        day2 \u003d new Day(\"Day 2\", exercisesDay2);","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andreusxcarvalho"},"content":"        // Dates for logging the days (now using LocalDate)","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andreusxcarvalho"},"content":"        date1 \u003d LocalDate.of(2024, 10, 12);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andreusxcarvalho"},"content":"        date2 \u003d LocalDate.of(2024, 10, 13);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andreusxcarvalho"},"content":"    @Test","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andreusxcarvalho"},"content":"    public void testLogDayAndToString() {","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andreusxcarvalho"},"content":"        // Log the days into history","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"        //DailyRecord dailyrecord1 \u003d history.getRecordByDate(date1);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"        //DailyRecord dailyrecord2 \u003d history.getRecordByDate(date1);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"        //dailyrecord1.logDay(day1);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"        //dailyrecord2.logDay(day2);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andreusxcarvalho"},"content":"        // Object-based comparison","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"        //assertEquals(day1, history.getRecordByDate(date1).getDayFromRecord());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"        //assertEquals(day2, history.getRecordByDate(date2).getDayFromRecord());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"andreusxcarvalho"},"content":"    @Test","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"andreusxcarvalho"},"content":"    public void testEmptyHistory() {","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"andreusxcarvalho"},"content":"        // Ensure that history returns \"No workout history available\" when empty","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"        //assertEquals(\"No workout history available.\", history.toString());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"andreusxcarvalho"},"content":"    }","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"andreusxcarvalho"},"content":"    public void testOverwriteDay() {","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"andreusxcarvalho"},"content":"        // Log day1 with date1, then log another day with the same date to overwrite","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        //history.getRecordByDate(date1).logDay(day1);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andreusxcarvalho"},"content":"        // Modify day1 with a different exercise","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"        //Day modifiedDay \u003d new Day(\"Day 1\");","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"        //modifiedDay.insertExercise(new Exercise(3, 12, 15, \"Bicep_Curl\"));","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"andreusxcarvalho"},"content":"        // Log the modified day with the same date","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"        //history.getRecordByDate(date1).logDay(modifiedDay);","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andreusxcarvalho"},"content":"        // Object-based comparison","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"        //assertEquals(modifiedDay, history.getRecordByDate(date1).getDayFromRecord());","lastModifiedDate":"2024-10-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-10-18","isFullCredit":false}],"authorContributionMap":{"TVageesan":6,"Bev-low":13,"-":6,"andreusxcarvalho":52}},{"path":"src/test/java/meal/MealListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package meal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"import exceptions.MealException;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"public class MealListTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"    private MealList mealList;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    private Meal sampleMeal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"        mealList \u003d new MealList();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"        sampleMeal \u003d new Meal(\"Sample Meal\", 300);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    public void testIsEmptyHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"        assertTrue(mealList.isEmpty(), \"Meal list \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"                \"should be empty initially.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    public void testIsEmptyEdgeCaseNonEmptyList() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        assertFalse(mealList.isEmpty(), \"Meal list should not be empty after adding a meal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    public void testIsEmptyEdgeCaseEmptyAfterDeletion() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        mealList.deleteMeal(0);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"        assertTrue(mealList.isEmpty(), \"Meal list \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"                \"should be empty after adding and then deleting the only meal.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    public void testGetSizeHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        assertEquals(1, mealList.getSize(), \"Size should be 1 after adding one meal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"    public void testGetSizeEdgeCaseEmptyList() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        assertEquals(0, mealList.getSize(), \"Size should be 0 for an empty meal list.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    public void testGetSizeEdgeCaseMultipleMeals() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(new Meal(\"Another Meal\", 500));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        assertEquals(2, mealList.getSize(), \"Size should be 2 after adding two meals.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    public void testAddMealHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"        assertEquals(1, mealList.getSize(), \"Size should be 1 after adding one meal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        assertTrue(mealList.getMeals().contains(sampleMeal), \"Meal list should \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"                \"contain the added meal.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    public void testAddMealEdgeCaseNullMeal() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e mealList.addMeal(null), \"Adding a null \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"                \"meal should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    public void testAddMealEdgeCaseDuplicateMeals() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"        assertEquals(2, mealList.getSize(), \"Size should \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"                \"be 2 after adding the same meal twice.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"    public void testDeleteMealHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"        Meal deletedMeal \u003d mealList.deleteMeal(0);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"        assertEquals(deletedMeal, sampleMeal, \"Deleted meal should be equal to the meal added.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"        assertTrue(mealList.isEmpty(), \"Meal list should be empty after deleting the only meal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"    public void testDeleteMealEdgeCaseNegativeIndex() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Bev-low"},"content":"        assertThrows(MealException.class, () -\u003e mealList.deleteMeal(-1),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"andreusxcarvalho"},"content":"                \"Deleting with a negative index should throw IndexOutOfBoundsBuffBuddyException.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"    public void testDeleteMealEdgeCaseIndexOutOfBounds() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"        assertThrows(MealException.class, () -\u003e mealList.deleteMeal(1),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"andreusxcarvalho"},"content":"                \"Deleting with an out-of-bounds index should throw IndexOutOfBoundsBuffBuddyException.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Atulteja"},"content":"    public void testGetMealsHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Atulteja"},"content":"        ArrayList\u003cMeal\u003e meals \u003d mealList.getMeals();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Atulteja"},"content":"        assertEquals(1, meals.size(), \"Meal list should have one meal after adding one.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Atulteja"},"content":"        assertEquals(meals.get(0), sampleMeal, \"The meal retrieved should be equal to the added meal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Atulteja"},"content":"    public void testGetMealsEdgeCaseEmptyList() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Atulteja"},"content":"        ArrayList\u003cMeal\u003e meals \u003d mealList.getMeals();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Atulteja"},"content":"        assertTrue(meals.isEmpty(), \"Retrieved list should be empty for a new MealList instance.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Atulteja"},"content":"    public void testGetMealsEdgeCaseMultipleMeals() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Atulteja"},"content":"        Meal anotherMeal \u003d new Meal(\"Another Meal\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(sampleMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Atulteja"},"content":"        mealList.addMeal(anotherMeal);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Atulteja"},"content":"        ArrayList\u003cMeal\u003e meals \u003d mealList.getMeals();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Atulteja"},"content":"        assertEquals(2, meals.size(), \"Meal list should contain two meals after adding two.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Atulteja"},"content":"        assertTrue(meals.get(0).equals(sampleMeal) \u0026\u0026 meals.get(1).equals(anotherMeal),","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Atulteja"},"content":"                \"Meals should be equal to those added.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":124,"Bev-low":3,"andreusxcarvalho":2}},{"path":"src/test/java/meal/MealTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package meal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"public class MealTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"        Meal meal \u003d new Meal(\"Sample Meal\", 300);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"        assertEquals(\"Sample Meal\", meal.getName(), \"Meal name should match the expected value.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"        assertEquals(300, meal.getCalories(), \"Meal calories should match the expected value.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNullName() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new Meal(null, 300), \"Creating \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"                \"a Meal with a null name should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseEmptyName() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new Meal(\"\", 300), \"Creating \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"                \"a Meal with an empty name should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    public void testConstructorEdgeCaseNegativeCalories() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e new Meal(\"Negative Calories Meal\", -100),","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"                \"Create a Meal with negative calories should throw an AssertionError.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    public void testGetCaloriesHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        Meal meal \u003d new Meal(\"Sample Meal\", 250);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        assertEquals(250, meal.getCalories(), \"getCalories should \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"                \"return the correct calorie count.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    public void testGetNameHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"        Meal meal \u003d new Meal(\"Healthy Salad\", 150);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        assertEquals(\"Healthy Salad\", meal.getName(), \"getName \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"                \"should return the correct meal name.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"    public void testEqualsHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        Meal meal1 \u003d new Meal(\"Same Meal\", 400);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        Meal meal2 \u003d new Meal(\"Same Meal\", 400);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"        assertEquals(meal1, meal2, \"Meals with the same name and calories should be equal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"    public void testEqualsEdgeCaseDifferentCalories() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        Meal meal1 \u003d new Meal(\"Same Meal\", 400);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"        Meal meal2 \u003d new Meal(\"Same Meal\", 300);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Atulteja"},"content":"        assertNotEquals(meal1, meal2, \"Meals with different calories should not be equal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    public void testEqualsEdgeCaseDifferentName() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"        Meal meal1 \u003d new Meal(\"Meal One\", 400);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        Meal meal2 \u003d new Meal(\"Meal Two\", 400);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        assertNotEquals(meal1, meal2, \"Meals with different names should not be equal.\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"    public void testHashCodeHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        Meal meal1 \u003d new Meal(\"Hash Meal\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"        Meal meal2 \u003d new Meal(\"Hash Meal\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"        assertEquals(meal1.hashCode(), meal2.hashCode(), \"Meals with the \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"                \"same name and calories should have the same hash code.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"    public void testHashCodeEdgeCaseDifferentCalories() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"        Meal meal1 \u003d new Meal(\"Hash Meal\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"        Meal meal2 \u003d new Meal(\"Hash Meal\", 300);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"        assertNotEquals(meal1.hashCode(), meal2.hashCode(), \"Meals with \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"                \"different calories should have different hash codes.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"    public void testHashCodeEdgeCaseDifferentName() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"        Meal meal1 \u003d new Meal(\"Hash Meal One\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"        Meal meal2 \u003d new Meal(\"Hash Meal Two\", 500);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"        assertNotEquals(meal1.hashCode(), meal2.hashCode(), \"Meals with \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"                \"different names should have different hash codes.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Atulteja"},"content":"    public void testToStringHappyPath() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Atulteja"},"content":"        Meal meal \u003d new Meal(\"Sample Meal\", 350);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Atulteja"},"content":"        assertEquals(\"Sample Meal | 350kcal\", meal.toString(), \"toString should \" +","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Atulteja"},"content":"                \"return the correct formatted string.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"Atulteja":101}},{"path":"src/test/java/parser/FlagParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.FlagExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.MEAL_INDEX;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"import static parser.FlagDefinitions.WATER_INDEX;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"class FlagParserTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private FlagParser flagParser;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"/p 1 /d Day1 /date 12-12-2023 /w 2.5 /n TestExercise /s 3 /r 10\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        flagParser \u003d new FlagParser(argumentString);","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    void testHasFlagValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(flagParser.hasFlag(\"/p\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(flagParser.hasFlag(\"/t\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    void testHasFlagMissingFlag() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"        assertFalse(flagParser.hasFlag(\"/m\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"    void testHasFlagEmptyFlag() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e flagParser.hasFlag(\"\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"                \"Expected AssertionError for empty flag\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"    void testValidateRequiredFlagsValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        assertDoesNotThrow(() -\u003e flagParser.validateRequiredFlags(\"/p\", \"/d\", \"/t\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"                \"Expected no exception for valid flags\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    void testValidateRequiredFlagsMissingFlag() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        FlagExceptions exception \u003d assertThrows(FlagExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"                () -\u003e flagParser.validateRequiredFlags(\"/p\", MEAL_INDEX),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"                \"Expected MissingFlagBuffBuddyException for missing required flag\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(exception.getMessage().contains(MEAL_INDEX));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"    void testGetStringByFlagValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(\"Day1\", flagParser.getStringByFlag(\"/d\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"                \"Expected value \u0027Day1\u0027 for flag \u0027/d\u0027\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"    void testGetStringByFlagFlagNotPresent() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"        assertNull(flagParser.getStringByFlag(\"/x\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"                \"Expected null for non-existent flag \u0027/x\u0027\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"    void testGetStringByFlagEmptyFlag() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(AssertionError.class, () -\u003e flagParser.getStringByFlag(\"\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"                \"Expected AssertionError for empty flag\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"    void testGetIndexByFlagValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(0, flagParser.getIndexByFlag(\"/p\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"                \"Expected zero-based index \u00270\u0027 for flag \u0027/p\u0027 with value \u00271\u0027\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"    void testGetIndexByFlagInvalidIndex() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"        FlagParser invalidParser \u003d new FlagParser(\"/p abc\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e invalidParser.getIndexByFlag(\"/p\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"                \"Expected InvalidFormatBuffBuddyException for invalid index\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"    void testGetIntegerByFlagValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(3, flagParser.getIntegerByFlag(\"/s\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"                \"Expected integer value \u00273\u0027 for flag \u0027/s\u0027\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"    void testGetIntegerByFlagInvalidInteger() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"        FlagParser invalidParser \u003d new FlagParser(\"/s abc\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e invalidParser.getIntegerByFlag(\"/s\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"                \"Expected InvalidFormatBuffBuddyException for invalid integer\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"    void testGetFloatByFlagValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2.5f, flagParser.getFloatByFlag(\"/w\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"                \"Expected float value \u00272.5\u0027 for flag \u0027/w\u0027\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"    void testGetFloatByFlagInvalidFloat() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"        FlagParser invalidParser \u003d new FlagParser(\"/w abc\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e invalidParser.getFloatByFlag(WATER_INDEX),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"                \"Expected InvalidFormatBuffBuddyException for invalid float\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"    void testGetDateByFlagValidCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(LocalDate.of(2023, 12, 12), flagParser.getDateByFlag(\"/t\"),","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"                \"Expected date \u002712-12-2023\u0027 for flag \u0027/t\u0027\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"    void testGetDateByFlagInvalidDate() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"        FlagParser invalidParser \u003d new FlagParser(\"/t 32-12-2023\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e invalidParser.getDateByFlag(\"/t\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"                \"Expected InvalidFormatBuffBuddyException for invalid date\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"    void testParseNullArgumentString() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(FlagExceptions.class, () -\u003e new FlagParser(null),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"                \"Expected EmptyInputBuffBuddyException for null argument string\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"nirala-ts":137}},{"path":"src/test/java/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.Command;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import parser.command.factory.CommandFactory;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"class ParserTest {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private Parser parser;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    private CommandFactory commandFactoryMock;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        commandFactoryMock \u003d mock(CommandFactory.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        parser \u003d new Parser(commandFactoryMock);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"    void testParseValidCommand() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        String fullCommand \u003d \"prog start /p 1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        Command expectedCommand \u003d mock(Command.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        when(commandFactoryMock.createCommand(\"prog\", \"start /p 1\")).thenReturn(expectedCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d parser.parse(fullCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        assertNotNull(result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        verify(commandFactoryMock).createCommand(\"prog\", \"start /p 1\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    void testParseExitCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        String fullCommand \u003d \"bye\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        when(commandFactoryMock.createCommand(\"bye\", \"\")).thenReturn(new ExitCommand());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d parser.parse(fullCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(ExitCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    void testParseInvalidCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        String fullCommand \u003d \"unknownCommand\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        when(commandFactoryMock.createCommand(\"unknownCommand\", \"\")).","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"                thenReturn(new InvalidCommand());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d parser.parse(fullCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(InvalidCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"    void testParseEmptyCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e parser.parse(\"\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw EmptyInputBuffBuddyException on empty command\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"    void testParseOnlySpacesCommand() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e parser.parse(\"   \"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw EmptyInputBuffBuddyException on command with only spaces\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"    void testParseNullCommand() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e parser.parse(null),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw EmptyInputBuffBuddyException on null command\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"nirala-ts":81}},{"path":"src/test/java/parser/ParserUtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import static common.Utils.NULL_INTEGER;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import static common.Utils.NULL_FLOAT;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"class ParserUtilsTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"    // Tests for splitArguments","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"    void testSplitArgumentsValidInput() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"command arg1 arg2\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"        String[] result \u003d ParserUtils.splitArguments(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"        assertArrayEquals(new String[]{\"command\", \"arg1 arg2\"}, result,","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"                \"Should split command and arguments correctly.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    void testSplitArgumentsEmptyArgumentString() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"command\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        String[] result \u003d ParserUtils.splitArguments(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        assertArrayEquals(new String[]{\"command\", \"\"}, result, \"Should handle missing arguments.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    // Tests for trimInput","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"    void testTrimInputValidInput() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"  trim this  \";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        String result \u003d ParserUtils.trimInput(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(\"trim this\", result, \"Should trim leading and trailing whitespace.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    void testTrimInputEmptyString() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.trimInput(\" \"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw PaserExceptions on empty input.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    // Tests for parseInteger","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"    void testParseIntegerValidInteger() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"42\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseInteger(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(42, result, \"Should parse valid integer correctly.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    void testParseIntegerLargeNumberEdgeCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"2147483647\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseInteger(input); // Integer.MAX_VALUE","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2147483647, result, \"Should parse valid integer correctly.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"    void testParseIntegerNegativeEdgeCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"-1\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseInteger(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(-1, result, \"Should throw exception on invalid integer.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"    void testParseIntegerNullInputInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseInteger(null);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(NULL_INTEGER, result, \"Should return default NULL_INTEGER when input is null.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"    void testParseIntegerNonNumericInputInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.parseInteger(\"abc\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw PaserExceptions on invalid integer.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"    // Tests for parseFloat","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"    void testParseFloatValidFloat() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"3.14\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"        float result \u003d ParserUtils.parseFloat(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(3.14f, result, 0.001, \"Should parse valid float correctly.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"    void testParseFloatLargeFloatEdgeCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"3.4028235E38\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"        float result \u003d ParserUtils.parseFloat(input); // Float.MAX_VALUE","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(Float.MAX_VALUE, result, 0.001, \"Should parse valid float correctly.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"    void testParseFloatSmallNegativeEdgeCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"-0.0001\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"        float result \u003d ParserUtils.parseFloat(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(-0.0001f, result, 0.001, \"Should parse valid float correctly.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"    void testParseFloatNullInputInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"        float result \u003d ParserUtils.parseFloat(null);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(NULL_FLOAT, result, \"Should return default NULL_FLOAT when input is null.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"    void testParseFloatNonNumericInputInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.parseFloat(\"abc\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw PaserExceptions on invalid float.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"    // Tests for parseIndex","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"    void testParseIndexValidIndex() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"3\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseIndex(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2, result, \"Should parse and convert valid index to zero-based.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"    void testParseIndexLargeIndexEdgeCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"2147483647\"; // Integer.MAX_VALUE","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseIndex(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2147483646, result, \"Should handle large index correctly and convert to zero-based.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"    void testParseIndexZeroIndexEdgeCase() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"        String input \u003d \"1\";","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseIndex(input);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(0, result, \"Should handle zero-based conversion for index 1.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"    void testParseIndexNegativeIndexInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.parseIndex(\"-1\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw PaserExceptions on negative index.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nirala-ts"},"content":"    void testParseIndexNullInputInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nirala-ts"},"content":"        int result \u003d ParserUtils.parseIndex(null);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(NULL_INTEGER, result, \"Should return default NULL_INTEGER when input is null.\");","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nirala-ts"},"content":"    void testParseIndexNonNumericInputInvalid() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.parseIndex(\"abc\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw PaserExceptions on non-numeric index.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nirala-ts"},"content":"    // Tests for parseDate","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nirala-ts"},"content":"    void testParseDateValidDate() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nirala-ts"},"content":"        String dateString \u003d \"15-08-2023\"; // assuming DATE_FORMAT \u003d \"dd-MM-yyyy\"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nirala-ts"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2023, 8, 15);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nirala-ts"},"content":"        LocalDate actualDate \u003d ParserUtils.parseDate(dateString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDate, actualDate, \"The parsed date should match the expected date.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nirala-ts"},"content":"    void testParseDateCurrentDateWhenNullInput() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nirala-ts"},"content":"        LocalDate actualDate \u003d ParserUtils.parseDate(null);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nirala-ts"},"content":"        LocalDate expectedDate \u003d LocalDate.now();","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDate, actualDate, \"When the input is null, the parsed date should be today\u0027s date.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nirala-ts"},"content":"    void testParseDateTrimmedInput() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nirala-ts"},"content":"        String dateString \u003d \" 15-08-2023 \"; // Input with extra spaces","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nirala-ts"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2023, 8, 15);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nirala-ts"},"content":"        LocalDate actualDate \u003d ParserUtils.parseDate(dateString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDate, actualDate,","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nirala-ts"},"content":"                \"The parsed date should match the expected date, ignoring extra spaces.\");","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nirala-ts"},"content":"    void testParseDateValidLeapYearDate() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nirala-ts"},"content":"        String dateString \u003d \"29-02-2024\"; // Leap year date","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nirala-ts"},"content":"        LocalDate expectedDate \u003d LocalDate.of(2024, 2, 29);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nirala-ts"},"content":"        LocalDate actualDate \u003d ParserUtils.parseDate(dateString);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDate, actualDate, \"The parsed date should match the expected leap year date.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nirala-ts"},"content":"    void testParseDateInvalidDayInMonth() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.parseDate(\"31-02-2023\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw exception on invalid date (February 31st).\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nirala-ts"},"content":"    void testParseDateInvalidMonth() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e ParserUtils.parseDate(\"31-13-2023\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nirala-ts"},"content":"                \"Should throw exception on invalid month (13).\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"nirala-ts":203}},{"path":"src/test/java/parser/command/factory/CommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.Command;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"class CommandFactoryTest {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"    private CommandFactory commandFactory;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    private ProgCommandFactory progFactoryMock;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    private MealCommandFactory mealFactoryMock;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private WaterCommandFactory waterFactoryMock;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    private HistoryCommandFactory historyFactoryMock;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        progFactoryMock \u003d mock(ProgCommandFactory.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        mealFactoryMock \u003d mock(MealCommandFactory.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        waterFactoryMock \u003d mock(WaterCommandFactory.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"        historyFactoryMock \u003d mock(HistoryCommandFactory.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        commandFactory \u003d new CommandFactory(progFactoryMock, mealFactoryMock, waterFactoryMock, historyFactoryMock);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"    void testCreateExitCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d \"bye\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(ExitCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    void testCreateInvalidCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d \"unknownCommand\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(InvalidCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"    void testCreateProgCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d \"prog\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"start /p 1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        Command expectedCommand \u003d mock(Command.class);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        when(progFactoryMock.parse(argumentString)).thenReturn(expectedCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"        verify(progFactoryMock).parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    void testCreateMealCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d \"meal\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"add /name Sample Meal\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"        Command expectedCommand \u003d mock(Command.class);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"        when(mealFactoryMock.parse(argumentString)).thenReturn(expectedCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"        verify(mealFactoryMock).parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"    void testCreateWaterCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d \"water\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"log /volume 500\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"        Command expectedCommand \u003d mock(Command.class);","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"        when(waterFactoryMock.parse(argumentString)).thenReturn(expectedCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"        verify(waterFactoryMock).parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"    void testCreateHistoryCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"        String commandString \u003d \"history\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"view /d 11-11-2023\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"        Command expectedCommand \u003d mock(Command.class);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"        when(historyFactoryMock.parse(argumentString)).thenReturn(expectedCommand);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d commandFactory.createCommand(commandString, argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"        verify(historyFactoryMock).parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"nirala-ts":110}},{"path":"src/test/java/parser/command/factory/MealCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.Command;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.meals.AddMealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import command.meals.DeleteMealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import command.meals.ViewMealCommand;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import exceptions.FlagExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import meal.Meal;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"public class MealCommandFactoryTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"    private MealCommandFactory mealCommandFactory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"        mealCommandFactory \u003d new MealCommandFactory();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"    public void testParseAddMealCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"add /n Sample Meal /c 300 /t 31-10-2024\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andreusxcarvalho"},"content":"        AddMealCommand expectedCommand \u003d new AddMealCommand(new Meal(\"Sample Meal\", 300), LocalDate.of(2024, 10, 31));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"        Command result \u003d mealCommandFactory.parse(argumentString);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andreusxcarvalho"},"content":"        assertEquals(expectedCommand, result, \"Parsed command should be equal to the expected AddMealCommand.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"    public void testParseDeleteMealCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"delete /m 1 /t 31-10-2024\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andreusxcarvalho"},"content":"        DeleteMealCommand expectedCommand \u003d new DeleteMealCommand(0, LocalDate.of(2024, 10, 31));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"        Command result \u003d mealCommandFactory.parse(argumentString);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andreusxcarvalho"},"content":"        assertEquals(expectedCommand, result, \"Parsed command should be equal to the expected DeleteMealCommand.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    public void testParseViewMealCommand() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"view 31-10-2024\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"        ViewMealCommand expectedCommand \u003d new ViewMealCommand(LocalDate.of(2024, 10, 31));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        Command result \u003d mealCommandFactory.parse(argumentString);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"andreusxcarvalho"},"content":"        assertEquals(expectedCommand, result, \"Parsed command should be equal to the expected ViewMealCommand.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareAddCommandMissingNameFlag() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"/c 300 /t 31-10-2024\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"        assertThrows(FlagExceptions.class, () -\u003e mealCommandFactory.prepareAddCommand(argumentString),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"                \"Missing required flag /n should throw FlagException.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareAddCommandMissingCaloriesFlag() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"/n Sample meal /t 31-10-2024\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"        assertThrows(FlagExceptions.class, () -\u003e mealCommandFactory.prepareAddCommand(argumentString),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"                \"Missing required flag /c should throw FlagException.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareDeleteCommandMissingIndexFlag() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"/t 31-10-2024\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"        assertThrows(FlagExceptions.class, () -\u003e mealCommandFactory.prepareDeleteCommand(argumentString),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"                \"Missing required flag /m should throw FlagException.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareViewCommandInvalidDate() {","lastModifiedDate":"2024-11-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"invalid-date\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ParserExceptions.class, () -\u003e mealCommandFactory.prepareViewCommand(argumentString),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"andreusxcarvalho"},"content":"                \"Invalid date format should throw InvalidFormatBuffBuddyException.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"Atulteja":72,"Bev-low":9,"andreusxcarvalho":8}},{"path":"src/test/java/parser/command/factory/ProgCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package parser.command.factory;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import command.Command;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import command.programme.CreateProgrammeCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import command.programme.DeleteProgrammeCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import command.programme.ListProgrammeCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import command.programme.StartProgrammeCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import command.programme.ViewProgrammeCommand;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import command.programme.LogProgrammeCommand;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"import exceptions.FlagExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"import programme.Day;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"import programme.Exercise;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"import java.util.List;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"class ProgCommandFactoryTest {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"    private ProgCommandFactory progCommandFactory;","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        progCommandFactory \u003d new ProgCommandFactory();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"    // Tests for parse","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    void testParseValidCreateCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"create /p MyProgram /d Day1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(CreateProgrammeCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    void testParseValidListCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"list\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(ListProgrammeCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"    void testParseInvalidCommand() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"unknownCommand\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"        assertInstanceOf(InvalidCommand.class, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"    // Tests for prepareCreateCommand","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandValidInput() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram /d Day1 /e /name PushUps /set 3 /rep 15 /w 0 /c 50\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"        Day expectedDay \u003d new Day(\"Day1\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"        expectedDay.insertExercise(new Exercise(3, 15, 0, 50, \"PushUps\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e expectedDays \u003d new ArrayList\u003c\u003e(List.of(expectedDay));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"        CreateProgrammeCommand expectedCommand \u003d new CreateProgrammeCommand(\"MyProgram\", expectedDays);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(\"create \" + argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandNoDaysNoExercises() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyEmptyProgram\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"        CreateProgrammeCommand expectedCommand \u003d new CreateProgrammeCommand(\"MyEmptyProgram\",","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"                new ArrayList\u003c\u003e());","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(\"create \" + argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandMultipleDays() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram /d Day1 /e /name PushUps /set 3 /rep 15 /w 0 /c 50 /d \" +","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"                \"Day2 /e /name SitUps /set 2 /rep 20 /w 0 /c 30\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"        Day day1 \u003d new Day(\"Day1\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"        day1.insertExercise(new Exercise(3, 15, 0, 50, \"PushUps\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        Day day2 \u003d new Day(\"Day2\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"        day2.insertExercise(new Exercise(2, 20, 0, 30, \"SitUps\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e expectedDays \u003d new ArrayList\u003c\u003e(Arrays.asList(day1, day2));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"        CreateProgrammeCommand expectedCommand \u003d new CreateProgrammeCommand(\"MyProgram\", expectedDays);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(\"create \" + argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandMultipleDaysMultipleExercises() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram \" +","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"                \"/d Day1 /e /name PushUps /set 3 /rep 15 /w 0 /c 50 \" +","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"                \"/e /name SitUps /set 2 /rep 20 /w 0 /c 30 \" +","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"                \"/d Day2 /e /name Squats /set 4 /rep 10 /w 20 /c 100 \" +","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"                \"/e /name Lunges /set 3 /rep 12 /w 15 /c 80\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"        Day day1 \u003d new Day(\"Day1\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"        day1.insertExercise(new Exercise(3, 15, 0, 50, \"PushUps\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"        day1.insertExercise(new Exercise(2, 20, 0, 30, \"SitUps\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"        Day day2 \u003d new Day(\"Day2\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"        day2.insertExercise(new Exercise(4, 10, 20, 100, \"Squats\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"        day2.insertExercise(new Exercise(3, 12, 15, 80, \"Lunges\"));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e expectedDays \u003d new ArrayList\u003c\u003e(Arrays.asList(day1, day2));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"        CreateProgrammeCommand expectedCommand \u003d new CreateProgrammeCommand(\"MyProgram\", expectedDays);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(\"create \" + argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandMissingProgrammeName() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"/d Day1 /e /name PushUps /set 3 /rep 15 /w 0 /c 50\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nirala-ts"},"content":"                () -\u003e progCommandFactory.parse(\"create \" + argumentString));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandInvalidDayFormat() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram /d /e /name PushUps /set 3 /rep 15 /w 0 /c 50\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nirala-ts"},"content":"                () -\u003e progCommandFactory.parse(\"create \" + argumentString));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandInvalidExerciseFormat() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram /d Day1 /e /name PushUps /set 3 /rep 15 /w invalid /c 50\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nirala-ts"},"content":"                () -\u003e progCommandFactory.parse(\"create \" + argumentString));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandMissingExerciseName() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram /d Day1 /e /name  /set 3 /rep 15 /w 0 /c 50\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(FlagExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"nirala-ts"},"content":"                () -\u003e progCommandFactory.parse(\"create \" + argumentString));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareCreateCommandMissingExerciseFlag() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"MyProgram /d Day1 /e /name Lunges /rep 15 /w 0 /c 50\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(FlagExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nirala-ts"},"content":"                () -\u003e progCommandFactory.parse(\"create \" + argumentString));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"nirala-ts"},"content":"    // Tests for prepareViewCommand","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareViewCommandValidIndex() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"view 1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"nirala-ts"},"content":"        ViewProgrammeCommand expectedCommand \u003d new ViewProgrammeCommand(0);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareViewCommandInvalidIndexFormat() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"view invalidIndex\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e progCommandFactory.parse(argumentString));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareViewCommandNoIndex() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"view\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"nirala-ts"},"content":"        ViewProgrammeCommand expectedCommand \u003d new ViewProgrammeCommand(-1);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"nirala-ts"},"content":"    // Tests for prepareStartCommand","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareStartCommandValidIndex() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"start 1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"nirala-ts"},"content":"        StartProgrammeCommand expectedCommand \u003d new StartProgrammeCommand(0);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareStartCommandNoIndex() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"start\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e progCommandFactory.parse( argumentString));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareStartCommandInvalidIndexFormat() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"start invalidIndex\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e progCommandFactory.parse(argumentString));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"nirala-ts"},"content":"    // Tests for prepareDeleteCommand","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareDeleteCommandValidIndex() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"delete 1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"nirala-ts"},"content":"        DeleteProgrammeCommand expectedCommand \u003d new DeleteProgrammeCommand(0);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareDeleteCommandInvalidIndexFormat() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"delete invalidIndex\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e progCommandFactory.parse(argumentString));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareDeleteCommandNoIndex() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"delete\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"nirala-ts"},"content":"        DeleteProgrammeCommand expectedCommand \u003d new DeleteProgrammeCommand(-1);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"nirala-ts"},"content":"    // Tests for prepareLogCommand","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareLogCommandValidArgumentsAllFlags() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"log /p 1 /d 1 /date 05-11-2023\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"nirala-ts"},"content":"        LogProgrammeCommand expectedCommand \u003d new LogProgrammeCommand(0, 0,","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"nirala-ts"},"content":"                LocalDate.of(2023, 11, 5));","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareLogCommandMissingDayFlag() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"log /p 1 /date 05-11-2023\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(FlagExceptions.class, () -\u003e progCommandFactory.parse( argumentString));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareLogCommandInvalidDateFormat() {","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"nirala-ts"},"content":"        //Expected format: dd-MM-yyyy","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"log /p 1 /d 0 /date 2023-11-05\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ParserExceptions.class, () -\u003e progCommandFactory.parse( argumentString));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareLogCommandMissingDateFlag() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"log /p 1 /d 1\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"nirala-ts"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"nirala-ts"},"content":"        LogProgrammeCommand expectedCommand \u003d new LogProgrammeCommand(0, 0, currentDate);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"nirala-ts"},"content":"    public void testPrepareLogCommandMissingDateAndProgIndexFlag() {","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"nirala-ts"},"content":"        String argumentString \u003d \"log /d 4\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"nirala-ts"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"nirala-ts"},"content":"        LogProgrammeCommand expectedCommand \u003d new LogProgrammeCommand(-1, 3, currentDate);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"nirala-ts"},"content":"        Command result \u003d progCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedCommand, result);","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-31","isFullCredit":false}],"authorContributionMap":{"nirala-ts":311}},{"path":"src/test/java/parser/command/factory/WaterCommandFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package parser.command.factory;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Atulteja"},"content":"import command.Command;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import command.water.AddWaterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import command.water.DeleteWaterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"import command.water.ViewWaterCommand;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import exceptions.FlagExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import exceptions.ParserExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"public class WaterCommandFactoryTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    private WaterCommandFactory waterCommandFactory;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"        waterCommandFactory \u003d new WaterCommandFactory();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"    public void testParseAddWaterCommand() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"add /v 1.5 /t 31-10-2024\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"        AddWaterCommand expectedCommand \u003d new AddWaterCommand(1.5f, LocalDate.of(2024, 10, 31));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"        Command result \u003d waterCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedCommand, result, \"Parsed command should be equal to the expected AddWaterCommand.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    public void testParseDeleteWaterCommand() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"delete /w 1 /t 31-10-2024\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"        DeleteWaterCommand expectedCommand \u003d new DeleteWaterCommand(0, LocalDate.of(2024, 10, 31));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        Command result \u003d waterCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedCommand, result, \"Parsed command should be equal to the expected DeleteWaterCommand.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"    public void testParseViewWaterCommand() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"view 31-10-2024\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"        ViewWaterCommand expectedCommand \u003d new ViewWaterCommand(LocalDate.of(2024, 10, 31));","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"        Command result \u003d waterCommandFactory.parse(argumentString);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedCommand, result, \"Parsed command should be equal to the expected ViewWaterCommand.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareAddCommandMissingRequiredFlags() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"        // Missing /v (volume) flag","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"/t 31-10-2024\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"        assertThrows(FlagExceptions.class, () -\u003e waterCommandFactory.prepareAddCommand(argumentString),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"                \"Missing required flag /v should throw FlagException.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareDeleteCommandMissingRequiredFlags() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"        // Missing /w (water index) flag","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"/t 31-10-2024\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"        assertThrows(FlagExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andreusxcarvalho"},"content":"                () -\u003e waterCommandFactory.prepareDeleteCommand(argumentString),","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"                \"Missing required flag /w should throw FlagException.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    public void testPrepareViewCommandInvalidDate() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"        String argumentString \u003d \"invalid-date\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"        assertThrows(ParserExceptions.class,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andreusxcarvalho"},"content":"                () -\u003e waterCommandFactory.prepareViewCommand(argumentString),","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"                \"Invalid date format should throw FlagException.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false}],"authorContributionMap":{"Atulteja":73,"Bev-low":8,"andreusxcarvalho":3}},{"path":"src/test/java/programme/DayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package programme;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import java.util.Collections;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"public class DayTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"    private Day day;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    private Exercise exercise1;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    private Exercise exercise2;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"        exercise1 \u003d new Exercise(3, 10, 50, 160, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"        exercise2 \u003d new Exercise(3, 12, 20, 100, \"Triceps_Extension\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        day \u003d new Day(\"Push\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    void testConstructorWithEmptyExerciseList() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        Day expectedDay \u003d new Day(\"Push\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDay, day);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    void testConstructorWithPredefinedExerciseList() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cExercise\u003e exercises \u003d new ArrayList\u003c\u003e(Arrays.asList(exercise1, exercise2));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"        Day predefinedDay \u003d new Day(\"Push\", exercises);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        Day expectedDay \u003d new Day(\"Push\", exercises);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDay, predefinedDay);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    void testInsertExercise() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cExercise\u003e expectedExercises \u003d new ArrayList\u003c\u003e(Arrays.asList(exercise1, exercise2));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"        Day expectedDay \u003d new Day(\"Push\", expectedExercises);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDay, day);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"    void testGetExerciseInvalidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e day.getExercise(0));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteExercise() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"        day.deleteExercise(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cExercise\u003e expectedExercises \u003d new ArrayList\u003c\u003e(Collections.singletonList(exercise2));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"        Day expectedDay \u003d new Day(\"Push\", expectedExercises);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedDay, day);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteExerciseInvalidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e day.deleteExercise(0));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"    void testGetTotalCaloriesBurnt() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"        int totalCalories \u003d day.getTotalCaloriesBurnt();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(260, totalCalories); // 160 + 100","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"    void testToString() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"        day.insertExercise(exercise2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"        String expectedOutput \u003d \"Push\\n\" +","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"                \"1. Bench_Press: 3 sets of 10 at 50kg | Burnt 160 cals\\n\" +","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"                \"2. Triceps_Extension: 3 sets of 12 at 20kg | Burnt 100 cals\\n\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"                expectedOutput.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\"),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"                day.toString().replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\")","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"        );","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"    void testEqualsAndHashCode() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cExercise\u003e exercises \u003d new ArrayList\u003c\u003e(Arrays.asList(exercise1, exercise2));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"        Day day1 \u003d new Day(\"Push\", exercises);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"        Day day2 \u003d new Day(\"Push\", new ArrayList\u003c\u003e(Arrays.asList(exercise1, exercise2)));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(day1, day2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(day1.hashCode(), day2.hashCode());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"    void testNotEquals() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"        Day otherDay \u003d new Day(\"Pull\", new ArrayList\u003c\u003e(Arrays.asList(exercise1, exercise2)));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"        assertNotEquals(day, otherDay);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-11-06","isFullCredit":false}],"authorContributionMap":{"nirala-ts":118}},{"path":"src/test/java/programme/ExerciseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package programme;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"class ExerciseTest {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"    private Exercise exercise;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"        exercise \u003d new Exercise(1, 2, 3, 400, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    void testConstructor() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(1, 2, 3, 400, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"    void testUpdateExerciseSets() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        ExerciseUpdate update \u003d new ExerciseUpdate(5, null,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"                null, null, null);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"        exercise.updateExercise(update);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(5, 2,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"                3, 400, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    void testUpdateExerciseReps() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"        ExerciseUpdate update \u003d new ExerciseUpdate(null, 12,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"                null, null, null);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        exercise.updateExercise(update);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(1, 12,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"                3, 400, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"    void testUpdateExerciseWeight() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        ExerciseUpdate update \u003d new ExerciseUpdate(null, null,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"                60, null, null);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        exercise.updateExercise(update);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(1, 2,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"                60, 400, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"    void testUpdateExerciseCalories() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        ExerciseUpdate update \u003d new ExerciseUpdate(null, null,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"                null, 200, null);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        exercise.updateExercise(update);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(1, 2,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"                3, 200, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"    void testUpdateExerciseName() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"        ExerciseUpdate update \u003d new ExerciseUpdate(null, null,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"                null, null, \"Incline_Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"        exercise.updateExercise(update);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(1, 2,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"                3, 400, \"Incline_Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"    void testUpdateMultipleFields() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"        ExerciseUpdate update \u003d new ExerciseUpdate(4, 12,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"                55, 180, \"Incline_Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"        exercise.updateExercise(update);","lastModifiedDate":"2024-10-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"        Exercise expectedExercise \u003d new Exercise(4, 12,","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"                55, 180, \"Incline_Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedExercise, exercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"    void testEqualsAndHashCode() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"        Exercise exerciseCopy \u003d new Exercise(1, 2, 3, 400, \"Bench_Press\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(exercise, exerciseCopy);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(exercise.hashCode(), exerciseCopy.hashCode());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"    void testNotEquals() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"        Exercise differentExercise \u003d new Exercise(3, 10, 50, 160, \"Squats\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"        assertNotEquals(exercise, differentExercise);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"    void testToString() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"        String expectedString \u003d \"Bench_Press: 1 sets of 2 at 3kg | Burnt 400 cals\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedString, exercise.toString());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"    void testGetCalories() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(400, exercise.getCalories());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"    void testGetWeight() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(3, exercise.getWeight());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"    void testGetName() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(\"Bench_Press\", exercise.getName());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"nirala-ts":125}},{"path":"src/test/java/programme/ProgrammeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package programme;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"public class ProgrammeListTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"    private ProgrammeList programmeList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"    private Programme mockProgramme1;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    private Programme mockProgramme2;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    private Day mockDay1;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    private Day mockDay2;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"        programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        // Create mock Programme and Day objects","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"        mockProgramme1 \u003d mock(Programme.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"        mockProgramme2 \u003d mock(Programme.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"        mockDay1 \u003d mock(Day.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        mockDay2 \u003d mock(Day.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        // Stub methods for mock programmes","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        when(mockProgramme1.getProgrammeName()).thenReturn(\"Mocked Programme 1\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"        when(mockProgramme2.getProgrammeName()).thenReturn(\"Mocked Programme 2\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        when(mockProgramme1.getDay(0)).thenReturn(mockDay1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        when(mockProgramme1.deleteDay(0)).thenReturn(mockDay1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        // Insert mock Programmes into ProgrammeList","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        days1.add(mockDay1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Mocked Programme 1\", days1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"        days2.add(mockDay2);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"        programmeList.insertProgramme(\"Mocked Programme 2\", days2);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"        // Replace with mocked Programmes","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        programmeList.getProgrammeList().set(0, mockProgramme1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"        programmeList.getProgrammeList().set(1, mockProgramme2);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"    void testInsertProgramme() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"        days.add(mockDay1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        Programme newProgramme \u003d programmeList.insertProgramme(\"New Programme\", days);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(newProgramme, programmeList.getProgramme(2));","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(3, programmeList.getProgrammeListSize());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteProgrammeValidIndex() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"        Programme deletedProgramme \u003d programmeList.deleteProgram(0);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockProgramme1, deletedProgramme);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(1, programmeList.getProgrammeListSize());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteActiveProgramme() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"        programmeList.startProgramme(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"        Programme deletedProgramme \u003d programmeList.deleteProgram(-1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockProgramme1, deletedProgramme);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(1, programmeList.getProgrammeListSize());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteProgrammeInvalidIndex() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e programmeList.deleteProgram(5));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2, programmeList.getProgrammeListSize());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"    void testGetActiveProgramme() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"        programmeList.startProgramme(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"        Programme activeProgramme \u003d programmeList.getProgramme(-1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockProgramme1, activeProgramme);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"    void testGetProgrammeValidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"        Programme programme \u003d programmeList.getProgramme(1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockProgramme2, programme);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nirala-ts"},"content":"    void testGetProgrammeInvalidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e programmeList.getProgramme(5));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nirala-ts"},"content":"    void testStartProgramme() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nirala-ts"},"content":"        Programme activeProgramme \u003d programmeList.startProgramme(1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockProgramme2, activeProgramme);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nirala-ts"},"content":"    void testStartProgrammeInvalidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e programmeList.startProgramme(5));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nirala-ts"},"content":"    void testToString() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nirala-ts"},"content":"        programmeList.startProgramme(0);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nirala-ts"},"content":"        String programmeListString \u003d programmeList.toString();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nirala-ts"},"content":"        String expectedString \u003d \"1. Mocked Programme 1 -- Active\\n2. Mocked Programme 2\\n\";","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedString, programmeListString);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nirala-ts"},"content":"    void testToStringEmptyList() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nirala-ts"},"content":"        ProgrammeList emptyProgrammeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nirala-ts"},"content":"        String programmeListString \u003d emptyProgrammeList.toString();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nirala-ts"},"content":"        String expectedString \u003d \"No programmes found.\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedString, programmeListString);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2024-10-20","isFullCredit":false}],"authorContributionMap":{"nirala-ts":139}},{"path":"src/test/java/programme/ProgrammeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nirala-ts"},"content":"// @@author nirala-ts","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"package programme;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nirala-ts"},"content":"import exceptions.ProgrammeExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"public class ProgrammeTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"    private Programme programme;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"    private Day mockDay1;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"    private Day mockDay2;","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nirala-ts"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"        mockDay1 \u003d mock(Day.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"        mockDay2 \u003d mock(Day.class);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e dayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        dayList.add(mockDay1);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"        programme \u003d new Programme(\"Mocked Programme\", dayList);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"    void testConstructor() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        ArrayList\u003cDay\u003e dayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        dayList.add(mockDay1);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        Programme newProgramme \u003d new Programme(\"Test Programme\", dayList);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(\"Test Programme\", newProgramme.getProgrammeName());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(1, newProgramme.getDayCount());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"    void testGetProgrammeName() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(\"Mocked Programme\", programme.getProgrammeName());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"    void testGetDayValidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"        Day day \u003d programme.getDay(0);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockDay1, day);","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    void testGetDayInvalidIndex() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e programme.getDay(5));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"    void testInsertDay() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        programme.insertDay(mockDay2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2, programme.getDayCount());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockDay2, programme.getDay(1));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteDayValidIndex() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nirala-ts"},"content":"        Day deletedDay \u003d programme.deleteDay(0);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(mockDay1, deletedDay);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(0, programme.getDayCount());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nirala-ts"},"content":"    void testDeleteDayInvalidIndex() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nirala-ts"},"content":"        assertThrows(ProgrammeExceptions.class, () -\u003e programme.deleteDay(5));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nirala-ts"},"content":"    void testGetDayCount() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(1, programme.getDayCount());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nirala-ts"},"content":"        programme.insertDay(mockDay2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(2, programme.getDayCount());","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nirala-ts"},"content":"    void testToString() {","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nirala-ts"},"content":"        programme.insertDay(mockDay2);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nirala-ts"},"content":"        String expectedString \u003d \"Mocked Programme\\n\\nDay 1: \" + mockDay1 + \"\\nDay 2: \" + mockDay2 + \"\\n\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedString, programme.toString());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nirala-ts"},"content":"    void testToStringEmptyProgramme() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nirala-ts"},"content":"        Programme emptyProgramme \u003d new Programme(\"Empty Programme\", new ArrayList\u003c\u003e());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nirala-ts"},"content":"        String expectedString \u003d \"Empty Programme\\n\\n\";","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nirala-ts"},"content":"        assertEquals(expectedString, emptyProgramme.toString());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nirala-ts"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"nirala-ts":101}},{"path":"src/test/java/storage/DateSerializerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package storage;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"public class DateSerializerTest {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"    private DateSerializer dateSerializer;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"        dateSerializer \u003d new DateSerializer();","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"    public void testSerialize_validDate() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        LocalDate date \u003d LocalDate.of(2024, 12, 12);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"        JsonElement jsonElement \u003d dateSerializer.serialize(date, LocalDate.class, null);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"12-12-2024\", jsonElement.getAsString());","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    public void testSerialize_invalidDate() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"        LocalDate invalidDate \u003d null;","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"            dateSerializer.serialize(invalidDate, LocalDate.class, null);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        }, \"Serializer should throw an AssertionError for null input.\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"    public void testSerialize_emptyDate() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"        assertThrows(Exception.class, () -\u003e {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"            LocalDate emptyDate \u003d LocalDate.parse(\"\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"            dateSerializer.serialize(emptyDate, LocalDate.class, null);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"        }, \"Serializer should throw an exception for empty date string.\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"    public void testDeserialize_validJson() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        JsonElement jsonElement \u003d new JsonPrimitive(\"12-12-2024\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"        LocalDate date \u003d dateSerializer.deserialize(jsonElement, LocalDate.class, null);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"        assertEquals(LocalDate.of(2024, 12, 12), date);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"    public void testDeserialize_invalidJson() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"        JsonElement invalidJson \u003d new JsonPrimitive(\"invalid-date\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"            dateSerializer.deserialize(invalidJson, LocalDate.class, null);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"        });","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"    public void testDeserialize_emptyJson() {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        JsonElement emptyJson \u003d new JsonPrimitive(\"\");","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"            dateSerializer.deserialize(emptyJson, LocalDate.class, null);","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"        });","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-28","isFullCredit":false}],"authorContributionMap":{"Bev-low":70}},{"path":"src/test/java/storage/FileManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package storage;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonParser;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import java.io.File;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"import java.io.IOException;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"public class FileManagerTest {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"    private final String testFilePath \u003d \"./src/test/resources/test_data.json\";","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"    public void setUp() {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"        fileManager \u003d new FileManager(testFilePath);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"        File file \u003d new File(testFilePath);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"            file.delete();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    private void createTestFile(String content) throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"        try (FileWriter writer \u003d new FileWriter(testFilePath)) {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"            writer.write(content);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    public void testLoadProgrammeList_trivialCase() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"        JsonObject testData \u003d new JsonObject();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"        testData.add(\"programmeList\", JsonParser.parseString(\"{ \\\"programme\\\": \\\"test\\\" }\"));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"        createTestFile(testData.toString());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d fileManager.loadProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.has(\"programme\"), \"Programme list should contain the expected \u0027programme\u0027 key.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"    public void testLoadProgrammeList_fileNotFound() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d fileManager.loadProgrammeList();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.isJsonNull() || result.size() \u003d\u003d 0, \"ProgrammeList should \" +","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"                \"be empty when the file doesn\u0027t exist.\");","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"    public void testLoadProgrammeList_noProgrammeListKey() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        createTestFile(\"{}\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d fileManager.loadProgrammeList();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"        assertEquals(0, result.size(), \"Programme list should be empty when no \u0027programmeList\u0027 key is present.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"    public void testLoadHistory_trivialCase() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        JsonObject testData \u003d new JsonObject();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"        testData.add(\"history\", JsonParser.parseString(\"{ \\\"date\\\": \\\"2024-10-28\\\" }\"));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"        createTestFile(testData.toString());","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d fileManager.loadHistory();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.has(\"date\"), \"History should contain the expected \u0027date\u0027 key.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"    public void testLoadHistory_fileNotFound() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d fileManager.loadHistory();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"        assertTrue(result.isJsonNull() || result.size() \u003d\u003d 0, \"History should be empty when the file doesn\u0027t exist.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"    public void testLoadHistory_noHistoryKey() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"        createTestFile(\"{}\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d fileManager.loadHistory();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"        assertEquals(0, result.size(), \"History should be empty when no \u0027history\u0027 key is present.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"    public void testSave_trivialCase() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"        JsonObject testData \u003d new JsonObject();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"        testData.addProperty(\"key\", \"value\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"        fileManager.save(testData);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"        String fileContent \u003d Files.readString(Path.of(testFilePath));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d JsonParser.parseString(fileContent).getAsJsonObject();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"value\", result.get(\"key\").getAsString(), \"Saved data should contain the key and value.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"    public void testSave_emptyData() throws IOException {","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"        JsonObject emptyData \u003d new JsonObject();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"        fileManager.save(emptyData);","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"        String fileContent \u003d Files.readString(Path.of(testFilePath));","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"        JsonObject result \u003d JsonParser.parseString(fileContent).getAsJsonObject();","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bev-low"},"content":"        assertEquals(0, result.size(), \"File should contain an empty JSON object.\");","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2024-10-29","isFullCredit":false}],"authorContributionMap":{"Bev-low":107}},{"path":"src/test/java/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bev-low"},"content":"//@@author Bev-low","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"package storage;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Bev-low"},"content":"import com.google.gson.JsonParser;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Bev-low"},"content":"import history.History;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Bev-low"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Bev-low"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Bev-low"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Bev-low"},"content":"import java.io.IOException;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Bev-low"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.ArgumentMatchers.any;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Bev-low"},"content":"import static org.mockito.Mockito.doThrow;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Bev-low"},"content":"import programme.ProgrammeList;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Bev-low"},"content":"public class StorageTest {","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Bev-low"},"content":"    private FileManager mockFileManager;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Bev-low"},"content":"    private Storage storage;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Bev-low"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Bev-low"},"content":"    public void setUp() throws NoSuchFieldException, IllegalAccessException {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Bev-low"},"content":"        mockFileManager \u003d Mockito.mock(FileManager.class);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Bev-low"},"content":"        storage \u003d new Storage(\"./src/test/resources/test_data.json\");","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Bev-low"},"content":"        storage.setFileManager(mockFileManager);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Bev-low"},"content":"    @AfterEach","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Bev-low"},"content":"    public void tearDown() {","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Bev-low"},"content":"        storage \u003d null;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Bev-low"},"content":"        mockFileManager \u003d null;","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Bev-low"},"content":"    private JsonObject loadJsonFromFile() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Bev-low"},"content":"        try (FileReader reader \u003d new FileReader(\"./src/test/resources/validJson_data.json\")) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Bev-low"},"content":"            JsonElement element \u003d JsonParser.parseReader(reader);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Bev-low"},"content":"            return element.getAsJsonObject();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Bev-low"},"content":"        } catch(IOException e) {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Bev-low"},"content":"            throw new RuntimeException(\"Failed to load data due to: \" + e.getMessage());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Bev-low"},"content":"        }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2020-05-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Bev-low"},"content":"    public void testLoadProgrammeList_validJson() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d loadJsonFromFile();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Bev-low"},"content":"        JsonObject programmeListJsonObject \u003d jsonObject.getAsJsonObject(\"programmeList\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Bev-low"},"content":"        when(mockFileManager.loadProgrammeList()).thenReturn(programmeListJsonObject);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Bev-low"},"content":"        ProgrammeList programmeList \u003d storage.loadProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(programmeList);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Bev-low"},"content":"        assertEquals(1, programmeList.getProgrammeList().size());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Bev-low"},"content":"        assertEquals(\"Starter\", programmeList.getProgrammeList().get(0).getProgrammeName());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Bev-low"},"content":"    public void testLoadProgrammeList_emptyJson() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d new JsonObject();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Bev-low"},"content":"        when(mockFileManager.loadProgrammeList()).thenReturn(jsonObject);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Bev-low"},"content":"        ProgrammeList programmeList \u003d storage.loadProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(programmeList);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Bev-low"},"content":"        assertEquals(0, programmeList.getProgrammeList().size());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Bev-low"},"content":"    public void testLoadProgrammeList_null() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d null;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Bev-low"},"content":"        when(mockFileManager.loadProgrammeList()).thenReturn(jsonObject);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Bev-low"},"content":"        ProgrammeList programmeList \u003d storage.loadProgrammeList();","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(programmeList);","lastModifiedDate":"2024-10-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Bev-low"},"content":"    public void testLoadHistory_validJson() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d loadJsonFromFile();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Bev-low"},"content":"        JsonObject historyJsonObject \u003d jsonObject.getAsJsonObject(\"history\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Bev-low"},"content":"        when(mockFileManager.loadHistory()).thenReturn(historyJsonObject);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Bev-low"},"content":"        History history \u003d storage.loadHistory();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(history);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Bev-low"},"content":"        assertEquals(1, history.getHistorySize());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Bev-low"},"content":"    public void testLoadHistory_emptyJson() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d new JsonObject();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Bev-low"},"content":"        when(mockFileManager.loadProgrammeList()).thenReturn(jsonObject);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Bev-low"},"content":"        History history \u003d storage.loadHistory();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(history);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Bev-low"},"content":"        assertEquals(0, history.getHistorySize());","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Bev-low"},"content":"    public void testLoadHistory_null() throws Exception {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Bev-low"},"content":"        JsonObject jsonObject \u003d null;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Bev-low"},"content":"        when(mockFileManager.loadHistory()).thenReturn(jsonObject);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Bev-low"},"content":"        History history \u003d storage.loadHistory();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Bev-low"},"content":"        assertNotNull(history);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Bev-low"},"content":"    public void testSave_validJsonObject() throws Exception {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Bev-low"},"content":"        ProgrammeList programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Bev-low"},"content":"        History history \u003d new History();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Bev-low"},"content":"        storage.saveData(programmeList, history);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Bev-low"},"content":"        verify(mockFileManager).save(any(JsonObject.class));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Bev-low"},"content":"    public void testSaveData_nullProgrammeList() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Bev-low"},"content":"        History history \u003d new History();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Bev-low"},"content":"        assertThrows(AssertionError.class, () -\u003e storage.saveData(null, history), \"programmeList must not be null\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Bev-low"},"content":"    public void testSaveData_nullHistory() {","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Bev-low"},"content":"        ProgrammeList programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Bev-low"},"content":"        assertThrows(AssertionError.class, () -\u003e storage.saveData(programmeList, null), \"history must not be null\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-10-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Bev-low"},"content":"    @Test","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Bev-low"},"content":"    public void testSave_filePathDoesNotExist() throws Exception {","lastModifiedDate":"2024-10-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Bev-low"},"content":"        doThrow(new IOException(\"Simulated IO error\")).when(mockFileManager).save(any(JsonObject.class));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Bev-low"},"content":"        ProgrammeList programmeList \u003d new ProgrammeList();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Bev-low"},"content":"        History history \u003d new History();","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Bev-low"},"content":"        storage.saveData(programmeList, history);","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Bev-low"},"content":"        verify(mockFileManager).save(any(JsonObject.class));","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Bev-low"},"content":"    }","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Bev-low"},"content":"","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Bev-low"},"content":"}","lastModifiedDate":"2020-05-24","isFullCredit":false}],"authorContributionMap":{"Bev-low":145}},{"path":"src/test/java/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TVageesan"},"content":"package ui;","lastModifiedDate":"2024-10-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nirala-ts"},"content":"import command.CommandResult;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nirala-ts"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"TVageesan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nirala-ts"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nirala-ts"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nirala-ts"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nirala-ts"},"content":"class UiTest {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nirala-ts"},"content":"    private Ui ui;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nirala-ts"},"content":"    private ByteArrayOutputStream outputStream;","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nirala-ts"},"content":"    @BeforeEach","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nirala-ts"},"content":"    void setUp() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nirala-ts"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nirala-ts"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nirala-ts"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"TVageesan"},"content":"","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"TVageesan"},"content":"    @Test","lastModifiedDate":"2024-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nirala-ts"},"content":"    void testShowWelcome() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nirala-ts"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nirala-ts"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(output.contains(\"Hello! I\u0027m...\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nirala-ts"},"content":"        outputStream.reset();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nirala-ts"},"content":"    void testShowFarewell() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nirala-ts"},"content":"        ui.showFarewell();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nirala-ts"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(output.contains(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nirala-ts"},"content":"        outputStream.reset();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nirala-ts"},"content":"    void testShowMessageWithString() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nirala-ts"},"content":"        String testMessage \u003d \"This is a test message\";","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nirala-ts"},"content":"        ui.showMessage(testMessage);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nirala-ts"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(output.contains(testMessage));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nirala-ts"},"content":"        outputStream.reset();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nirala-ts"},"content":"    void testShowMessageWithException() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nirala-ts"},"content":"        Exception testException \u003d new Exception(\"Test exception message\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nirala-ts"},"content":"        ui.showMessage(testException);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nirala-ts"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(output.contains(\"Error: Test exception message\")); // Verify it includes the ERROR_HEADER","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nirala-ts"},"content":"        outputStream.reset();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nirala-ts"},"content":"","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nirala-ts"},"content":"    @Test","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nirala-ts"},"content":"    void testShowMessageWithCommandResult() {","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nirala-ts"},"content":"        CommandResult testResult \u003d new CommandResult(\"Test command result message\");","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nirala-ts"},"content":"        ui.showMessage(testResult);","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nirala-ts"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nirala-ts"},"content":"        assertTrue(output.contains(\"Test command result message\"));","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nirala-ts"},"content":"        outputStream.reset();","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nirala-ts"},"content":"    }","lastModifiedDate":"2024-10-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"TVageesan"},"content":"}","lastModifiedDate":"2024-10-13","isFullCredit":false}],"authorContributionMap":{"TVageesan":6,"nirala-ts":58}},{"path":"src/test/java/water/WaterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Atulteja"},"content":"package water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Bev-low"},"content":"import exceptions.WaterExceptions;","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Atulteja"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Atulteja"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Atulteja"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Atulteja"},"content":"public class WaterTest {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Atulteja"},"content":"    private Water water;","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Atulteja"},"content":"    @BeforeEach","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Atulteja"},"content":"    public void setUp() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Atulteja"},"content":"        water \u003d new Water();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Atulteja"},"content":"    public void testAddWaterHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Atulteja"},"content":"        water.addWater(2.5f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Atulteja"},"content":"        ArrayList\u003cFloat\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Atulteja"},"content":"        expectedList.add(2.5f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedList, water.getWaterList(), \"Water list should contain the added amount.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Atulteja"},"content":"    public void testAddWaterEdgeCaseNegativeWaterAmount() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Atulteja"},"content":"        assertThrows(AssertionError.class, () -\u003e water.addWater(-1.0f),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Atulteja"},"content":"                \"Adding negative water should throw AssertionError.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Atulteja"},"content":"    public void testIsEmptyInitiallyEmpty() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Atulteja"},"content":"        assertTrue(water.isEmpty(), \"New Water instance should be empty.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Atulteja"},"content":"    public void testIsEmptyAfterAddingWater() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Atulteja"},"content":"        water.addWater(1.0f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Atulteja"},"content":"        assertFalse(water.isEmpty(), \"Water instance should not be empty after adding water.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Atulteja"},"content":"    public void testDeleteWaterHappyPath() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Atulteja"},"content":"        water.addWater(3.0f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Atulteja"},"content":"        float deletedWater \u003d water.deleteWater(0);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Atulteja"},"content":"        assertEquals(3.0f, deletedWater, \"Deleted water amount should match the amount added.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Atulteja"},"content":"        assertTrue(water.isEmpty(), \"Water list should be empty after deleting the only entry.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Atulteja"},"content":"    public void testDeleteWaterEdgeCaseInvalidIndex() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"andreusxcarvalho"},"content":"        // Update to expect IndexOutOfBoundsBuffBuddyException instead of IndexOutOfBoundsException","lastModifiedDate":"2024-11-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Bev-low"},"content":"        assertThrows(WaterExceptions.class, () -\u003e water.deleteWater(0),","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Bev-low"},"content":"                \"Deleting from an empty list should throw WaterExceptions.\");","lastModifiedDate":"2024-11-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Atulteja"},"content":"    public void testGetWaterList() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Atulteja"},"content":"        water.addWater(1.5f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Atulteja"},"content":"        water.addWater(2.5f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Atulteja"},"content":"        ArrayList\u003cFloat\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Atulteja"},"content":"        expectedList.add(1.5f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Atulteja"},"content":"        expectedList.add(2.5f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedList, water.getWaterList(), \"Water list should contain all added amounts.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Atulteja"},"content":"    public void testToStringEmptyList() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Atulteja"},"content":"        // Test string output for an empty water list","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Atulteja"},"content":"        assertEquals(\"No record.\", water.toString(),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Atulteja"},"content":"                \"Empty water list should return \u0027No record.\u0027\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Atulteja"},"content":"    @Test","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Atulteja"},"content":"    public void testToStringWithEntries() {","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Atulteja"},"content":"        // Add entries and check the string representation","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Atulteja"},"content":"        water.addWater(1.0f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Atulteja"},"content":"        water.addWater(2.0f);","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Atulteja"},"content":"","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Atulteja"},"content":"        String expectedOutput \u003d \"1: 1.0\\n2: 2.0\";","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Atulteja"},"content":"        assertEquals(expectedOutput, water.toString(),","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Atulteja"},"content":"                \"String representation should match the format of indexed entries.\");","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Atulteja"},"content":"    }","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Atulteja"},"content":"}","lastModifiedDate":"2024-11-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"andreusxcarvalho"},"content":"","lastModifiedDate":"2024-11-05","isFullCredit":false}],"authorContributionMap":{"Atulteja":91,"Bev-low":3,"andreusxcarvalho":2}}]
