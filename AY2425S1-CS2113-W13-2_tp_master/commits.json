{"authorDailyContributionsMap":{"TheDinos":[{"date":"2024-10-02","commitResults":[{"hash":"42dbc077ea9c7f76ce13c0d4596743f7bb46f2c5","isMergeCommit":false,"messageTitle":"Updated AboutUs.md page","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":4,"deletions":8}}},{"hash":"c6c24098c10d3085437cd7e88a50870f873a4eb1","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Marcus-AboutUs","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"fe3a32b49228bbee401beeb3d02a21a6eed31bdd","isMergeCommit":true,"messageTitle":"Merge pull request #3 from TheDinos/Marcus-AboutUs","messageBody":"[Marcus Wong] Updated AboutUs.md page","fileTypesAndContributionMap":{}}]},{"date":"2024-10-09","commitResults":[{"hash":"55fbe7083fe70f87de2e18b6bb22d3eddb5b8788","isMergeCommit":false,"messageTitle":"Add TrainingSession class. Add support for constructor and editing exercise reps.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":24,"deletions":0}}},{"hash":"37a2fe9d98f1a0ad7e863467703e9ffd649feb2f","isMergeCommit":false,"messageTitle":"Add support for calculating award. Add support for outputting list of exercises.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":55,"deletions":0}}},{"hash":"70cb86e1a6f92b174f1f0357b71ada77483b4118","isMergeCommit":true,"messageTitle":"Merge pull request #25 from CheeKiangg/18-implement-exercisestation-abstract-class-and-the-6-inherited-station-class","messageBody":"feat: implemented ExerciseStation Abstract Class and its 6 inherited â€¦","fileTypesAndContributionMap":{}},{"hash":"8ac3cd1092156ba992f115815701442f191f6dba","isMergeCommit":true,"messageTitle":"Merge pull request #26 from CheeKiangg/19-implement-abstract-calculator-class-and-its-inherited-calculator-class","messageBody":"feat: implemented Calculator Abstract Class and its inherited classes","fileTypesAndContributionMap":{}},{"hash":"6056d97029372113b13253bbffce554dfd3d303b","isMergeCommit":true,"messageTitle":"Merge pull request #28 from CheeKiangg/27-refactor-calculator-package-exercisestation-package-and-lookupkey-class-to-fittrack-package","messageBody":"Refactor: insert calculator package, exercisestaton package and lookupkey class into fittrack package","fileTypesAndContributionMap":{}},{"hash":"738bad5c7c863e7929a64c3a516634ac9bd1f80a","isMergeCommit":false,"messageTitle":"Refactor multiple classes Ensure consistent variable naming Ensure appropriate imports","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":20,"deletions":15},"other":{"insertions":5,"deletions":3}}},{"hash":"4e4af0969fb157529ac9d6e14ab56018bb3a1e98","isMergeCommit":true,"messageTitle":"Merge pull request #30 from TheDinos/29-refactor-multiple-classes-under-fittrack-package","messageBody":"Refactor multiple classes","fileTypesAndContributionMap":{}},{"hash":"47f651880c4c225a85b5e4441c517910643a28ea","isMergeCommit":false,"messageTitle":"Add user parameters to get points. Add additional output functionalities for training session.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":11,"deletions":4}}},{"hash":"f9d32c54548397eba2dbd5914c506ff1d6eb246b","isMergeCommit":true,"messageTitle":"Merge pull request #34 from CheeKiangg/33-refactor-exercisestation-class","messageBody":"Refactor: changed input parameters and abstract setPerformance function","fileTypesAndContributionMap":{}}]},{"date":"2024-10-15","commitResults":[{"hash":"0f894db7ff600e09d018a96c8564c725cd71499f","isMergeCommit":true,"messageTitle":"Merge pull request #49 from CheeKiangg/Branch-UpdateCalculatorClasses","messageBody":"Branch update calculator classes","fileTypesAndContributionMap":{}},{"hash":"efb3ef0d9b1e7ee69bf4fba7986db1c44d2e0ef5","isMergeCommit":false,"messageTitle":"Add test for TrainingSession","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":65,"deletions":0}}},{"hash":"79571615e02edfbed2c4d2802d9586bfc285030e","isMergeCommit":false,"messageTitle":"Update TrainingSession test class","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":1,"deletions":1}}},{"hash":"b322bbbb0fff6c27df80e8d5de7e10e71a4db6ec","isMergeCommit":false,"messageTitle":"Fix input for TrainingSession test","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":5,"deletions":5}}},{"hash":"a1aae0e7ee9e61243223111b62005b3df02bc480","isMergeCommit":false,"messageTitle":"Fix datetime","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":10,"deletions":7}}},{"hash":"0c98ff53e55521a130fb0e2e059cd4684ffb8b59","isMergeCommit":false,"messageTitle":"Update test","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":10,"deletions":10}}},{"hash":"7436e1aac071e808fc770af6d21918c0d07c30aa","isMergeCommit":false,"messageTitle":"Update printsessiondescription","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":1,"deletions":1}}},{"hash":"532cc7c535b877b5b8bc66e06df797c79b576b57","isMergeCommit":false,"messageTitle":"Implement ShuttleRunCalculator","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":81,"deletions":0}}},{"hash":"b87ed1b9e6ab13a29e5b57d1264af595f417ed37","isMergeCommit":false,"messageTitle":"Update TrainingSessionTest checkstyle","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":2,"deletions":2}}},{"hash":"5c353b58e00db418a0d06d0a6d63c5e021e87a74","isMergeCommit":true,"messageTitle":"Merge pull request #65 from CheeKiangg/Branch-InvalidAgeException","messageBody":"Add invalidAge Exception","fileTypesAndContributionMap":{}},{"hash":"e248fd86ceb6e38e2cd8d0142b6d4351b081d267","isMergeCommit":true,"messageTitle":"Merge pull request #64 from TheDinos/Implement-ShuttleRunCalculator","messageBody":"Implement ShuttleRunCalculator","fileTypesAndContributionMap":{}},{"hash":"edcc392fb92ed624fbe6385b3117f1e0993c681a","isMergeCommit":false,"messageTitle":"Implement WalkAndRunCalculator class","messageBody":"Add reverseComparison to ensure that point calculation works for timings\nRefactor adding of subtables as a Calculator class function\nRefactor getPointsFromTable method to include reverseComparison boolean\n","fileTypesAndContributionMap":{"functional-code":{"insertions":94,"deletions":40}}},{"hash":"4e810e1a6ed0d5a04cf46c9d0f16971e2081f436","isMergeCommit":false,"messageTitle":"Rename constants to fit checkstyle","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":7,"deletions":7}}},{"hash":"a0bdab5229bbef0b150f2d6cfdfcdca1543b8e32","isMergeCommit":false,"messageTitle":"Implement ShuttleRunCalculatorTest class.","messageBody":"Refactor ordering of TreeMap to store timing values.\nRefactor logic of comparison to get points for timing exercises.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":35,"deletions":34},"test-code":{"insertions":30,"deletions":0}}},{"hash":"db48a3938f1eefa1efd8337b1732a28dde46602e","isMergeCommit":false,"messageTitle":"Refactor output for TrainingSession","messageBody":"Edit toString of ExerciseStation classes\n","fileTypesAndContributionMap":{"functional-code":{"insertions":8,"deletions":8},"test-code":{"insertions":12,"deletions":12}}},{"hash":"0aaa90ab1056e2d6c6039e352bbf39e6e9503c86","isMergeCommit":true,"messageTitle":"Merge pull request #74 from CheeKiangg/Branch-RefactorNonTimingCalculator","messageBody":"Refactor non-time calculator classes","fileTypesAndContributionMap":{}},{"hash":"8cdf01c3a14b35c54312b55a545c025914e96925","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S1-CS2113-W13-2/tp into Branch_Recitfy_TrainingSession_Outputs","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e1d4f51dbb4f0c0641ba23d36cc9a74952d7bb0e","isMergeCommit":false,"messageTitle":"Update expected outputs","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":5,"deletions":3},"test-code":{"insertions":6,"deletions":6}}},{"hash":"2a1cb444624161b40d3f44996aefeca055cf6ac2","isMergeCommit":false,"messageTitle":"Add newling for printSessionDescription of TrainingSession class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1},"test-code":{"insertions":2,"deletions":1}}},{"hash":"0646aab86175683a9de4a2ead9818420d4fc5898","isMergeCommit":false,"messageTitle":"Rectify newline for TrainingSessionTest","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":2,"deletions":2}}},{"hash":"6b476f7112748c10e0916280868c74fd957bbea8","isMergeCommit":false,"messageTitle":"Rectify award calculation in TrainingSession class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"8a68fe95b1dc45f312c9fe98cfe1a5ae3234bcea","isMergeCommit":true,"messageTitle":"Merge pull request #77 from TheDinos/Branch-recitfy-award-calculating","messageBody":"Rectify award calculation in TrainingSession class","tags":["v1.0"],"fileTypesAndContributionMap":{}}]},{"date":"2024-10-16","commitResults":[{"hash":"8b4fe9d75c439a64a07181507472a083a6cf9dfe","isMergeCommit":false,"messageTitle":"Add assertion for age input in calculatePoints method.","messageBody":"Add assetion for  exerciseNum in editExercise method.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":2,"deletions":0},"other":{"insertions":4,"deletions":3}}},{"hash":"12fadd3c0364ae1425e00ecb6cb1d40d2712cc31","isMergeCommit":false,"messageTitle":"Update assertion condition","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"55062235a936c034f069733d50eb0594889e68eb","isMergeCommit":false,"messageTitle":"Update build gradle file","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":4,"deletions":5}}},{"hash":"66865c73fa9c5cb20d0ae618d96f70a4cb524ec3","isMergeCommit":true,"messageTitle":"Merge pull request #81 from CheeKiangg/Branch-AddAssertions","messageBody":"Feat: Add assertions in calculator and lookupkey class","fileTypesAndContributionMap":{}}]},{"date":"2024-10-22","commitResults":[{"hash":"a5c97b525c6bfc556f2aef8f20dc8da89047f7fa","isMergeCommit":true,"messageTitle":"Merge pull request #85 from Zackermax/84-fix-modify-parser-to-accommodate-changes-to-trainingsession","messageBody":"Fix: Modify Parser to accommodate changes to TrainingSession","fileTypesAndContributionMap":{}},{"hash":"a5bc76210bd08dc4b822c517548b81ea2b825920","isMergeCommit":false,"messageTitle":"Process rep data differently for timing exercises.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":17,"deletions":2},"test-code":{"insertions":2,"deletions":2}}},{"hash":"4142db762a8c4221ac8af43043ffa9a3d4d3b6f9","isMergeCommit":true,"messageTitle":"Merge pull request #90 from Zackermax/89-fix-modify-parser-to-accommodate-changes-to-trainingsession","messageBody":"Fix: Modify Parser to accommodate changes to TrainingSession","fileTypesAndContributionMap":{}},{"hash":"25670998035a19abb7f8ab7d201768a11e8faf77","isMergeCommit":false,"messageTitle":"Update sessionDatetime in TrainingSession to LocalDatetime object.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":2,"deletions":2}}},{"hash":"111251e713e30415d08418df611b2737b169177d","isMergeCommit":false,"messageTitle":"Update accurate WalkAndRun timings. Fix TrainingSession bug.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":20,"deletions":21},"test-code":{"insertions":1,"deletions":1}}},{"hash":"63971309269825eec7938ba940cabfcb596b672c","isMergeCommit":false,"messageTitle":"Implement \"NA\" initial value for timing related exercises. Update JUnit tests accordingly.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":26,"deletions":11},"test-code":{"insertions":3,"deletions":3}}},{"hash":"ba32ddee1c975ca7215f484a94a89d8326eab413","isMergeCommit":false,"messageTitle":"Update constant checkstyle in ExerciseStation class.","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":3,"deletions":1}}},{"hash":"157c2300af84cbd5f71dd9ce18ab77bbb92ba540","isMergeCommit":false,"messageTitle":"Create WalkAndRunCalculatorTest.","messageBody":"Update TrainingSessionTest to include test for editing WalkAndRun exericse.\n","fileTypesAndContributionMap":{"test-code":{"insertions":37,"deletions":0}}},{"hash":"874ea28caa4e6cd1c7e12f6a9bedba2a1e8f5a96","isMergeCommit":false,"messageTitle":"Update formatting of toString method of exercise related classes.","messageBody":"Update TrainingSessionTest to match the formatting.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":2},"test-code":{"insertions":2,"deletions":2}}},{"hash":"bd81a4851fc5eb65c84e0abf2347b2e2c3ec2248","isMergeCommit":false,"messageTitle":"Fix format for WalkAndRun timings.","messageBody":"Update and add Junit tests for TrainingSession class.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":12,"deletions":3},"test-code":{"insertions":15,"deletions":1}}},{"hash":"545b0e64069ea8ae0834a0e6573cb06dfca1e4c4","isMergeCommit":true,"messageTitle":"Merge pull request #103 from Zackermax/101-implement-help-function-to-guide-user-on-input-formats","messageBody":"Feat: Add help function","fileTypesAndContributionMap":{}},{"hash":"2a5889d3f56d215909f5684a3ac7e0c584a12659","isMergeCommit":false,"messageTitle":"Add enum class Exercise.","messageBody":"Update TestingSessionTest accordingly.\nUse map to store exercises for TrainingSession.\nUpdate TrainingSession to use Exercise enum.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":40,"deletions":17},"test-code":{"insertions":10,"deletions":5}}},{"hash":"83496cc8b66e1f574e615a2c2519a4043eda589a","isMergeCommit":false,"messageTitle":"Add appropriate class and sequence diagrams.","messageBody":"Add documentation for edit exericse feature.\n","fileTypesAndContributionMap":{"docs":{"insertions":232,"deletions":0}}},{"hash":"08e52267d0f0f1b0f4b346fa97b702c606384012","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into 111-add-editexercise-feature-in-developer-guide","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e4ea24b7cb6b38809dc39d6a59bb5295084df061","isMergeCommit":false,"messageTitle":"Update formatting of Developer guide.","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":0,"deletions":8}}},{"hash":"d5994d3b03e6432ab3041338380afa225eda96a6","isMergeCommit":true,"messageTitle":"Merge pull request #112 from TheDinos/111-add-editexercise-feature-in-developer-guide","messageBody":"Add editexercise feature in developer guide.","fileTypesAndContributionMap":{}}]},{"date":"2024-10-24","commitResults":[{"hash":"41a647d9e45e20439f90f91165e67bc3a356c7a7","isMergeCommit":false,"messageTitle":"Add user input field to each Exercise enum.","messageBody":"Augment Exercise enum with static function to return Exercise object based on user input.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":22,"deletions":6}}}]},{"date":"2024-10-26","commitResults":[{"hash":"f86c95ceee883415b755cbbeaa8d5aa756d1f0e5","isMergeCommit":true,"messageTitle":"Merge pull request #135 from ayushi0803/Fitnessgoal","messageBody":"Fitnessgoal - add delete list ","fileTypesAndContributionMap":{}}]},{"date":"2024-10-29","commitResults":[{"hash":"0b65d4e58b8fdcd4f5c9344b7ba2f1a40ed20b19","isMergeCommit":false,"messageTitle":"Upload general UG format.","messageBody":"Update introduction and first feature of UG.\n","fileTypesAndContributionMap":{"docs":{"insertions":141,"deletions":6}}},{"hash":"53ba8135e15169e02057a091780841ca8a9ca34d","isMergeCommit":false,"messageTitle":"Update UG with example format.","messageBody":"Update introduction and first feature.\n","fileTypesAndContributionMap":{"docs":{"insertions":123,"deletions":22}}},{"hash":"2159670dc810a91224d313c076673ede91bed6bc","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into 146-docs-write-ug-for-high-level-functionalities","messageBody":"# Conflicts:\n#\tdocs/UserGuide.md\n","fileTypesAndContributionMap":{}},{"hash":"0f12b36f1486b95b64f4584d3d343d5a91906759","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into 146-docs-write-ug-for-high-level-functionalities","messageBody":"# Conflicts:\n#\tdocs/UserGuide.md\n","fileTypesAndContributionMap":{}}]}],"ayushi0803":[{"date":"2024-10-02","commitResults":[{"hash":"5327260520399fcb13305141b682ada350139805","isMergeCommit":false,"messageTitle":"this commit has an updated first line in the about us readme file with my personal details instead","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":3,"deletions":7}}},{"hash":"a9ef5a2b77fcf411a20b9fd4d1fde33338c86a1a","isMergeCommit":false,"messageTitle":"this is a commit message with my details added to the readme","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":3,"deletions":7}}},{"hash":"6bfcc78294234a67ece4eceb403797d5a2017899","isMergeCommit":true,"messageTitle":"commit for my line in the read me","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e30b49b320960f4c61316c9f1226119878fad3fe","isMergeCommit":true,"messageTitle":"Merge pull request #5 from ayushi0803/master","messageBody":"tP","fileTypesAndContributionMap":{}}]},{"date":"2024-10-26","commitResults":[{"hash":"b979baab01c27223e852ac5909d672b79ef93155","isMergeCommit":false,"messageTitle":"fitness goals - add, delete, list maintaining all original ownership and correct indentations","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":219,"deletions":2}}},{"hash":"c540644eb35d79f45684179ac833488449053adc","isMergeCommit":false,"messageTitle":"no message","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}}]},{"date":"2024-10-29","commitResults":[{"hash":"ad697371ac9482a33139b4db86f1ae5c346eb362","isMergeCommit":false,"messageTitle":"add goals features to UG - add, delete, list goals","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":29,"deletions":0},"test-code":{"insertions":4,"deletions":0}}}]}],"Zackermax":[{"date":"2024-10-02","commitResults":[{"hash":"abc9b35e85fbb0e069a5de2dccfc2589105bcdce","isMergeCommit":false,"messageTitle":"Docs: Rename placeholders","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":4,"deletions":8}}},{"hash":"bdbd8645c486f6111d2f681b2a5c4816b015e070","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Zackermax-AboutUs","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"fc50cb5ecafe35d10936b593398acbf6422878ea","isMergeCommit":true,"messageTitle":"Merge pull request #1 from Zackermax/Zackermax-AboutUs","messageBody":"Docs: Rename placeholders","fileTypesAndContributionMap":{}}]},{"date":"2024-10-08","commitResults":[{"hash":"a27cafab2d548cca88a4fbee40b16de80138fd50","isMergeCommit":false,"messageTitle":"Feat: Parse input, set user gender and age, framework to save and read savefile, i/o interactions","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":331,"deletions":21},"docs":{"insertions":4,"deletions":4}}},{"hash":"92ee824ee64911a1ed648819ea5044b7e04b94b4","isMergeCommit":true,"messageTitle":"Merge pull request #6 from Zackermax/master","messageBody":"Feat: Parse input, set user gender and age, savefile framework, i/o interactions","fileTypesAndContributionMap":{}}]},{"date":"2024-10-09","commitResults":[{"hash":"7250bda0c11a941d8ea72ac1ee247f965b3322a4","isMergeCommit":false,"messageTitle":"Revert \"Feat: Parse input, set user gender and age, savefile framework, i/o interactions\"","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":21,"deletions":331},"docs":{"insertions":4,"deletions":4}}},{"hash":"1bc14c0c70d883b744c0a76a7040382450f4c7ba","isMergeCommit":true,"messageTitle":"Merge pull request #7 from AY2425S1-CS2113-W13-2/revert-6-master","messageBody":"Revert \"Feat: Parse input, set user gender and age, savefile framework, i/o interactions\"","fileTypesAndContributionMap":{}},{"hash":"3404e3c7e10ae36e5d3d71a80241dbd0d9aba244","isMergeCommit":false,"messageTitle":"Docs: Add personal info to portfolio","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"abd492572b9c3e789917b1214012486509379832","isMergeCommit":true,"messageTitle":"Merge pull request #8 from Zackermax/add-Zackermax-info","messageBody":"Docs: Add personal info to portfolio","fileTypesAndContributionMap":{}},{"hash":"6580e43e5d87fa276c06432fdf24f9ddd6dfc2f9","isMergeCommit":false,"messageTitle":"Feat: Add Gender Enum","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":6,"deletions":0}}},{"hash":"9d9512704876ae20f44d15c27fcdeb13b75f68f2","isMergeCommit":false,"messageTitle":"Bugfix: Add newline to end of Gender","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":4,"deletions":4}}},{"hash":"f05596296451474b7a7befe2217cfb4e549293f3","isMergeCommit":true,"messageTitle":"Merge pull request #14 from Zackermax/9-implement-gender-enum-for-user-class","messageBody":"Feat: Add Gender Enum","fileTypesAndContributionMap":{}},{"hash":"117a32000a0ba5351c4a04514d0bd7f6f427b869","isMergeCommit":false,"messageTitle":"Feat: Add user class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":29,"deletions":0},"other":{"insertions":2,"deletions":2},"docs":{"insertions":1,"deletions":1}}},{"hash":"59f752afba60617c024a14002b9183689fb9c305","isMergeCommit":true,"messageTitle":"Merge pull request #15 from Zackermax/10-implement-user-class-to-store-user-data","messageBody":"Feat: Add user class","fileTypesAndContributionMap":{}},{"hash":"ac033987917e77b39d66edf35ec02e49a8a410ab","isMergeCommit":false,"messageTitle":"Feat: Add command parser, ui and savefile framework","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":290,"deletions":13}}},{"hash":"a05d6ae796894646d4b6420647faa9a16b3d766d","isMergeCommit":true,"messageTitle":"Merge pull request #16 from Zackermax/11-implement-command-parser-for-fittrack-cli","messageBody":"Feat: Add command parser, ui and savefile framework","fileTypesAndContributionMap":{}},{"hash":"49f7cd33890d92509da3f858e1483b0fea53ba2e","isMergeCommit":true,"messageTitle":"Merge pull request #21 from CheeKiangg/17-implement-lookupkey-class","messageBody":"feat: Implemented LookUpKey Class that takes into account gender and age","fileTypesAndContributionMap":{}}]},{"date":"2024-10-10","commitResults":[{"hash":"ba3d818783d64b3591f7234bb37888b552f86286","isMergeCommit":false,"messageTitle":"Refactor: Syntax standardization","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":10,"deletions":8}}},{"hash":"65a7b2618dd09b614ae1b740676fb40f77187f3c","isMergeCommit":true,"messageTitle":"Merge pull request #37 from CheeKiangg/35-include-tostring-function-to-exercisestations-class","messageBody":"feat: implement tostring() function for all exercisestation classes","fileTypesAndContributionMap":{}},{"hash":"2fe5111ec3a4467848b565498af8daa296072666","isMergeCommit":true,"messageTitle":"Merge pull request #38 from Zackermax/36-refactor-syntax-standardization","messageBody":"Refactor: Syntax standardization","fileTypesAndContributionMap":{}}]},{"date":"2024-10-11","commitResults":[{"hash":"4c47e0bb26318da3bf053d88fa78738b960da94f","isMergeCommit":false,"messageTitle":"Feat: Implement ui for add and delete sessions","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":45,"deletions":12}}}]},{"date":"2024-10-12","commitResults":[{"hash":"e50a62873dc76e09ff15c78b69982dabceb802f9","isMergeCommit":false,"messageTitle":"Refactor: Adhere to CI Java Style","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":63,"deletions":66}}},{"hash":"ee0d8d29f43f220bfc2eba48974f536f6467aee0","isMergeCommit":false,"messageTitle":"Refactor: Adhere to CI Java Style","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":33,"deletions":24}}},{"hash":"c05faa0b85d8139d851357d2fcdfabc61ade893b","isMergeCommit":true,"messageTitle":"Merge pull request #41 from Zackermax/40-implement-ui-for-add-and-delete-sessions","messageBody":"Feat: Implement ui for add and delete sessions","fileTypesAndContributionMap":{}},{"hash":"95195f65a21918cc0c9bfbc8e922675fcad72ec7","isMergeCommit":false,"messageTitle":"Feat: JUnit tests for Ui class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":5,"deletions":0},"docs":{"insertions":2,"deletions":2},"test-code":{"insertions":119,"deletions":12}}}]},{"date":"2024-10-13","commitResults":[{"hash":"94743c9b4e79ee8950c99b34439c23123c7008ec","isMergeCommit":true,"messageTitle":"Merge pull request #43 from Zackermax/42-implement-framework-for-junit-tests","messageBody":"Feat: JUnit tests for Ui class","fileTypesAndContributionMap":{}},{"hash":"40b736cee5d4b7fdcc41aede070afe521174ef76","isMergeCommit":false,"messageTitle":"Feat: Implement Logger class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":28,"deletions":0}}},{"hash":"603b898e1abf604ceb1c8100931b1fcb85ccb301","isMergeCommit":false,"messageTitle":"Refactor: Adhere to CI style","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":9,"deletions":1}}},{"hash":"a6790a031ed9cff428675e2bca7811c96e34445a","isMergeCommit":false,"messageTitle":"Bugfix: Missing semicolon","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1}}},{"hash":"6c433fb0a24bdbd6f51d63274f641fbff3e7ad58","isMergeCommit":false,"messageTitle":"Refactor: Adhere to CI styling","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":5,"deletions":1}}},{"hash":"8447fa80acb5f33b3727e2625907ee6f5b67b67b","isMergeCommit":false,"messageTitle":"Refactor: Adhere to CI styling","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":7,"deletions":3}}},{"hash":"e6452b93f764795a694daa3a13e606fd64c65758","isMergeCommit":false,"messageTitle":"Feat: Implement Logging for SaveFile","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":2,"deletions":1}}},{"hash":"65508aa03d6ab6badce8f8bf942da3f7a530be69","isMergeCommit":false,"messageTitle":"Feat: Enable assertions and implement for FitTrack, Ui, Parser and Storage","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":81,"deletions":22},"other":{"insertions":1,"deletions":0}}},{"hash":"51112d876e1852e0f29d41e41007374d83512514","isMergeCommit":true,"messageTitle":"Merge pull request #47 from Zackermax/46-enable-assertions","messageBody":"Feat: Enable assertions and implement for FitTrack, Ui, Parser, Storage","fileTypesAndContributionMap":{}}]},{"date":"2024-10-15","commitResults":[{"hash":"1cf858527264254dc10727a485924b2d40a29103","isMergeCommit":true,"messageTitle":"Merge pull request #75 from TheDinos/Branch_Recitfy_TrainingSession_Outputs","messageBody":"Branch recitfy training session outputs","fileTypesAndContributionMap":{}}]},{"date":"2024-10-21","commitResults":[{"hash":"2aa5a6a15cffb208edd98539d9902d2660abd2e6","isMergeCommit":false,"messageTitle":"Fix: Modify Parser to accommodate changes to TrainingSession","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":2,"deletions":2}}}]},{"date":"2024-10-22","commitResults":[{"hash":"ea88f523a5d9b2d74c918451bd6068addb7649f2","isMergeCommit":false,"messageTitle":"Fix: Modify Parser to accommodate changes to TrainingSession","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":3,"deletions":2}}},{"hash":"b0c5bc298fac34bb89f0d36004d7df8dea50a3fd","isMergeCommit":true,"messageTitle":"Merge pull request #88 from TheDinos/86-modify-and-process-the-input-for-reps-in-editexercise-method-of-trainingsession-class","messageBody":"Process rep data differently for timing exercises.","fileTypesAndContributionMap":{}},{"hash":"369a49738b0e74c754624afadd8b65a00be4a343","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/AY2425S1-CS2113-W13-2/tp into 89-fix-modify-parser-to-accommodate-changes-to-trainingsession","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2df08125958c8adad6a6152af7ab5bd5a4b2cffa","isMergeCommit":true,"messageTitle":"Merge pull request #91 from TheDinos/82-modify-datetime-input-type-to-trainingsession-class","messageBody":"Update sessionDatetime in TrainingSession to LocalDatetime object.","fileTypesAndContributionMap":{}},{"hash":"04d7df7ab5a2162d50f66ccd33e6d492fd356c64","isMergeCommit":false,"messageTitle":"Fix: Modify UiTest to accommodate changes to Ui","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":4,"deletions":4}}},{"hash":"b8eee8cf9db241c8141f9335e9d1d2dd5a058d37","isMergeCommit":true,"messageTitle":"Merge pull request #93 from Zackermax/92-fix-modify-uitest-to-accommodate-changes-to-ui","messageBody":"Fix: Modify UiTest to accommodate changes to Ui","fileTypesAndContributionMap":{}},{"hash":"3a8a5cd5a14c06b5064a1ea6f696d253429e2368","isMergeCommit":true,"messageTitle":"Merge pull request #94 from TheDinos/83-rectify-timings-for-walkandruncalculator","messageBody":"Update accurate WalkAndRun timings.","fileTypesAndContributionMap":{}},{"hash":"b39d7f98d6cfad72bd2e24500be560cfe526b531","isMergeCommit":true,"messageTitle":"Merge pull request #95 from TheDinos/87-implement-initial-values-for-timing-exercises","messageBody":"Implement \"NA\" initial value for timing related exercises.","fileTypesAndContributionMap":{}},{"hash":"73a03aa2a3cfd581b7403b82637dfd604db2a5a0","isMergeCommit":true,"messageTitle":"Merge pull request #96 from TheDinos/69-implement-junit-test-for-walkandruncalculator","messageBody":"Create WalkAndRunCalculatorTest.","fileTypesAndContributionMap":{}},{"hash":"dfb4e2a23fb83155ac57e5d100625624859b931b","isMergeCommit":true,"messageTitle":"Merge pull request #98 from TheDinos/97-update-tostring-method-of-walkandrun-and-shuttlerun","messageBody":"Update formatting of toString method of exercise related classes.","fileTypesAndContributionMap":{}},{"hash":"cb0b3c63437bcd18adf68b64d350d56c6457a9aa","isMergeCommit":true,"messageTitle":"Merge pull request #102 from TheDinos/99-fix-tostring-formatting-for-walkandrun","messageBody":"Fix format for WalkAndRun timings.","fileTypesAndContributionMap":{}},{"hash":"e2f061b153a225fddc7ace561c7b1c6ed1a0d384","isMergeCommit":false,"messageTitle":"Feat: Add help function","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":34,"deletions":8}}},{"hash":"ee0c6ef77ee3f5e268a307e90527872c20220cec","isMergeCommit":false,"messageTitle":"Bugfix: Adjusted testPrintAddedSession test case to fit new format","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":4,"deletions":3}}},{"hash":"8e1364d0219e799837f20c556cd1bcc39453884b","isMergeCommit":true,"messageTitle":"Merge pull request #106 from TheDinos/105-add-enums-for-exercises-to-improve-readability-of-code","messageBody":"Add enum class Exercise.","fileTypesAndContributionMap":{}},{"hash":"b732048e7a4842c99319786af3b1fafcc5c8391d","isMergeCommit":false,"messageTitle":"Modify Parser to use new exercises enums","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":44,"deletions":2},"docs":{"insertions":30,"deletions":0}}},{"hash":"ed0331a8895c652015c880c4485d300acb7fd002","isMergeCommit":false,"messageTitle":"Fix: Removed unused import statement","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":0,"deletions":1}}},{"hash":"df08a48966cf4eef6b45a318a1613cf0029dd61f","isMergeCommit":true,"messageTitle":"Merge pull request #108 from Zackermax/107-modify-parser-to-use-new-exercises-enums","messageBody":"Modify Parser to use new exercises enums","fileTypesAndContributionMap":{}},{"hash":"ee913c430ac37af5c1f40f5b0daa5344f1520c30","isMergeCommit":false,"messageTitle":"Docs: Write basic Developer Guide for high level functionalities","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":101,"deletions":25}}},{"hash":"dd43abe26b169d49d7afa11964cb497f5cea93bb","isMergeCommit":false,"messageTitle":"Docs: Updated DG high level functionality to Markdown format","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":10,"deletions":15}}},{"hash":"769a936ad5ff09d3f2b420d4608e39ef05a70dda","isMergeCommit":true,"messageTitle":"Merge pull request #110 from Zackermax/104-docs-write-basic-developer-guide-for-high-level-functionalities","messageBody":"Docs: Write basic Developer Guide for high level functionalities","fileTypesAndContributionMap":{}}]},{"date":"2024-10-24","commitResults":[{"hash":"cdf19c9e3002e146af9eb364b7fe5ae3011ba0de","isMergeCommit":true,"messageTitle":"Merge pull request #115 from TheDinos/114-implement-user-input-field-for-exercise-enum","messageBody":"Add user input field to each Exercise enum.","fileTypesAndContributionMap":{}},{"hash":"bf6b30e0ed230385d3bcbfbdbf785140d89ef066","isMergeCommit":false,"messageTitle":"Fix: Modify Parser to use new Exercise enum String mapping","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":7,"deletions":35},"other":{"insertions":1,"deletions":2}}},{"hash":"b2ad6a7f807b6b512e8cbbd3da93a562b1c6920c","isMergeCommit":true,"messageTitle":"Merge pull request #117 from Zackermax/116-modify-parser-to-use-new-exercise-enum-string-mapping","messageBody":"Fix: Modify Parser to use new Exercise enum String mapping","fileTypesAndContributionMap":{}}]},{"date":"2024-10-25","commitResults":[{"hash":"488b1b557bc3374508a3a0c07848534eedd98efc","isMergeCommit":true,"messageTitle":"Merge pull request #129 from Yvorm/Implement-Reminder-Functionality","messageBody":"Implement base Reminder functionality","fileTypesAndContributionMap":{}}]},{"date":"2024-10-29","commitResults":[{"hash":"afba2c6f000d5dc76dd70fdbe0c28f8d792e2dcd","isMergeCommit":false,"messageTitle":"Docs: Update DG for High Level Functionalities","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":36,"deletions":32}}},{"hash":"a5e7dc608713130462c705a7769f7a760fdf38a9","isMergeCommit":false,"messageTitle":"Docs: Update DG for High Level Functionalities","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":1,"deletions":1}}},{"hash":"64f5a4c69518397d50608f4649b0161a5114fa09","isMergeCommit":true,"messageTitle":"Merge pull request #145 from CheeKiangg/Branch-MinorFormatting","messageBody":"Branch minor formatting","fileTypesAndContributionMap":{}},{"hash":"58beca64d4131dcbe6a1383cd820d43bf4f73f6d","isMergeCommit":true,"messageTitle":"Merge pull request #149 from TheDinos/146-docs-write-ug-for-high-level-functionalities","messageBody":"Upload general UG format.","fileTypesAndContributionMap":{}},{"hash":"b5cd531c020e63c6c8f45d87ac0f93fe41aa9b68","isMergeCommit":true,"messageTitle":"Merge pull request #148 from ayushi0803/UG","messageBody":"add goals features to UG - add, delete, list goals","fileTypesAndContributionMap":{}},{"hash":"fe277c7b92493a1561891f11a64fec9b489bb96c","isMergeCommit":true,"messageTitle":"Merge pull request #150 from CheeKiangg/146-docs-write-ug-for-high-level-functionalities-1","messageBody":"docs: update user guide command summary table for clarity and formatting","fileTypesAndContributionMap":{}},{"hash":"c7ec4d8cfe6840f358144e31158adda5074f55d2","isMergeCommit":true,"messageTitle":"Merge pull request #151 from TheDinos/146-docs-write-ug-for-high-level-functionalities","messageBody":"146 docs write ug for high level functionalities","fileTypesAndContributionMap":{}},{"hash":"56d03987096348f59475fa6b244e5a5bb7d96ad0","isMergeCommit":false,"messageTitle":"Docs: Write UG for High Level Functionalities","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":1,"deletions":1},"docs":{"insertions":105,"deletions":54}}},{"hash":"00c2f2cc08e834eeefd184e209f74d5e651b308b","isMergeCommit":true,"messageTitle":"Merge pull request #152 from Zackermax/146-docs-write-ug-for-high-level-functionalities-1","messageBody":"Docs: Write UG for High Level Functionalities","fileTypesAndContributionMap":{}}]}],"CheeKiangg":[{"date":"2024-10-02","commitResults":[{"hash":"b9a8321eb608f93137d3cd2c6a5fbc4d90806c32","isMergeCommit":false,"messageTitle":"Docs: Rename placeholders","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":4,"deletions":8}}},{"hash":"ddea82c75fe073d7a23234af193b84d804153941","isMergeCommit":true,"messageTitle":"Merge pull request #2 from CheeKiangg/CheeKiang-AboutUs","messageBody":"Docs: Rename placeholders","fileTypesAndContributionMap":{}}]},{"date":"2024-10-09","commitResults":[{"hash":"d385f32ff46e904543386e4cc169043caa097b02","isMergeCommit":false,"messageTitle":"feat: Implemented LookUpKey Class that takes into account gender and age","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":30,"deletions":0}}},{"hash":"962f3d6a018538345cdb012f7d94123ffe210520","isMergeCommit":true,"messageTitle":"Merge pull request #23 from TheDinos/20-implement-trainingsession-class-to-store-and-edit-training-session-details","messageBody":"Add TrainingSession class.","fileTypesAndContributionMap":{}},{"hash":"31c082946de280b64c6a4e1c649c4f616c3db8e1","isMergeCommit":true,"messageTitle":"Merge pull request #24 from TheDinos/22-implement-printing-of-training-session-to-console-output","messageBody":"Add support for outputting list of exercises.","fileTypesAndContributionMap":{}},{"hash":"165babcbf57488978c8082995267dbf8ed55977a","isMergeCommit":false,"messageTitle":"feat: implemented ExerciseStation Abstract Class and its 6 inherited classes","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":217,"deletions":0}}},{"hash":"ce397c1e9ff393bcc7575a6b4163d1615d4f8099","isMergeCommit":false,"messageTitle":"feat: implemented Calculator Abstract Class and its inherited classes","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":171,"deletions":0}}},{"hash":"56ad6266791a80a1aec47eebd0c56b5651031a85","isMergeCommit":false,"messageTitle":"Refactor: insert calculator package, exercisestaton package and lookupkey class into fittrack","messageBody":"","fileTypesAndContributionMap":{"other":{"insertions":37,"deletions":37}}},{"hash":"723409ceef31d758b453b00278993ce7423763c7","isMergeCommit":true,"messageTitle":"Merge pull request #32 from TheDinos/31-implement-additional-user-and-session-output-functionalities","messageBody":"Add user parameters to get points.","fileTypesAndContributionMap":{}},{"hash":"37c805de7592773f2be42105887a2108a0011173","isMergeCommit":false,"messageTitle":"Refactor: changed input parameters gender and age to just user class \u0026 abstract setPerformance function","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":37,"deletions":24}}}]},{"date":"2024-10-10","commitResults":[{"hash":"3106acb1b6fa83c72d6d2758aad779922042354f","isMergeCommit":false,"messageTitle":"feat: implement tostring() function for all of the exercisestation classes","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":32,"deletions":6}}}]},{"date":"2024-10-13","commitResults":[{"hash":"d1827396d5f83bafabf71043c05f556425a0d078","isMergeCommit":true,"messageTitle":"Merge pull request #45 from Zackermax/44-implement-logger-class","messageBody":"Feat: Implement Logger class","fileTypesAndContributionMap":{}}]},{"date":"2024-10-15","commitResults":[{"hash":"a10974087ea6a0c0a4073fd6b97f3cbc2dfc7da6","isMergeCommit":false,"messageTitle":"feat: added whole data sets for pull ups, situps, sitandreach and standingbroadjump calculator classes.","messageBody":"- abstracted common utility functions to prevent repetition of codes.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":229,"deletions":86}}},{"hash":"7d896175921be6012f13732703b71792a2f41e43","isMergeCommit":true,"messageTitle":"Merge pull request #59 from TheDinos/58-implement-junit-test-for-trainingsession","messageBody":"Add test class for TrainingSession","fileTypesAndContributionMap":{}},{"hash":"868c9f8cfbf1b4982e5423045e8b0099069a0b88","isMergeCommit":false,"messageTitle":"Feat: implement JUnits test for PullUpCalculator","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":109,"deletions":0}}},{"hash":"806903489670bd335e447660b497d826914b5b78","isMergeCommit":false,"messageTitle":"adhere to coding style","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":5,"deletions":5}}},{"hash":"0c90e3ef44659ef66ea8097021577ecda9196c85","isMergeCommit":true,"messageTitle":"Merge pull request #60 from CheeKiangg/Branch-JUnitTestsPullUpCalculator","messageBody":"Branch JUnits for PullUpCalculator","fileTypesAndContributionMap":{}},{"hash":"61500bcb2ff8d311ab6e31a0359b2d9d7f846f04","isMergeCommit":false,"messageTitle":"Add newline at end of file","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":5,"deletions":5},"test-code":{"insertions":1,"deletions":1}}},{"hash":"0979c1ad3364d94cb78b10b88ebefc2762027bdc","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Branch-JUnitTestsPullUpCalculator","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"7b87fdd451573da4a3e6ab7af502fa264a0295a7","isMergeCommit":true,"messageTitle":"Merge pull request #61 from CheeKiangg/Branch-JUnitTestsPullUpCalculator","messageBody":"update coding standard","fileTypesAndContributionMap":{}},{"hash":"128df532945cbf2899f3a1687fdc5631b87e06a6","isMergeCommit":false,"messageTitle":"Feat: Implemented InvalidAgeException and handled exception in affected classes","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":31,"deletions":8}}},{"hash":"0ca0f643ac69295e27f75ed5cab7552f983d95b2","isMergeCommit":true,"messageTitle":"Merge pull request #67 from TheDinos/Branch_Implement_Walkandruncalculator","messageBody":"Implement WalkAndRunCalculator class","fileTypesAndContributionMap":{}},{"hash":"a152080ada37994095e03264c45069e485c22f11","isMergeCommit":true,"messageTitle":"Merge pull request #71 from TheDinos/Branch_Implement_Junit_Test_For_Shuttleruncalculator","messageBody":"Implement ShuttleRunCalculatorTest class.","fileTypesAndContributionMap":{}},{"hash":"f78082181d8be48f62eab942911f3e0c00320269","isMergeCommit":false,"messageTitle":"feat: updated non-time calculator classes with added utlitiy function.","messageBody":"- implement 3D-array instead for datas to increase readability and reduce repetition.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":111,"deletions":180}}}]},{"date":"2024-10-16","commitResults":[{"hash":"0d7d04958db4ed9eafd01a2ef664b861b40dc520","isMergeCommit":true,"messageTitle":"Merge pull request #80 from TheDinos/78-add-assertions-for-shuttleruncalculator-and-trainingsession","messageBody":"Add assertions for TrainingSession and ShuttleRunCalculatorClass.","fileTypesAndContributionMap":{}},{"hash":"21c14b0981a63dce058f8708b7d68a035be54967","isMergeCommit":false,"messageTitle":"Feat: Added assertion in calculator and lookupkey class","messageBody":"-verified the internal logic of these classes\n","fileTypesAndContributionMap":{"functional-code":{"insertions":4,"deletions":0}}},{"hash":"56c139370ffd9700d8ca8242c858c12eef16c4d2","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Branch-AddAssertions","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-10-22","commitResults":[{"hash":"e6add0ef6c5b866ae4d46b0418c13ca9297fcc3d","isMergeCommit":false,"messageTitle":"Add PlantUML diagrams for ExerciseStation class hierarchy and PullUpStation sequence","messageBody":"- Add class diagram to represent ExerciseStation abstract class and its derived classes (PullUpStation, SitUpStation, ShuttleRunStation, etc.)\n- Add sequence diagram showing interaction between TrainingSession, PullUpStation, and PullUpCalculator during setPerformance and points calculation\n","fileTypesAndContributionMap":{"docs":{"insertions":127,"deletions":0}}},{"hash":"01cea4884cab84a1c69954aee7d83afa4c38faa7","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Branch-EditDeveloperGuide","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"d247a70faa862dadd47531c98918b63d9d4c1a2f","isMergeCommit":false,"messageTitle":"feat: update DeveloperGuide.md on points calculation feature","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":89,"deletions":19}}},{"hash":"edf33669b31a4b97595d721904405b0a1a087b86","isMergeCommit":true,"messageTitle":"Merge pull request #113 from CheeKiangg/Branch-EditDeveloperGuide","messageBody":"Branch edit developer guide","fileTypesAndContributionMap":{}}]},{"date":"2024-10-29","commitResults":[{"hash":"b687af5f285176833a6e276819736bd12c621166","isMergeCommit":false,"messageTitle":"refactor: replace magic booleans with descriptive constants and improve clarity in sorting logic","messageBody":"- Replaced magic booleans (`reverseOrder`, etc.) with more descriptive constants:\n  - `IS_HIGHER_NUMBER_BETTER` for comparing whether higher performance is better.\n  - `SHOULD_SORT_DESCENDING` to indicate if the `TreeMap` should be sorted in descending order.\n\n- Applied proper boolean naming conventions across `Calculator` and child classes (`PullUpCalculator`, `ShuttleRunCalculator`, etc.).\n\n- Improved readability and clarity by ensuring the intent of boolean values is explicitly clear.\n","fileTypesAndContributionMap":{"functional-code":{"insertions":38,"deletions":35}}},{"hash":"5ec6f3412b0844421a1b679745c2c907187f52fe","isMergeCommit":false,"messageTitle":"docs: update getPoints() PlantUML diagram for improved clarity and visual consistency","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":9,"deletions":3}}},{"hash":"f8b6b6ffb51ebb5d25d7e49729959e989cd85fd3","isMergeCommit":true,"messageTitle":"Merge pull request #144 from Zackermax/137-docs-update-dg-for-high-level-functionalities","messageBody":"Docs: Update DG for High Level Functionalities","fileTypesAndContributionMap":{}},{"hash":"81564b0b203748f54b8a92359ea8f48c39ea9e66","isMergeCommit":false,"messageTitle":"docs: update user guide command summary table for clarity and formatting","messageBody":"- Updated the Command Summary section of the user guide to improve readability.\n- Reformatted the table for commands such as `todo`, `deadline`, `event`, `list`, `mark`, `unmark`, `delete`, and `find`.\n- Provided clearer examples of how to use the commands.\n- Improved the layout to ensure proper alignment of command format and examples.\n","fileTypesAndContributionMap":{"docs":{"insertions":11,"deletions":2}}}]}],"Yvorm":[{"date":"2024-10-02","commitResults":[{"hash":"1aa24a1e47054325017b5490c36a733dfe3fa71f","isMergeCommit":false,"messageTitle":"Implement \"AboutUs\" Tutorial section","messageBody":"","fileTypesAndContributionMap":{"docs":{"insertions":3,"deletions":7}}},{"hash":"b7c89e5806f90e977b9fb103a3f9472c8bfa0971","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into Avjay-AboutUs","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e5aaa00f9736e1c7b34b3084e10deb76b574e8d1","isMergeCommit":true,"messageTitle":"Merge pull request #4 from Yvorm/Avjay-AboutUs","messageBody":"[Avjay Bhar] Implement \"Avjay-AboutUs\" Tutorial section","fileTypesAndContributionMap":{}}]},{"date":"2024-10-25","commitResults":[{"hash":"149e644aa9e5d9030b817dcb26ed3a2795f3febb","isMergeCommit":false,"messageTitle":"Add Reminder class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":35,"deletions":0}}},{"hash":"b6593dc124f024e78833a1b731977dc02c7cd463","isMergeCommit":false,"messageTitle":"Refine Reminder class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":11,"deletions":21}}},{"hash":"224233177af4ce3ecd3d844763622ef337b6973b","isMergeCommit":false,"messageTitle":"Implement reminder-related command parsing in Parser class","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":62,"deletions":8}}},{"hash":"28dd783f16caa0729c1e7512233f7da00dfcd240","isMergeCommit":false,"messageTitle":"Add UI messages and User Guide entries for reminder add/delete/list commands","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":68,"deletions":11}}},{"hash":"f59da395d6f697a58b68c1ea8b644c62244800bc","isMergeCommit":false,"messageTitle":"Disambiguate and rename Session-add UI message","messageBody":"","fileTypesAndContributionMap":{"test-code":{"insertions":2,"deletions":2}}},{"hash":"16b67f95ddeb8cc13ab5a8d419cd6516beb81161","isMergeCommit":false,"messageTitle":"Add remindlist array and modify parsing input to accomodate reminder-related commands","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":4,"deletions":3}}},{"hash":"c3b4b368c50006f36c5b3d609c71a4ac999b5417","isMergeCommit":false,"messageTitle":"Implement upcoming reminder notification at program initialisation","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":64,"deletions":23},"test-code":{"insertions":2,"deletions":2}}},{"hash":"701649394b0677aeeb2ad96887097c25ae514cde","isMergeCommit":false,"messageTitle":"Implement ability to check upcoming reminders via command","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":13,"deletions":6}}},{"hash":"9c98d57c5d958b1c375655a8ac1d76bc6571da50","isMergeCommit":false,"messageTitle":"Edit to match style guide","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":9,"deletions":7}}},{"hash":"1e35ec9b6b5814a493d5707cfee56c3c5f576c18","isMergeCommit":false,"messageTitle":"Remove wildcard imports","messageBody":"","fileTypesAndContributionMap":{"functional-code":{"insertions":45,"deletions":4},"test-code":{"insertions":9,"deletions":7}}}]}]},"authorFileTypeContributionMap":{"TheDinos":{"docs":424,"functional-code":323,"test-code":155},"ayushi0803":{"docs":1,"functional-code":219,"test-code":4},"Zackermax":{"docs":206,"functional-code":501,"test-code":110,"other":1},"CheeKiangg":{"docs":211,"functional-code":540,"test-code":108},"Yvorm":{"docs":2,"functional-code":262,"test-code":12}},"authorContributionVariance":{"TheDinos":14406.771,"ayushi0803":1232.8401,"Zackermax":19806.25,"CheeKiangg":22520.047,"Yvorm":4256.1094},"authorDisplayNameMap":{"TheDinos":"CS2113-W13-2 MARC..HENG","ayushi0803":"CS2113-W13-2 AYUS..ADAV","Zackermax":"CS2113-W13-2 ZACK..FENG","CheeKiangg":"CS2113-W13-2 NG C..IANG","Yvorm":"CS2113-W13-2 BHAR..INGH"}}
